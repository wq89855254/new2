{"remainingRequest":"D:\\program\\frontend\\node_modules\\babel-loader\\lib\\index.js!D:\\program\\frontend\\src\\views\\synthesis\\menu-panel\\MenuPanel.js?vue&type=script&lang=js&","dependencies":[{"path":"D:\\program\\frontend\\src\\views\\synthesis\\menu-panel\\MenuPanel.js","mtime":1553855602363},{"path":"D:\\program\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\program\\frontend\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.array.find-index\";\nimport \"core-js/modules/es6.array.find\";\nimport \"core-js/modules/es6.function.name\";\nimport _objectSpread from \"D:\\\\program\\\\frontend\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/objectSpread\";\nimport _ from \"lodash\";\nimport * as axios from \"axios\";\nimport { createNamespacedHelpers } from \"vuex\";\nimport { MapNav } from \"../../../components/share\";\n\nvar _createNamespacedHelp = createNamespacedHelpers(\"synthesis\"),\n    mapGetters = _createNamespacedHelp.mapGetters,\n    mapMutations = _createNamespacedHelp.mapMutations,\n    mapActions = _createNamespacedHelp.mapActions;\n\nimport { PanelLayout, TimeSelect, HourBtn, ElementBtn, IconElementBtn, SmallTitle } from \"../common\";\nexport default {\n  name: \"menu-panel\",\n  components: {\n    PanelLayout: PanelLayout,\n    TimeSelect: TimeSelect,\n    HourBtn: HourBtn,\n    ElementBtn: ElementBtn,\n    IconElementBtn: IconElementBtn,\n    SmallTitle: SmallTitle,\n    MapNav: MapNav\n  },\n  data: function data() {\n    return {\n      // 总控小时列表和分钟列表\n      zkHourList: [\"00\", \"01\", \"02\", \"03\", \"04\", \"05\", \"06\", \"07\", \"08\", \"09\", \"10\", \"11\", \"12\", \"13\", \"14\", \"15\", \"16\", \"17\", \"18\", \"19\", \"20\", \"21\", \"22\", \"23\"],\n      zkMinuteList: [\"00\", \"06\", \"12\", \"18\", \"24\", \"30\", \"36\", \"42\", \"48\", \"54\"],\n      // 存储单站pup地图中的点数据\n      stationPupMapData: [],\n      // 菜单相关\n      currMenuId: \"severeWeather\",\n      prevMenuId: 'severeWeather',\n      //用于存储上一个选中菜单的id\n      isShowPanel: true,\n      menus: [{\n        id: \"shortPeriodFcst\",\n        name: \"预报预警\",\n        imgSrc: require(\"../../../assets/images/synthesis/menu-shortPeriodFcst.png\")\n      }, {\n        id: \"numberFcst\",\n        name: \"数值预报\",\n        imgSrc: require(\"../../../assets/images/synthesis/menu-numberFcst.png\")\n      }, {\n        id: \"severeWeather\",\n        name: \"强天气\",\n        imgSrc: require(\"../../../assets/images/synthesis/menu-severeWeather.png\")\n      }, {\n        id: \"cloudPicture\",\n        name: \"云图\",\n        imgSrc: require(\"../../../assets/images/synthesis/menu-cloudPicture.png\")\n      }, {\n        id: \"station\",\n        name: \"自动站\",\n        imgSrc: require(\"../../../assets/images/synthesis/menu-station.png\")\n      }, {\n        id: \"swan\",\n        name: \"雷达拼图\",\n        imgSrc: require(\"../../../assets/images/synthesis/menu-swan.png\")\n      }, {\n        id: \"statonPup\",\n        name: \"单站pup\",\n        imgSrc: require(\"../../../assets/images/synthesis/menu-statonPup.png\")\n      }, {\n        id: \"make\",\n        name: \"产品制作\",\n        imgSrc: require(\"../../../assets/images/synthesis/menu-make.png\")\n      }]\n    };\n  },\n  computed: _objectSpread({}, mapGetters([\"currSplitScreen\", //当前分屏中的所有配置\n  \"severeWeather\", //强天气\n  \"cloudPicture\", //云图\n  \"pup\", //pup拼图\n  \"station\", //自动站\n  \"swan\", //SWAN拼图\n  \"stationPup\", //单站pup\n  \"fcstWarning\", //预报预警\n  \"valueFcst\", //数值预报\n  \"radarFeature\" //雷达特征量\n  ]), {\n    currMenuName: function currMenuName() {\n      var _this = this;\n\n      return this.menus.find(function (el) {\n        return el.id === _this.currMenuId;\n      }).name;\n    },\n    stationPupStationId: {\n      get: function get() {\n        return this.stationPup.currStationId;\n      },\n      set: function set(value) {\n        this.stp_update_station_id(value);\n      }\n    }\n  }),\n  watch: {},\n  created: function created() {\n    this.debouncedCpAdjustAging = _.debounce(this.onCpAdjustAging, 300);\n    this.debouncedStAdjustThreshold = _.debounce(this.onStAdjustThreshold, 300);\n    this.debouncedSnAdjustLvel = _.debounce(this.onSnAdjustLvel, 300);\n    this.debouncedSnAdjustAging = _.debounce(this.onSnAdjustAging, 300);\n    this.debouncedAutoRefresh = _.debounce(this.onClickAutoRefresh, 300);\n    this.debouncedReturnLatest = _.debounce(this.onClickReturnLatest, 300);\n  },\n  mounted: function mounted() {\n    // 定时刷新关闭时才调用\n    // // 得到最新的预报预警并提交请求数据的突变\n    // this.get_latest_fcst_warning_time();\n    // // 得到最新的数值预报时间\n    // this.get_latest_value_fcst_time();\n    // 初始化定时刷新\n    this.is_time_to_refresh(); // 单站pup_小地图数据\n\n    this.getStationPupMapData();\n  },\n  methods: _objectSpread({}, mapMutations([\"select_element\", \"sw_update_hour\", \"sw_update_element_condition\", \"cp_cut_tabs\", \"cp_aging_change\", \"st_threshold_change\", \"st_update_hour\", \"sn_level_change\", \"sn_aging_change\", \"stp_update_station_id\", \"stp_radio_element\", \"update_zk_date\", \"update_zk_hour\", \"update_zk_minute\", \"update_refresh_status\", //预报预警\n  \"fw_update_short_term\", \"fw_update_short_time\", \"fw_switch_warn_type\", \"fw_update_warn_state\", \"fw_update_warn_province\", // 数值预报\n  \"vf_switch_tabs\", \"vf_switch_element_tabs\", \"vf_update\"]), mapActions([\"get_latest_element_time\", \"get_station_pup_latest_element_time\", \"get_latest_zk_time\", \"update_all_checked_element_time\", \"is_time_to_refresh\", // 预报预警\n  \"get_latest_fcst_warning_time\", // 数值预报\n  \"get_latest_value_fcst_time\"]), {\n    //强天气_更新小时\n    onSwUpdateHour: function onSwUpdateHour(hour) {\n      if (this.severeWeather.currHour === hour) return;\n      this.sw_update_hour(hour);\n    },\n    //强天气_更新要素条件\n    onSwUpdateElementCondition: function onSwUpdateElementCondition(ele, conditionKey, conditionValue) {\n      var eleOption = _objectSpread({}, ele, {\n        conditionKey: conditionKey,\n        conditionValue: conditionValue\n      });\n\n      this.sw_update_element_condition(eleOption);\n\n      if (conditionKey === \"currAcc\") {\n        this.get_latest_element_time(eleOption);\n      }\n    },\n    // 云图_tab切换\n    onCpTabsChange: function onCpTabsChange(e) {\n      this.cp_cut_tabs(e.target.value);\n    },\n    // 云图_时效改变时\n    onCpAgingChange: function onCpAgingChange(eleOption, aging) {\n      this.cp_aging_change(_objectSpread({}, eleOption, {\n        latestAging: aging\n      }));\n    },\n    //云图_左右调整时效,sign值为-1 or 1\n    onCpAdjustAging: function onCpAdjustAging(eleOption, sign) {\n      var currIndex = eleOption.agingList.findIndex(function (aging) {\n        return aging === eleOption.currAging;\n      });\n      var lastIndex = eleOption.agingList.length - 1;\n      var nextIndex = currIndex + sign;\n\n      if (nextIndex < 0) {\n        nextIndex = lastIndex;\n      } else if (nextIndex > lastIndex) {\n        nextIndex = 0;\n      }\n\n      this.cp_aging_change(_objectSpread({}, eleOption, {\n        latestAging: eleOption.agingList[nextIndex]\n      }));\n    },\n    // 自动站_更新小时\n    onStUpdateHour: function onStUpdateHour(hour) {\n      if (this.station.currHour === hour) return;\n      this.st_update_hour(hour);\n    },\n    // 自动站_阀值更新\n    onStThresholdChange: function onStThresholdChange(eleOption, threshold) {\n      this.st_threshold_change(_objectSpread({}, eleOption, {\n        latestThreshold: threshold\n      }));\n    },\n    //自动站_左右调整阀值,sign值为-1 or 1\n    onStAdjustThreshold: function onStAdjustThreshold(eleOption, sign) {\n      var currIndex = eleOption.thresholdList.findIndex(function (threshold) {\n        return threshold === eleOption.currThreshold;\n      });\n      var lastIndex = eleOption.thresholdList.length - 1;\n      var nextIndex = currIndex + sign;\n\n      if (nextIndex < 0) {\n        nextIndex = lastIndex;\n      } else if (nextIndex > lastIndex) {\n        nextIndex = 0;\n      }\n\n      this.st_threshold_change(_objectSpread({}, eleOption, {\n        latestThreshold: eleOption.thresholdList[nextIndex]\n      }));\n    },\n    // SWAN拼图_层次更新\n    onSnLevelChange: function onSnLevelChange(eleOption, level) {\n      console.log(eleOption, level);\n      this.sn_level_change(_objectSpread({}, eleOption, {\n        latestLevel: level\n      }));\n    },\n    // SWAN拼图_时效更新\n    onSnAgingChange: function onSnAgingChange(eleOption, aging) {\n      this.sn_aging_change(_objectSpread({}, eleOption, {\n        latestAging: aging\n      }));\n    },\n    //SWAN拼图_左右调整层次,sign值为-1 or 1\n    onSnAdjustLvel: function onSnAdjustLvel(eleOption, sign) {\n      var currIndex = eleOption.levelList.findIndex(function (level) {\n        return level.value === eleOption.currLevel;\n      });\n      var lastIndex = eleOption.levelList.length - 1;\n      var nextIndex = currIndex + sign;\n\n      if (nextIndex < 0) {\n        nextIndex = lastIndex;\n      } else if (nextIndex > lastIndex) {\n        nextIndex = 0;\n      }\n\n      this.sn_level_change(_objectSpread({}, eleOption, {\n        latestLevel: eleOption.levelList[nextIndex].value\n      }));\n    },\n    //SWAN拼图_左右调整时效,sign值为-1 or 1\n    onSnAdjustAging: function onSnAdjustAging(eleOption, sign) {\n      var currIndex = eleOption.agingList.findIndex(function (aging) {\n        return aging.value === eleOption.currAging;\n      });\n      var lastIndex = eleOption.agingList.length - 1;\n      var nextIndex = currIndex + sign;\n\n      if (nextIndex < 0) {\n        nextIndex = lastIndex;\n      } else if (nextIndex > lastIndex) {\n        nextIndex = 0;\n      }\n\n      this.sn_aging_change(_objectSpread({}, eleOption, {\n        latestAging: eleOption.agingList[nextIndex].value\n      }));\n    },\n    // 单站pup_小地图数据\n    getStationPupMapData: function getStationPupMapData() {\n      var _this2 = this;\n\n      axios.get(\"/proxy/10.20.67.111/nowcasting/dlsj/zh/single_radar_stations.json\").then(function (data) {\n        _this2.stationPupMapData = data.data[\"全国\"];\n      });\n    },\n    //点击返回最新\n    onClickReturnLatest: function onClickReturnLatest() {\n      this.get_latest_zk_time();\n    },\n    // 点击关闭或开启定时刷新\n    onClickAutoRefresh: function onClickAutoRefresh() {\n      this.update_refresh_status();\n      this.is_time_to_refresh();\n    },\n    // 总控日期改变\n    onZkDateChange: function onZkDateChange(date) {\n      this.update_zk_date(date);\n      this.update_all_checked_element_time();\n    },\n    // 总控小时改变\n    onZkHourChange: function onZkHourChange(hour) {\n      this.update_zk_hour(hour);\n      this.update_all_checked_element_time();\n    },\n    // 总控分钟改变\n    onZkMinuteChange: function onZkMinuteChange(minute) {\n      this.update_zk_minute(minute);\n      this.update_all_checked_element_time();\n    },\n    // 切换菜单\n    onClickSwitchMenu: function onClickSwitchMenu(id) {\n      this.prevMenuId = this.currMenuId;\n\n      if (this.currMenuId !== id) {\n        this.isShowPanel = true;\n        this.currMenuId = id;\n      } else {\n        this.isShowPanel = !this.isShowPanel;\n      }\n\n      if (id === 'statonPup') {// this.$refs.mapNav.map.setView([36.87962060502676, 103.71093750000001])\n        // console.log(this.$refs.mapNav.map.setView([36.87962060502676, 103.71093750000001]));\n      }\n    },\n    // 预报预警_短期预报\n    onFwShortTermChange: function onFwShortTermChange(key, value) {\n      if (key === \"aging\") {\n        var prevAging = this.fcstWarning.shortTerm.aging;\n\n        if (prevAging === value) {\n          value = this.fcstWarning.shortTerm.aging ? \"\" : value;\n        }\n      }\n\n      this.fw_update_short_term({\n        key: key,\n        value: value\n      });\n    },\n    // 预报预警_短时预报\n    onFwShortTimeChange: function onFwShortTimeChange(key, value) {\n      if (key === \"eleList\") {\n        var prevValue = this.fcstWarning.shortTime.eleList.find(function (el) {\n          return el.checked;\n        });\n        value = prevValue && prevValue.id === value ? \"\" : value;\n      }\n\n      this.fw_update_short_time({\n        key: key,\n        value: value\n      });\n    },\n    // 预报预警_国家预警\n    onFwWarnStateChange: function onFwWarnStateChange(key, value) {\n      if (key === \"aging\") {\n        var prevAging = this.fcstWarning.stateWarn.aging;\n\n        if (prevAging === value) {\n          value = this.fcstWarning.stateWarn.aging ? \"\" : value;\n        }\n      }\n\n      this.fw_update_warn_state({\n        key: key,\n        value: value\n      });\n    },\n    // 预报预警_省级预警\n    onFwWarnProvinceChange: function onFwWarnProvinceChange(key, value) {\n      if (key === \"aging\") {\n        var prevAging = this.fcstWarning.provinceWarn.aging;\n        if (prevAging === value) return;\n      } else if (key === \"eleList\") {\n        var prevValue = this.fcstWarning.provinceWarn.eleList.find(function (el) {\n          return el.checked;\n        });\n        value = prevValue && prevValue.id === value ? \"\" : value;\n      }\n\n      this.fw_update_warn_province({\n        key: key,\n        value: value\n      });\n    },\n    // 数值预报_条件更新\n    onVfChange: function onVfChange(sign, value) {\n      var _this3 = this;\n\n      if (sign === \"aging\") {\n        var curr = this.valueFcst.find(function (el) {\n          return el.id === _this3.currSplitScreen.currValueFcstId;\n        });\n        if (curr.aging === value) return;\n      }\n\n      this.vf_update({\n        sign: sign,\n        value: value\n      });\n    },\n    // 数值预报_tabs切换\n    onVfTabsChange: function onVfTabsChange(id) {\n      this.vf_switch_element_tabs(id);\n    }\n  })\n};",{"version":3,"sources":["D:\\program\\frontend\\src\\views\\synthesis\\menu-panel\\MenuPanel.js"],"names":["_","axios","createNamespacedHelpers","MapNav","mapGetters","mapMutations","mapActions","PanelLayout","TimeSelect","HourBtn","ElementBtn","IconElementBtn","SmallTitle","name","components","data","zkHourList","zkMinuteList","stationPupMapData","currMenuId","prevMenuId","isShowPanel","menus","id","imgSrc","require","computed","currMenuName","find","el","stationPupStationId","get","stationPup","currStationId","set","value","stp_update_station_id","watch","created","debouncedCpAdjustAging","debounce","onCpAdjustAging","debouncedStAdjustThreshold","onStAdjustThreshold","debouncedSnAdjustLvel","onSnAdjustLvel","debouncedSnAdjustAging","onSnAdjustAging","debouncedAutoRefresh","onClickAutoRefresh","debouncedReturnLatest","onClickReturnLatest","mounted","is_time_to_refresh","getStationPupMapData","methods","onSwUpdateHour","hour","severeWeather","currHour","sw_update_hour","onSwUpdateElementCondition","ele","conditionKey","conditionValue","eleOption","sw_update_element_condition","get_latest_element_time","onCpTabsChange","e","cp_cut_tabs","target","onCpAgingChange","aging","cp_aging_change","latestAging","sign","currIndex","agingList","findIndex","currAging","lastIndex","length","nextIndex","onStUpdateHour","station","st_update_hour","onStThresholdChange","threshold","st_threshold_change","latestThreshold","thresholdList","currThreshold","onSnLevelChange","level","console","log","sn_level_change","latestLevel","onSnAgingChange","sn_aging_change","levelList","currLevel","then","get_latest_zk_time","update_refresh_status","onZkDateChange","date","update_zk_date","update_all_checked_element_time","onZkHourChange","update_zk_hour","onZkMinuteChange","minute","update_zk_minute","onClickSwitchMenu","onFwShortTermChange","key","prevAging","fcstWarning","shortTerm","fw_update_short_term","onFwShortTimeChange","prevValue","shortTime","eleList","checked","fw_update_short_time","onFwWarnStateChange","stateWarn","fw_update_warn_state","onFwWarnProvinceChange","provinceWarn","fw_update_warn_province","onVfChange","curr","valueFcst","currSplitScreen","currValueFcstId","vf_update","onVfTabsChange","vf_switch_element_tabs"],"mappings":"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","sourcesContent":["import _ from \"lodash\";\r\nimport * as axios from \"axios\";\r\nimport { createNamespacedHelpers } from \"vuex\";\r\nimport { MapNav } from \"../../../components/share\";\r\nconst { mapGetters, mapMutations, mapActions } = createNamespacedHelpers(\r\n  \"synthesis\"\r\n);\r\nimport {\r\n  PanelLayout,\r\n  TimeSelect,\r\n  HourBtn,\r\n  ElementBtn,\r\n  IconElementBtn,\r\n  SmallTitle\r\n} from \"../common\";\r\nexport default {\r\n  name: \"menu-panel\",\r\n  components: {\r\n    PanelLayout,\r\n    TimeSelect,\r\n    HourBtn,\r\n    ElementBtn,\r\n    IconElementBtn,\r\n    SmallTitle,\r\n    MapNav\r\n  },\r\n  data() {\r\n    return {\r\n      // 总控小时列表和分钟列表\r\n      zkHourList: [\r\n        \"00\",\r\n        \"01\",\r\n        \"02\",\r\n        \"03\",\r\n        \"04\",\r\n        \"05\",\r\n        \"06\",\r\n        \"07\",\r\n        \"08\",\r\n        \"09\",\r\n        \"10\",\r\n        \"11\",\r\n        \"12\",\r\n        \"13\",\r\n        \"14\",\r\n        \"15\",\r\n        \"16\",\r\n        \"17\",\r\n        \"18\",\r\n        \"19\",\r\n        \"20\",\r\n        \"21\",\r\n        \"22\",\r\n        \"23\"\r\n      ],\r\n      zkMinuteList: [\r\n        \"00\",\r\n        \"06\",\r\n        \"12\",\r\n        \"18\",\r\n        \"24\",\r\n        \"30\",\r\n        \"36\",\r\n        \"42\",\r\n        \"48\",\r\n        \"54\"\r\n      ],\r\n\r\n      // 存储单站pup地图中的点数据\r\n      stationPupMapData: [],\r\n\r\n      // 菜单相关\r\n      currMenuId: \"severeWeather\",\r\n      prevMenuId: 'severeWeather',  //用于存储上一个选中菜单的id\r\n      isShowPanel: true,\r\n      menus: [\r\n        {\r\n          id: \"shortPeriodFcst\",\r\n          name: \"预报预警\",\r\n          imgSrc: require(\"../../../assets/images/synthesis/menu-shortPeriodFcst.png\")\r\n        },\r\n        {\r\n          id: \"numberFcst\",\r\n          name: \"数值预报\",\r\n          imgSrc: require(\"../../../assets/images/synthesis/menu-numberFcst.png\")\r\n        },\r\n        {\r\n          id: \"severeWeather\",\r\n          name: \"强天气\",\r\n          imgSrc: require(\"../../../assets/images/synthesis/menu-severeWeather.png\")\r\n        },\r\n        {\r\n          id: \"cloudPicture\",\r\n          name: \"云图\",\r\n          imgSrc: require(\"../../../assets/images/synthesis/menu-cloudPicture.png\")\r\n        },\r\n        {\r\n          id: \"station\",\r\n          name: \"自动站\",\r\n          imgSrc: require(\"../../../assets/images/synthesis/menu-station.png\")\r\n        },\r\n        {\r\n          id: \"swan\",\r\n          name: \"雷达拼图\",\r\n          imgSrc: require(\"../../../assets/images/synthesis/menu-swan.png\")\r\n        },\r\n        {\r\n          id: \"statonPup\",\r\n          name: \"单站pup\",\r\n          imgSrc: require(\"../../../assets/images/synthesis/menu-statonPup.png\")\r\n        },\r\n        {\r\n          id: \"make\",\r\n          name: \"产品制作\",\r\n          imgSrc: require(\"../../../assets/images/synthesis/menu-make.png\")\r\n        }\r\n      ]\r\n    };\r\n  },\r\n  computed: {\r\n    ...mapGetters([\r\n      \"currSplitScreen\", //当前分屏中的所有配置\r\n      \"severeWeather\", //强天气\r\n      \"cloudPicture\", //云图\r\n      \"pup\", //pup拼图\r\n      \"station\", //自动站\r\n      \"swan\", //SWAN拼图\r\n      \"stationPup\", //单站pup\r\n      \"fcstWarning\", //预报预警\r\n      \"valueFcst\", //数值预报\r\n      \"radarFeature\"  //雷达特征量\r\n    ]),\r\n    currMenuName() {\r\n      return this.menus.find(el => el.id === this.currMenuId).name;\r\n    },\r\n    stationPupStationId: {\r\n      get() {\r\n        return this.stationPup.currStationId;\r\n      },\r\n      set(value) {\r\n        this.stp_update_station_id(value);\r\n      }\r\n    }\r\n  },\r\n  watch: {},\r\n  created() {\r\n    this.debouncedCpAdjustAging = _.debounce(this.onCpAdjustAging, 300);\r\n    this.debouncedStAdjustThreshold = _.debounce(this.onStAdjustThreshold, 300);\r\n    this.debouncedSnAdjustLvel = _.debounce(this.onSnAdjustLvel, 300);\r\n    this.debouncedSnAdjustAging = _.debounce(this.onSnAdjustAging, 300);\r\n    this.debouncedAutoRefresh = _.debounce(this.onClickAutoRefresh, 300);\r\n    this.debouncedReturnLatest = _.debounce(this.onClickReturnLatest, 300);\r\n  },\r\n  mounted() {\r\n    // 定时刷新关闭时才调用\r\n    // // 得到最新的预报预警并提交请求数据的突变\r\n    // this.get_latest_fcst_warning_time();\r\n    // // 得到最新的数值预报时间\r\n    // this.get_latest_value_fcst_time();\r\n\r\n    // 初始化定时刷新\r\n    this.is_time_to_refresh();\r\n    // 单站pup_小地图数据\r\n    this.getStationPupMapData();\r\n  },\r\n  methods: {\r\n    ...mapMutations([\r\n      \"select_element\",\r\n      \"sw_update_hour\",\r\n      \"sw_update_element_condition\",\r\n      \"cp_cut_tabs\",\r\n      \"cp_aging_change\",\r\n      \"st_threshold_change\",\r\n      \"st_update_hour\",\r\n      \"sn_level_change\",\r\n      \"sn_aging_change\",\r\n      \"stp_update_station_id\",\r\n      \"stp_radio_element\",\r\n      \"update_zk_date\",\r\n      \"update_zk_hour\",\r\n      \"update_zk_minute\",\r\n      \"update_refresh_status\",\r\n      //预报预警\r\n      \"fw_update_short_term\",\r\n      \"fw_update_short_time\",\r\n      \"fw_switch_warn_type\",\r\n      \"fw_update_warn_state\",\r\n      \"fw_update_warn_province\",\r\n      // 数值预报\r\n      \"vf_switch_tabs\",\r\n      \"vf_switch_element_tabs\",\r\n      \"vf_update\"\r\n    ]),\r\n    ...mapActions([\r\n      \"get_latest_element_time\",\r\n      \"get_station_pup_latest_element_time\",\r\n      \"get_latest_zk_time\",\r\n      \"update_all_checked_element_time\",\r\n      \"is_time_to_refresh\",\r\n      // 预报预警\r\n      \"get_latest_fcst_warning_time\",\r\n      // 数值预报\r\n      \"get_latest_value_fcst_time\"\r\n    ]),\r\n\r\n    //强天气_更新小时\r\n    onSwUpdateHour(hour) {\r\n      if (this.severeWeather.currHour === hour) return;\r\n      this.sw_update_hour(hour);\r\n    },\r\n    //强天气_更新要素条件\r\n    onSwUpdateElementCondition(ele, conditionKey, conditionValue) {\r\n      const eleOption = {\r\n        ...ele,\r\n        conditionKey,\r\n        conditionValue\r\n      };\r\n      this.sw_update_element_condition(eleOption);\r\n      if (conditionKey === \"currAcc\") {\r\n        this.get_latest_element_time(eleOption);\r\n      }\r\n    },\r\n    // 云图_tab切换\r\n    onCpTabsChange(e) {\r\n      this.cp_cut_tabs(e.target.value);\r\n    },\r\n    // 云图_时效改变时\r\n    onCpAgingChange(eleOption, aging) {\r\n      this.cp_aging_change({ ...eleOption, latestAging: aging });\r\n    },\r\n\r\n    //云图_左右调整时效,sign值为-1 or 1\r\n    onCpAdjustAging(eleOption, sign) {\r\n      const currIndex = eleOption.agingList.findIndex(\r\n        aging => aging === eleOption.currAging\r\n      );\r\n      const lastIndex = eleOption.agingList.length - 1;\r\n      let nextIndex = currIndex + sign;\r\n      if (nextIndex < 0) {\r\n        nextIndex = lastIndex;\r\n      } else if (nextIndex > lastIndex) {\r\n        nextIndex = 0;\r\n      }\r\n      this.cp_aging_change({\r\n        ...eleOption,\r\n        latestAging: eleOption.agingList[nextIndex]\r\n      });\r\n    },\r\n\r\n    // 自动站_更新小时\r\n    onStUpdateHour(hour) {\r\n      if (this.station.currHour === hour) return;\r\n      this.st_update_hour(hour);\r\n    },\r\n\r\n    // 自动站_阀值更新\r\n    onStThresholdChange(eleOption, threshold) {\r\n      this.st_threshold_change({ ...eleOption, latestThreshold: threshold });\r\n    },\r\n\r\n    //自动站_左右调整阀值,sign值为-1 or 1\r\n    onStAdjustThreshold(eleOption, sign) {\r\n      const currIndex = eleOption.thresholdList.findIndex(\r\n        threshold => threshold === eleOption.currThreshold\r\n      );\r\n      const lastIndex = eleOption.thresholdList.length - 1;\r\n      let nextIndex = currIndex + sign;\r\n      if (nextIndex < 0) {\r\n        nextIndex = lastIndex;\r\n      } else if (nextIndex > lastIndex) {\r\n        nextIndex = 0;\r\n      }\r\n      this.st_threshold_change({\r\n        ...eleOption,\r\n        latestThreshold: eleOption.thresholdList[nextIndex]\r\n      });\r\n    },\r\n\r\n    // SWAN拼图_层次更新\r\n    onSnLevelChange(eleOption, level) {\r\n      console.log(eleOption, level);\r\n      this.sn_level_change({ ...eleOption, latestLevel: level });\r\n    },\r\n\r\n    // SWAN拼图_时效更新\r\n    onSnAgingChange(eleOption, aging) {\r\n      this.sn_aging_change({ ...eleOption, latestAging: aging });\r\n    },\r\n\r\n    //SWAN拼图_左右调整层次,sign值为-1 or 1\r\n    onSnAdjustLvel(eleOption, sign) {\r\n      const currIndex = eleOption.levelList.findIndex(\r\n        level => level.value === eleOption.currLevel\r\n      );\r\n      const lastIndex = eleOption.levelList.length - 1;\r\n      let nextIndex = currIndex + sign;\r\n      if (nextIndex < 0) {\r\n        nextIndex = lastIndex;\r\n      } else if (nextIndex > lastIndex) {\r\n        nextIndex = 0;\r\n      }\r\n      this.sn_level_change({\r\n        ...eleOption,\r\n        latestLevel: eleOption.levelList[nextIndex].value\r\n      });\r\n    },\r\n\r\n    //SWAN拼图_左右调整时效,sign值为-1 or 1\r\n    onSnAdjustAging(eleOption, sign) {\r\n      const currIndex = eleOption.agingList.findIndex(\r\n        aging => aging.value === eleOption.currAging\r\n      );\r\n      const lastIndex = eleOption.agingList.length - 1;\r\n      let nextIndex = currIndex + sign;\r\n      if (nextIndex < 0) {\r\n        nextIndex = lastIndex;\r\n      } else if (nextIndex > lastIndex) {\r\n        nextIndex = 0;\r\n      }\r\n      this.sn_aging_change({\r\n        ...eleOption,\r\n        latestAging: eleOption.agingList[nextIndex].value\r\n      });\r\n    },\r\n\r\n    // 单站pup_小地图数据\r\n    getStationPupMapData() {\r\n      axios\r\n        .get(\r\n          \"/proxy/10.20.67.111/nowcasting/dlsj/zh/single_radar_stations.json\"\r\n        )\r\n        .then(data => {\r\n          this.stationPupMapData = data.data[\"全国\"];\r\n        });\r\n    },\r\n\r\n    //点击返回最新\r\n    onClickReturnLatest() {\r\n      this.get_latest_zk_time();\r\n    },\r\n\r\n    // 点击关闭或开启定时刷新\r\n    onClickAutoRefresh() {\r\n      this.update_refresh_status();\r\n      this.is_time_to_refresh();\r\n    },\r\n\r\n    // 总控日期改变\r\n    onZkDateChange(date) {\r\n      this.update_zk_date(date);\r\n      this.update_all_checked_element_time();\r\n    },\r\n\r\n    // 总控小时改变\r\n    onZkHourChange(hour) {\r\n      this.update_zk_hour(hour);\r\n      this.update_all_checked_element_time();\r\n    },\r\n\r\n    // 总控分钟改变\r\n    onZkMinuteChange(minute) {\r\n      this.update_zk_minute(minute);\r\n      this.update_all_checked_element_time();\r\n    },\r\n\r\n    // 切换菜单\r\n    onClickSwitchMenu(id) {\r\n      this.prevMenuId = this.currMenuId;\r\n      if (this.currMenuId !== id) {\r\n        this.isShowPanel = true;\r\n        this.currMenuId = id;\r\n      } else {\r\n        this.isShowPanel = !this.isShowPanel;\r\n      }\r\n\r\n      if (id === 'statonPup') {\r\n        // this.$refs.mapNav.map.setView([36.87962060502676, 103.71093750000001])\r\n        // console.log(this.$refs.mapNav.map.setView([36.87962060502676, 103.71093750000001]));\r\n      }\r\n    },\r\n\r\n    // 预报预警_短期预报\r\n    onFwShortTermChange(key, value) {\r\n      if (key === \"aging\") {\r\n        const prevAging = this.fcstWarning.shortTerm.aging;\r\n        if (prevAging === value) {\r\n          value = this.fcstWarning.shortTerm.aging ? \"\" : value;\r\n        }\r\n      }\r\n      this.fw_update_short_term({ key, value });\r\n    },\r\n    // 预报预警_短时预报\r\n    onFwShortTimeChange(key, value) {\r\n      if (key === \"eleList\") {\r\n        const prevValue = this.fcstWarning.shortTime.eleList.find(\r\n          el => el.checked\r\n        );\r\n        value = prevValue && prevValue.id === value ? \"\" : value;\r\n      }\r\n      this.fw_update_short_time({ key, value });\r\n    },\r\n\r\n    // 预报预警_国家预警\r\n    onFwWarnStateChange(key, value) {\r\n      if (key === \"aging\") {\r\n        const prevAging = this.fcstWarning.stateWarn.aging;\r\n        if (prevAging === value) {\r\n          value = this.fcstWarning.stateWarn.aging ? \"\" : value;\r\n        }\r\n      }\r\n      this.fw_update_warn_state({ key, value });\r\n    },\r\n\r\n    // 预报预警_省级预警\r\n    onFwWarnProvinceChange(key, value) {\r\n      if (key === \"aging\") {\r\n        const prevAging = this.fcstWarning.provinceWarn.aging;\r\n        if (prevAging === value) return;\r\n      } else if (key === \"eleList\") {\r\n        const prevValue = this.fcstWarning.provinceWarn.eleList.find(\r\n          el => el.checked\r\n        );\r\n        value = prevValue && prevValue.id === value ? \"\" : value;\r\n      }\r\n      this.fw_update_warn_province({ key, value });\r\n    },\r\n\r\n    // 数值预报_条件更新\r\n    onVfChange(sign, value) {\r\n      if (sign === \"aging\") {\r\n        const curr = this.valueFcst.find(\r\n          el => el.id === this.currSplitScreen.currValueFcstId\r\n        );\r\n        if (curr.aging === value) return;\r\n      }\r\n\r\n      this.vf_update({ sign, value });\r\n    },\r\n\r\n    // 数值预报_tabs切换\r\n    onVfTabsChange(id) {\r\n      this.vf_switch_element_tabs(id);\r\n    }\r\n  }\r\n};\r\n"]}]}