{"remainingRequest":"D:\\program\\frontend\\node_modules\\babel-loader\\lib\\index.js!D:\\program\\frontend\\src\\components\\share\\date-select\\DateSelect.js?vue&type=script&lang=js&","dependencies":[{"path":"D:\\program\\frontend\\src\\components\\share\\date-select\\DateSelect.js","mtime":1553855602993},{"path":"D:\\program\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\program\\frontend\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _Array$isArray from \"D:\\\\program\\\\frontend\\\\node_modules\\\\@babel\\\\runtime-corejs2/core-js/array/is-array\";\nimport { ConditionLayout } from '../../base';\nimport moment from \"moment\"; // 小时与分钟列表验证器\n\nvar hmListValidator = function hmListValidator(value) {\n  if (_Array$isArray(value)) {\n    return value.every(function (el) {\n      if (typeof el === \"string\") {\n        return /^\\d{2}$/.test(el);\n      }\n\n      return false;\n    });\n  }\n\n  return false;\n};\n\nexport default {\n  name: \"date-select\",\n  components: {\n    ConditionLayout: ConditionLayout\n  },\n  props: {\n    date: {\n      type: Object,\n      default: function _default() {\n        return moment();\n      }\n    },\n    hour: {\n      validator: function validator(value) {\n        return /^\\d{2}$/.test(value);\n      }\n    },\n    minute: {\n      validator: function validator(value) {\n        return /^\\d{2}$/.test(value);\n      }\n    },\n    hourList: {\n      validator: hmListValidator\n    },\n    minuteList: {\n      validator: hmListValidator\n    }\n  },\n  data: function data() {\n    return {\n      currDate: this.date.clone(),\n      currHour: this.hour,\n      currMinute: this.minute,\n      isShowHour: !!this.hourList && !!this.hour,\n      // this.hour值为undefined时表明没有传值，有值就表明值的验证通过了\n      isShowMinute: !!this.minuteList && !!this.minute\n    };\n  },\n  computed: {\n    currFullDate: function currFullDate() {\n      return this.currDate.format(\"YYYY-MM-DD\") + \" \" + this.currHour + \":\" + this.currMinute;\n    }\n  },\n  mounted: function mounted() {\n    // console.log(this.isShowHour);\n    // console.log(this.isShowMinute);\n    // console.log(this.minuteList)\n    if (this.isShowHour) {\n      this._hourIndex = 0;\n      this._hourLength = this.hourList.length;\n    }\n\n    if (this.isShowMinute) {\n      this._minuteIndex = 0;\n      this._minuteLength = this.minuteList.length;\n    }\n  },\n  methods: {\n    moment: moment,\n    // 时间改变时触发\n    onChange: function onChange(propName) {\n      var updateVal;\n\n      if (propName === \"date\") {\n        updateVal = this.currDate;\n      } else if (propName === \"hour\") {\n        updateVal = this.currHour;\n      } else if (propName === \"minute\") {\n        updateVal = this.currMinute;\n      }\n\n      this.$emit(\"update:\" + propName, updateVal); //同步父组件传递进来的属性\n\n      this.$emit(\"date-change\");\n    },\n    // 时间微调\n    onTuningTime: function onTuningTime(sign) {\n      if (sign === 1) {\n        if (this.isShowMinute) {\n          this._minuteIndex++;\n          this._minuteIndex = this._minuteIndex % this._minuteLength;\n          this.currMinute = this.minuteList[this._minuteIndex];\n          this.$emit(\"update:minute\", this.currMinute);\n\n          if (this._minuteIndex === 0) {\n            this._hourIndex++;\n            this._hourIndex = this._hourIndex % this._hourLength;\n            this.currHour = this.hourList[this._hourIndex];\n            this.$emit(\"update:hour\", this.currHour);\n\n            if (this._hourIndex === 0) {\n              this.currDate = this.currDate.add(1, \"days\").clone();\n              this.$emit(\"update:date\", this.currDate);\n            }\n          }\n        } else if (this.isShowHour) {\n          this._hourIndex++;\n          this._hourIndex = this._hourIndex % this._hourLength;\n          this.currHour = this.hourList[this._hourIndex];\n          this.$emit(\"update:hour\", this.currHour);\n\n          if (this._hourIndex === 0) {\n            this.currDate = this.currDate.add(1, \"days\").clone();\n            this.$emit(\"update:date\", this.currDate);\n          }\n        } else {\n          this.currDate = this.currDate.add(1, \"days\").clone();\n          this.$emit(\"update:date\", this.currDate);\n        }\n      } else {\n        if (this.isShowMinute) {\n          this._minuteIndex--;\n\n          if (this._minuteIndex < 0) {\n            this._minuteIndex = this._minuteLength - 1;\n          }\n\n          this.currMinute = this.minuteList[this._minuteIndex];\n          this.$emit(\"update:minute\", this.currMinute);\n\n          if (this._minuteIndex === this._minuteLength - 1) {\n            this._hourIndex--;\n\n            if (this._hourIndex < 0) {\n              this._hourIndex = this._hourLength - 1;\n            }\n\n            this.currHour = this.hourList[this._hourIndex];\n            this.$emit(\"update:hour\", this.currHour);\n\n            if (this._hourIndex === this._hourLength - 1) {\n              this.currDate = this.currDate.subtract(1, \"days\").clone();\n              this.$emit(\"update:date\", this.currDate);\n            }\n          }\n        } else if (this.isShowHour) {\n          this._hourIndex--;\n\n          if (this._hourIndex < 0) {\n            this._hourIndex = this._hourLength - 1;\n          }\n\n          this.currHour = this.hourList[this._hourIndex];\n          this.$emit(\"update:hour\", this.currHour);\n\n          if (this._hourIndex === this._hourLength - 1) {\n            this.currDate = this.currDate.subtract(1, \"days\").clone();\n            this.$emit(\"update:date\", this.currDate);\n          }\n        } else {\n          this.currDate = this.currDate.subtract(1, \"days\").clone();\n          this.$emit(\"update:date\", this.currDate);\n        }\n      }\n\n      this.$emit('date-change');\n    }\n  }\n};",{"version":3,"sources":["D:\\program\\frontend\\src\\components\\share\\date-select\\DateSelect.js"],"names":["ConditionLayout","moment","hmListValidator","value","every","el","test","name","components","props","date","type","Object","default","hour","validator","minute","hourList","minuteList","data","currDate","clone","currHour","currMinute","isShowHour","isShowMinute","computed","currFullDate","format","mounted","_hourIndex","_hourLength","length","_minuteIndex","_minuteLength","methods","onChange","propName","updateVal","$emit","onTuningTime","sign","add","subtract"],"mappings":"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","sourcesContent":["import { ConditionLayout } from '../../base';\r\nimport moment from \"moment\";\r\n\r\n// 小时与分钟列表验证器\r\nconst hmListValidator = value => {\r\n  if (Array.isArray(value)) {\r\n    return value.every(el => {\r\n      if (typeof el === \"string\") {\r\n        return /^\\d{2}$/.test(el);\r\n      }\r\n      return false;\r\n    });\r\n  }\r\n  return false;\r\n};\r\n\r\nexport default {\r\n  name: \"date-select\",\r\n  components: { ConditionLayout },\r\n  props: {\r\n    date: {\r\n      type: Object,\r\n      default() {\r\n        return moment();\r\n      }\r\n    },\r\n    hour: {\r\n      validator(value) {\r\n        return /^\\d{2}$/.test(value);\r\n      }\r\n    },\r\n    minute: {\r\n      validator(value) {\r\n        return /^\\d{2}$/.test(value);\r\n      }\r\n    },\r\n    hourList: {\r\n      validator: hmListValidator\r\n    },\r\n    minuteList: {\r\n      validator: hmListValidator\r\n    }\r\n  },\r\n  data() {\r\n    return {\r\n      currDate: this.date.clone(),\r\n      currHour: this.hour,\r\n      currMinute: this.minute,\r\n      isShowHour: !!this.hourList && !!this.hour, // this.hour值为undefined时表明没有传值，有值就表明值的验证通过了\r\n      isShowMinute: !!this.minuteList && !!this.minute\r\n    };\r\n  },\r\n  computed: {\r\n    currFullDate() {\r\n      return (\r\n        this.currDate.format(\"YYYY-MM-DD\") +\r\n        \" \" +\r\n        this.currHour +\r\n        \":\" +\r\n        this.currMinute\r\n      );\r\n    }\r\n  },\r\n  mounted() {\r\n    // console.log(this.isShowHour);\r\n    // console.log(this.isShowMinute);\r\n    // console.log(this.minuteList)\r\n\r\n    if (this.isShowHour) {\r\n      this._hourIndex = 0;\r\n      this._hourLength = this.hourList.length;\r\n    }\r\n    if (this.isShowMinute) {\r\n      this._minuteIndex = 0;\r\n      this._minuteLength = this.minuteList.length;\r\n    }\r\n  },\r\n  methods: {\r\n    moment,\r\n    // 时间改变时触发\r\n    onChange(propName) {\r\n      let updateVal;\r\n      if (propName === \"date\") {\r\n        updateVal = this.currDate;\r\n      } else if (propName === \"hour\") {\r\n        updateVal = this.currHour;\r\n      } else if (propName === \"minute\") {\r\n        updateVal = this.currMinute;\r\n      }\r\n      this.$emit(\"update:\" + propName, updateVal); //同步父组件传递进来的属性\r\n      this.$emit(\"date-change\");\r\n    },\r\n\r\n    // 时间微调\r\n    onTuningTime(sign) {\r\n      if (sign === 1) {\r\n        if (this.isShowMinute) {\r\n          this._minuteIndex++;\r\n          this._minuteIndex = this._minuteIndex % this._minuteLength;\r\n          this.currMinute = this.minuteList[this._minuteIndex];\r\n          this.$emit(\"update:minute\", this.currMinute);\r\n          if (this._minuteIndex === 0) {\r\n            this._hourIndex++;\r\n            this._hourIndex = this._hourIndex % this._hourLength;\r\n            this.currHour = this.hourList[this._hourIndex];\r\n            this.$emit(\"update:hour\", this.currHour);\r\n            if (this._hourIndex === 0) {\r\n              this.currDate = this.currDate.add(1, \"days\").clone();\r\n              this.$emit(\"update:date\", this.currDate);\r\n            }\r\n          }\r\n        } else if (this.isShowHour) {\r\n          this._hourIndex++;\r\n          this._hourIndex = this._hourIndex % this._hourLength;\r\n          this.currHour = this.hourList[this._hourIndex];\r\n          this.$emit(\"update:hour\", this.currHour);\r\n          if (this._hourIndex === 0) {\r\n            this.currDate = this.currDate.add(1, \"days\").clone();\r\n            this.$emit(\"update:date\", this.currDate);\r\n          }\r\n        } else {\r\n          this.currDate = this.currDate.add(1, \"days\").clone();\r\n          this.$emit(\"update:date\", this.currDate);\r\n        }\r\n      } else {\r\n        if (this.isShowMinute) {\r\n          this._minuteIndex--;\r\n          if (this._minuteIndex < 0) {\r\n            this._minuteIndex = this._minuteLength - 1;\r\n          }\r\n          this.currMinute = this.minuteList[this._minuteIndex];\r\n          this.$emit(\"update:minute\", this.currMinute);\r\n          if (this._minuteIndex === this._minuteLength - 1) {\r\n            this._hourIndex--;\r\n            if (this._hourIndex < 0) {\r\n              this._hourIndex = this._hourLength - 1;\r\n            }\r\n            this.currHour = this.hourList[this._hourIndex];\r\n            this.$emit(\"update:hour\", this.currHour);\r\n            if (this._hourIndex === this._hourLength - 1) {\r\n              this.currDate = this.currDate.subtract(1, \"days\").clone();\r\n              this.$emit(\"update:date\", this.currDate);\r\n            }\r\n          }\r\n        } else if (this.isShowHour) {\r\n          this._hourIndex--;\r\n          if (this._hourIndex < 0) {\r\n            this._hourIndex = this._hourLength - 1;\r\n          }\r\n          this.currHour = this.hourList[this._hourIndex];\r\n          this.$emit(\"update:hour\", this.currHour);\r\n          if (this._hourIndex === this._hourLength - 1) {\r\n            this.currDate = this.currDate.subtract(1, \"days\").clone();\r\n            this.$emit(\"update:date\", this.currDate);\r\n          }\r\n        } else {\r\n          this.currDate = this.currDate.subtract(1, \"days\").clone();\r\n          this.$emit(\"update:date\", this.currDate);\r\n        }\r\n      }\r\n      this.$emit('date-change');\r\n    }\r\n  }\r\n};\r\n"]}]}