{"remainingRequest":"D:\\program\\frontend\\node_modules\\babel-loader\\lib\\index.js!D:\\program\\frontend\\src\\views\\shortimpending\\sounding\\Sounding.js?vue&type=script&lang=js&","dependencies":[{"path":"D:\\program\\frontend\\src\\views\\shortimpending\\sounding\\Sounding.js","mtime":1553855602449},{"path":"D:\\program\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\program\\frontend\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _parseFloat from \"D:\\\\program\\\\frontend\\\\node_modules\\\\@babel\\\\runtime-corejs2/core-js/parse-float\";\nimport _parseInt from \"D:\\\\program\\\\frontend\\\\node_modules\\\\@babel\\\\runtime-corejs2/core-js/parse-int\";\nimport \"core-js/modules/es6.regexp.split\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.array.find\";\nimport _objectSpread from \"D:\\\\program\\\\frontend\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/objectSpread\";\nimport * as moment from \"moment\";\nimport * as axios from \"axios\";\nimport { ClassifyTitle } from \"../common\";\nimport { TimeSelect, MapNav } from \"../../../components/share\";\nexport default {\n  name: \"sounding\",\n  components: {\n    ClassifyTitle: ClassifyTitle,\n    TimeSelect: TimeSelect,\n    MapNav: MapNav\n  },\n  props: {\n    fy4Aging: {\n      type: String,\n      required: true\n    }\n  },\n  data: function data() {\n    return {\n      currDataType: \"act\",\n      currImgType: \"NCEP\",\n      actDate: '',\n      actHour: \"08\",\n      actHourList: [\"08\", \"14\", \"20\"],\n      fcstNcepDate: '',\n      fcstNcepHour: \"02\",\n      fcstNcepHourList: [\"02\", \"08\", \"14\", \"20\"],\n      fcstListDate: '',\n      fcstListHour: \"02\",\n      fcstListHourList: [\"02\", \"08\", \"14\", \"20\"],\n      fy4Date: moment(\"2018-11-07\", \"YYYY-MM-DD\"),\n      fy4Hour: \"00\",\n      fy4HourList: [\"00\", \"12\"],\n      stationInfo: {},\n      province: \"北京市\",\n      stationId: 54511,\n      fy4PlaceId: 1,\n      fcstPlaceInfos: [],\n      fy4PlaceList: []\n    };\n  },\n  computed: {\n    actPlaceList: function actPlaceList() {\n      var list = [];\n\n      for (var key in this.stationInfo) {\n        list = list.concat(this.stationInfo[key]);\n      }\n\n      return list;\n    },\n    fcstPlaceList: function fcstPlaceList() {\n      return this.fcstPlaceInfos.map(function (el) {\n        return _objectSpread({}, el, {\n          name: \"\"\n        });\n      });\n    }\n  },\n  watch: {\n    stationId: function stationId(_stationId) {\n      if (this.currDataType === \"act\") {\n        this.province = this.actPlaceList.find(function (el) {\n          return el.number === _stationId;\n        }).province;\n      }\n\n      this.emitEvent(this.currDataType);\n    },\n    fy4PlaceId: function fy4PlaceId() {\n      this.emitEvent(\"fy4\");\n    },\n    fy4Aging: function fy4Aging() {\n      this.getFy4Data();\n    }\n  },\n  mounted: function mounted() {\n    this.fy4RequestTokens = [];\n    this.getStationPlaceInfo();\n    this.getFcstPlaceInfo();\n    this.getFy4Data();\n    this.getLatestTime();\n  },\n  beforeDestroy: function beforeDestroy() {},\n  methods: {\n    onChange: function onChange() {},\n    onDataTypeChange: function onDataTypeChange() {\n      if (this.currDataType === \"act\") {\n        this.province = \"北京市\";\n        this.stationId = this.stationInfo[this.province][0].number;\n      } else if (this.currDataType === \"fcst\") {\n        this.stationId = 11600040000; //this.fcstPlaceList[1400].number\n      }\n\n      this.emitEvent(this.currDataType);\n    },\n    onActTimeChange: function onActTimeChange() {\n      this.emitEvent(this.currDataType);\n    },\n    onfcstTimeChange: function onfcstTimeChange() {\n      this.emitEvent(this.currDataType);\n    },\n    onImgTypeChange: function onImgTypeChange() {\n      this.emitEvent(this.currDataType);\n    },\n    onProvinceChange: function onProvinceChange() {\n      this.stationId = this.stationInfo[this.province][0].number;\n    },\n    onFy4TimeChange: function onFy4TimeChange() {\n      this.getFy4Data();\n    },\n    onFy4PlaceChange: function onFy4PlaceChange() {\n      this.emitEvent(\"fy4\");\n    },\n    // 获取站信息\n    getStationPlaceInfo: function getStationPlaceInfo() {\n      var _this = this;\n\n      axios.get(\"/proxy/10.20.67.111/124station.json\").then(function (data) {\n        _this.stationInfo = data.data;\n      });\n    },\n    getFcstPlaceInfo: function getFcstPlaceInfo() {\n      var _this2 = this;\n\n      axios.get(\"/proxy/10.20.67.111/ncepnwptlogpstations.json\").then(function (data) {\n        _this2.fcstPlaceInfos = data.data[\"北京\"];\n      });\n    },\n    // 得到风云4探空点数据\n    getFy4Data: function getFy4Data() {\n      var _this3 = this;\n\n      if (this.fy4RequestTokens.length) {\n        this.fy4RequestTokens.forEach(function (c) {\n          return c();\n        });\n        this.fy4RequestTokens = [];\n      }\n\n      var CancelToken = axios.CancelToken;\n      axios.get(\"/proxy/10.20.67.125/giirs/Fusion2tlogp/\".concat(this.fy4Date.format(\"YYYYMMDD\") + this.fy4Hour, \".\").concat(this.fy4Aging), {\n        cancelToken: new CancelToken(function (c) {\n          _this3.fy4RequestTokens.push(c);\n        })\n      }).then(function (data) {\n        var allData = _this3.m5ToGetNafpGrid(data.data);\n\n        if (allData.stations && allData.stations.length) {\n          _this3.fy4PlaceList = allData.stations.map(function (el) {\n            return {\n              number: +el.stationId,\n              latitude: el.lat,\n              longitude: el.lon,\n              name: \"\"\n            };\n          });\n        } else {\n          _this3.fy4PlaceList = [];\n        }\n      });\n    },\n    // 触发事件\n    emitEvent: function emitEvent(type) {\n      var startTime, showType, id;\n\n      if (type === \"act\") {\n        startTime = this.actDate.clone().startOf(\"day\").add(+this.actHour, \"hours\");\n        showType = this.currImgType;\n        id = this.stationId;\n      } else if (type === \"fcst\") {\n        if (this.currImgType === \"NCEP\") {\n          startTime = this.fcstNcepDate.clone().startOf(\"day\").add(+this.fcstNcepHour, \"hours\");\n        } else if (this.currImgType === \"List\") {\n          startTime = this.fcstListDate.clone().startOf(\"day\").add(+this.fcstListHour, \"hours\");\n        }\n\n        showType = this.currImgType;\n        id = this.stationId;\n      } else if (type === \"fy4\") {\n        startTime = this.fy4Date.clone().startOf(\"day\").add(+this.fy4Hour, \"hours\");\n        showType = \"\";\n        id = this.fy4PlaceId;\n      }\n\n      this.$emit(\"change\", {\n        type: type,\n        startTime: startTime,\n        showType: showType,\n        id: id\n      });\n    },\n    m5ToGetNafpGrid: function m5ToGetNafpGrid(content) {\n      var items = content.trim().split(/\\s+/);\n\n      if (items.length < 8) {\n        return {\n          status: 1,\n          message: \"\"\n        };\n      }\n\n      var year = \"20\" + items[3];\n      var month = items[4];\n      var day = items[5];\n      var hour = items[6];\n\n      var stationCount = _parseInt(items[7], 10);\n\n      var itemIndex = 8;\n      var stations = [];\n\n      for (var i = 0; i < stationCount; i++) {\n        var stationId = items[itemIndex++];\n\n        var lon = _parseFloat(items[itemIndex++]);\n\n        var lat = _parseFloat(items[itemIndex++]);\n\n        var alt = _parseFloat(items[itemIndex++]);\n\n        var count = _parseInt(items[itemIndex++], 10);\n\n        var datas = [];\n\n        for (var j = 0; j < count / 6; j++) {\n          datas.push({\n            pressure: _parseFloat(items[itemIndex++]),\n            alt: _parseFloat(items[itemIndex++]),\n            temp: _parseFloat(items[itemIndex++]),\n            dew: _parseFloat(items[itemIndex++]),\n            windDir: _parseFloat(items[itemIndex++]),\n            windSpeed: _parseFloat(items[itemIndex++])\n          });\n        }\n\n        stations.push({\n          stationId: stationId,\n          lon: lon,\n          lat: lat,\n          alt: alt,\n          datas: datas\n        });\n      }\n\n      return {\n        date: year + \"-\" + month + \"-\" + day + \" \" + hour + \":00:00\",\n        stations: stations\n      };\n    },\n    // 获取时间\n    getElementTime: function getElementTime(eleName) {\n      var params = new URLSearchParams();\n      params.append(\"modeName\", \"qiangtianqi\");\n      params.append(\"eleName\", eleName);\n      params.append(\"strTime\", \"\");\n      params.append(\"forecastTime\", \"\");\n      params.append(\"level\", \"\");\n      params.append(\"userDefinedParas\", \"\");\n      return axios.post(\"/proxy/10.20.67.111//PictureInfoForgetFilePath.action\", params);\n    },\n    // 获取最新时间\n    getLatestTime: function getLatestTime() {\n      var _this4 = this;\n\n      var list = [// 实况\n      this.getElementTime(\"探空分析:实况探空:54511\"), // 预报——Tlnp图\n      this.getElementTime(\"模式探空:NCEP\"), // 实况——时序图\n      this.getElementTime(\"模式探空:List\")];\n\n      var _getTime = function _getTime(data) {\n        var timeStr = data.data.path.split(',')[2];\n        var time = moment(timeStr, 'YYYY-MM-DD HH:mm:ss');\n\n        if (time.isValid()) {\n          return {\n            date: time.clone().startOf('day'),\n            hour: time.format('HH')\n          };\n        }\n\n        return;\n      };\n\n      axios.all(list).then(function (data) {\n        var actTime = _getTime(data[0]);\n\n        var fcstNcepTime = _getTime(data[1]);\n\n        var fcstListTime = _getTime(data[2]);\n\n        if (actTime) {\n          _this4.actDate = actTime.date;\n          _this4.actHour = actTime.hour;\n        }\n\n        if (fcstNcepTime) {\n          _this4.fcstNcepDate = fcstNcepTime.date;\n          _this4.fcstNcepHour = fcstNcepTime.hour;\n        }\n\n        if (fcstListTime) {\n          _this4.fcstListDate = fcstListTime.date;\n          _this4.fcstListHour = fcstListTime.hour;\n        } // console.log(actTime);\n        // console.log(fcstNcepTime);\n        // console.log(fcstListTime);\n\n\n        _this4.emitEvent(_this4.currDataType);\n      });\n    }\n  }\n};",{"version":3,"sources":["D:\\program\\frontend\\src\\views\\shortimpending\\sounding\\Sounding.js"],"names":["moment","axios","ClassifyTitle","TimeSelect","MapNav","name","components","props","fy4Aging","type","String","required","data","currDataType","currImgType","actDate","actHour","actHourList","fcstNcepDate","fcstNcepHour","fcstNcepHourList","fcstListDate","fcstListHour","fcstListHourList","fy4Date","fy4Hour","fy4HourList","stationInfo","province","stationId","fy4PlaceId","fcstPlaceInfos","fy4PlaceList","computed","actPlaceList","list","key","concat","fcstPlaceList","map","el","watch","find","number","emitEvent","getFy4Data","mounted","fy4RequestTokens","getStationPlaceInfo","getFcstPlaceInfo","getLatestTime","beforeDestroy","methods","onChange","onDataTypeChange","onActTimeChange","onfcstTimeChange","onImgTypeChange","onProvinceChange","onFy4TimeChange","onFy4PlaceChange","get","then","length","forEach","c","CancelToken","format","cancelToken","push","allData","m5ToGetNafpGrid","stations","latitude","lat","longitude","lon","startTime","showType","id","clone","startOf","add","$emit","content","items","trim","split","status","message","year","month","day","hour","stationCount","itemIndex","i","alt","count","datas","j","pressure","temp","dew","windDir","windSpeed","date","getElementTime","eleName","params","URLSearchParams","append","post","_getTime","timeStr","path","time","isValid","all","actTime","fcstNcepTime","fcstListTime"],"mappings":"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","sourcesContent":["import * as moment from \"moment\";\r\nimport * as axios from \"axios\";\r\nimport { ClassifyTitle } from \"../common\";\r\nimport { TimeSelect, MapNav } from \"../../../components/share\";\r\n\r\nexport default {\r\n  name: \"sounding\",\r\n  components: { ClassifyTitle, TimeSelect, MapNav },\r\n  props: {\r\n    fy4Aging: {\r\n      type: String,\r\n      required: true\r\n    }\r\n  },\r\n  data() {\r\n    return {\r\n      currDataType: \"act\",\r\n      currImgType: \"NCEP\",\r\n\r\n      actDate: '',\r\n      actHour: \"08\",\r\n      actHourList: [\"08\", \"14\", \"20\"],\r\n\r\n      fcstNcepDate: '',\r\n      fcstNcepHour: \"02\",\r\n      fcstNcepHourList: [\"02\", \"08\", \"14\", \"20\"],\r\n\r\n      fcstListDate: '',\r\n      fcstListHour: \"02\",\r\n      fcstListHourList: [\"02\", \"08\", \"14\", \"20\"],\r\n\r\n      fy4Date: moment(\"2018-11-07\", \"YYYY-MM-DD\"),\r\n      fy4Hour: \"00\",\r\n      fy4HourList: [\"00\", \"12\"],\r\n      stationInfo: {},\r\n      province: \"北京市\",\r\n      stationId: 54511,\r\n      fy4PlaceId: 1,\r\n      fcstPlaceInfos: [],\r\n      fy4PlaceList: []\r\n    };\r\n  },\r\n  computed: {\r\n    actPlaceList() {\r\n      let list = [];\r\n      for (const key in this.stationInfo) {\r\n        list = list.concat(this.stationInfo[key]);\r\n      }\r\n      return list;\r\n    },\r\n    fcstPlaceList() {\r\n      return this.fcstPlaceInfos.map(el => ({ ...el, name: \"\" }));\r\n    }\r\n  },\r\n\r\n  watch: {\r\n    stationId(stationId) {\r\n      if (this.currDataType === \"act\") {\r\n        this.province = this.actPlaceList.find(\r\n          el => el.number === stationId\r\n        ).province;\r\n      }\r\n      this.emitEvent(this.currDataType);\r\n    },\r\n    fy4PlaceId() {\r\n      this.emitEvent(\"fy4\");\r\n    },\r\n    fy4Aging() {\r\n      this.getFy4Data();\r\n    }\r\n  },\r\n\r\n  mounted() {\r\n    this.fy4RequestTokens = [];\r\n\r\n    this.getStationPlaceInfo();\r\n    this.getFcstPlaceInfo();\r\n    this.getFy4Data();\r\n    this.getLatestTime();\r\n    \r\n  },\r\n\r\n  beforeDestroy() {},\r\n\r\n  methods: {\r\n    onChange() {},\r\n    onDataTypeChange() {\r\n      if (this.currDataType === \"act\") {\r\n        this.province = \"北京市\";\r\n        this.stationId = this.stationInfo[this.province][0].number;\r\n      } else if (this.currDataType === \"fcst\") {\r\n        this.stationId = 11600040000;  //this.fcstPlaceList[1400].number\r\n      }\r\n      this.emitEvent(this.currDataType);\r\n    },\r\n    onActTimeChange() {\r\n      this.emitEvent(this.currDataType);\r\n    },\r\n    onfcstTimeChange() {\r\n      this.emitEvent(this.currDataType);\r\n    },\r\n    onImgTypeChange() {\r\n      this.emitEvent(this.currDataType);\r\n    },\r\n    onProvinceChange() {\r\n      this.stationId = this.stationInfo[this.province][0].number;\r\n    },\r\n    onFy4TimeChange() {\r\n      this.getFy4Data();\r\n    },\r\n    onFy4PlaceChange() {\r\n      this.emitEvent(\"fy4\");\r\n    },\r\n    // 获取站信息\r\n    getStationPlaceInfo() {\r\n      axios.get(\"/proxy/10.20.67.111/124station.json\").then(data => {\r\n        this.stationInfo = data.data;\r\n      });\r\n    },\r\n    getFcstPlaceInfo() {\r\n      axios.get(\"/proxy/10.20.67.111/ncepnwptlogpstations.json\").then(data => {\r\n        this.fcstPlaceInfos = data.data[\"北京\"];\r\n      });\r\n    },\r\n\r\n    // 得到风云4探空点数据\r\n    getFy4Data() {\r\n      if (this.fy4RequestTokens.length) {\r\n        this.fy4RequestTokens.forEach(c => c());\r\n        this.fy4RequestTokens = [];\r\n      }\r\n      const CancelToken = axios.CancelToken;\r\n      axios\r\n        .get(\r\n          `/proxy/10.20.67.125/giirs/Fusion2tlogp/${this.fy4Date.format(\r\n            \"YYYYMMDD\"\r\n          ) + this.fy4Hour}.${this.fy4Aging}`,\r\n          {\r\n            cancelToken: new CancelToken(c => {\r\n              this.fy4RequestTokens.push(c);\r\n            })\r\n          }\r\n        )\r\n        .then(data => {\r\n          const allData = this.m5ToGetNafpGrid(data.data);\r\n          if (allData.stations && allData.stations.length) {\r\n            this.fy4PlaceList = allData.stations.map(el => ({\r\n              number: +el.stationId,\r\n              latitude: el.lat,\r\n              longitude: el.lon,\r\n              name: \"\"\r\n            }));\r\n          } else {\r\n            this.fy4PlaceList = [];\r\n          }\r\n        });\r\n    },\r\n\r\n    // 触发事件\r\n    emitEvent(type) {\r\n      let startTime, showType, id;\r\n\r\n      if (type === \"act\") {\r\n        startTime = this.actDate\r\n          .clone()\r\n          .startOf(\"day\")\r\n          .add(+this.actHour, \"hours\");\r\n        showType = this.currImgType;\r\n        id = this.stationId;\r\n      } else if (type === \"fcst\") {\r\n        if (this.currImgType === \"NCEP\") {\r\n          startTime = this.fcstNcepDate\r\n            .clone()\r\n            .startOf(\"day\")\r\n            .add(+this.fcstNcepHour, \"hours\");\r\n        } else if (this.currImgType === \"List\") {\r\n          startTime = this.fcstListDate\r\n            .clone()\r\n            .startOf(\"day\")\r\n            .add(+this.fcstListHour, \"hours\");\r\n        }\r\n        showType = this.currImgType;\r\n        id = this.stationId;\r\n      } else if (type === \"fy4\") {\r\n        startTime = this.fy4Date\r\n          .clone()\r\n          .startOf(\"day\")\r\n          .add(+this.fy4Hour, \"hours\");\r\n        showType = \"\";\r\n        id = this.fy4PlaceId;\r\n      }\r\n\r\n      this.$emit(\"change\", {\r\n        type,\r\n        startTime,\r\n        showType,\r\n        id\r\n      });\r\n    },\r\n\r\n    m5ToGetNafpGrid(content) {\r\n      var items = content.trim().split(/\\s+/);\r\n\r\n      if (items.length < 8) {\r\n        return {\r\n          status: 1,\r\n          message: \"\"\r\n        };\r\n      }\r\n\r\n      var year = \"20\" + items[3];\r\n      var month = items[4];\r\n      var day = items[5];\r\n      var hour = items[6];\r\n      var stationCount = parseInt(items[7], 10);\r\n\r\n      var itemIndex = 8;\r\n\r\n      var stations = [];\r\n\r\n      for (var i = 0; i < stationCount; i++) {\r\n        var stationId = items[itemIndex++];\r\n        var lon = parseFloat(items[itemIndex++]);\r\n        var lat = parseFloat(items[itemIndex++]);\r\n        var alt = parseFloat(items[itemIndex++]);\r\n        var count = parseInt(items[itemIndex++], 10);\r\n\r\n        var datas = [];\r\n        for (var j = 0; j < count / 6; j++) {\r\n          datas.push({\r\n            pressure: parseFloat(items[itemIndex++]),\r\n            alt: parseFloat(items[itemIndex++]),\r\n            temp: parseFloat(items[itemIndex++]),\r\n            dew: parseFloat(items[itemIndex++]),\r\n            windDir: parseFloat(items[itemIndex++]),\r\n            windSpeed: parseFloat(items[itemIndex++])\r\n          });\r\n        }\r\n\r\n        stations.push({\r\n          stationId: stationId,\r\n          lon: lon,\r\n          lat: lat,\r\n          alt: alt,\r\n          datas: datas\r\n        });\r\n      }\r\n\r\n      return {\r\n        date: year + \"-\" + month + \"-\" + day + \" \" + hour + \":00:00\",\r\n        stations: stations\r\n      };\r\n    },\r\n\r\n    // 获取时间\r\n    getElementTime(eleName) {\r\n      const params = new URLSearchParams();\r\n      params.append(\"modeName\", \"qiangtianqi\");\r\n      params.append(\"eleName\", eleName);\r\n      params.append(\"strTime\", \"\");\r\n      params.append(\"forecastTime\", \"\");\r\n      params.append(\"level\", \"\");\r\n      params.append(\"userDefinedParas\", \"\");\r\n      return axios.post(\r\n        \"/proxy/10.20.67.111//PictureInfoForgetFilePath.action\",\r\n        params\r\n      );\r\n    },\r\n\r\n    // 获取最新时间\r\n    getLatestTime() {\r\n      const list = [\r\n        // 实况\r\n        this.getElementTime(\"探空分析:实况探空:54511\"),\r\n        // 预报——Tlnp图\r\n        this.getElementTime(\"模式探空:NCEP\"),\r\n        // 实况——时序图\r\n        this.getElementTime(\"模式探空:List\")\r\n      ];\r\n\r\n      const _getTime = (data) => {\r\n        const timeStr = data.data.path.split(',')[2];\r\n        const time = moment(timeStr, 'YYYY-MM-DD HH:mm:ss');\r\n        if (time.isValid()) {\r\n          return {\r\n            date: time.clone().startOf('day'),\r\n            hour: time.format('HH')\r\n          };\r\n        }\r\n        return;\r\n      };\r\n      \r\n      axios.all(list).then(data => {\r\n        const actTime = _getTime(data[0]);\r\n        const fcstNcepTime = _getTime(data[1]);\r\n        const fcstListTime = _getTime(data[2]);\r\n        if (actTime) {\r\n          this.actDate = actTime.date;\r\n          this.actHour = actTime.hour;\r\n        }\r\n        if (fcstNcepTime) {\r\n          this.fcstNcepDate = fcstNcepTime.date;\r\n          this.fcstNcepHour = fcstNcepTime.hour;\r\n        }\r\n        if (fcstListTime) {\r\n          this.fcstListDate = fcstListTime.date;\r\n          this.fcstListHour = fcstListTime.hour;\r\n        }\r\n        // console.log(actTime);\r\n        // console.log(fcstNcepTime);\r\n        // console.log(fcstListTime);\r\n\r\n        this.emitEvent(this.currDataType);\r\n      })\r\n    },\r\n  }\r\n};\r\n"]}]}