{"remainingRequest":"D:\\program\\frontend\\node_modules\\babel-loader\\lib\\index.js!D:\\program\\frontend\\src\\views\\monitor\\monitor.js?vue&type=script&lang=js&","dependencies":[{"path":"D:\\program\\frontend\\src\\views\\monitor\\monitor.js","mtime":1553855602503},{"path":"D:\\program\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\program\\frontend\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _slicedToArray from \"D:\\\\program\\\\frontend\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/slicedToArray\";\nimport \"core-js/modules/es6.array.fill\";\nimport \"core-js/modules/es6.regexp.split\";\nimport \"core-js/modules/es6.function.name\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.array.find-index\";\nimport \"core-js/modules/es6.array.find\";\nimport _objectSpread from \"D:\\\\program\\\\frontend\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/objectSpread\";\nimport * as moment from \"moment\";\nimport * as axios from \"axios\";\nimport _ from 'lodash';\nimport { DateSelect, LevelSelect, AreaSelect, WholeAgingSelect, TimeSelect, AgingSelect, ImgShow, SideBar } from \"../../components/share\";\nimport { createNamespacedHelpers } from \"vuex\";\n\nvar _createNamespacedHelp = createNamespacedHelpers(\"synthesis\"),\n    mapState = _createNamespacedHelp.mapState,\n    mapGetters = _createNamespacedHelp.mapGetters,\n    mapMutations = _createNamespacedHelp.mapMutations;\n\nimport options from \"../../assets/config/monitor_config\";\nexport default {\n  name: \"Monitor\",\n  components: {\n    DateSelect: DateSelect,\n    LevelSelect: LevelSelect,\n    AreaSelect: AreaSelect,\n    WholeAgingSelect: WholeAgingSelect,\n    TimeSelect: TimeSelect,\n    AgingSelect: AgingSelect,\n    ImgShow: ImgShow,\n    SideBar: SideBar\n  },\n  data: function data() {\n    return {\n      // 该引用存储短期所有配置\n      options: options,\n      cancelRequests: [],\n      area: \"全国\",\n      // 当前选中的预报类型\n      currFcstName: \"强对流\",\n      // 该引用当前选中的要素配置\n      currEleOption: null,\n      // 该引用当前预报配置\n      currFcstOption: null,\n      // 该引用含有当前起报时间以及当前选中要素的id\n      currTypeOption: null,\n      warningSwitch: false,\n      // 当前选中路径下的所有要素id的列表\n      currEleIdList: [],\n      // 图片地址\n      imgPaths: [],\n      // qwSwitch:false,\n      img_active: false,\n      zoomSw: false,\n      areaList: [{\n        label: \"全国\",\n        value: \"全国\",\n        disabled: false\n      }, {\n        label: \"华北\",\n        value: \"华北\",\n        disabled: false\n      }, {\n        label: \"东北\",\n        value: \"东北\",\n        disabled: false\n      }, {\n        label: \"华东\",\n        value: \"华东\",\n        disabled: false\n      }, {\n        label: \"华南\",\n        value: \"华南\",\n        disabled: false\n      }, {\n        label: \"西南\",\n        value: \"西南\",\n        disabled: false\n      }, {\n        label: \"西北\",\n        value: \"西北\",\n        disabled: false\n      }, {\n        label: \"青藏\",\n        value: \"青藏\",\n        disabled: false\n      }, {\n        label: \"新疆\",\n        value: \"新疆\",\n        disabled: false\n      }, {\n        label: \"近海\",\n        value: \"近海\",\n        disabled: false\n      }]\n    };\n  },\n  computed: _objectSpread({}, mapState([\"zoomSwitch\", \"zoomUrl\"]), {\n    // 当前起报时间\n    startTime: function startTime() {\n      if (this.currTypeOption && moment.isMoment(this.currTypeOption.date)) {\n        return this.currTypeOption.date.format('YYYY-MM-DD') + ' ' + this.currTypeOption.hour;\n      }\n\n      return '';\n    },\n    currEleIdListLength: function currEleIdListLength() {\n      return this.currEleIdList.length;\n    }\n  }),\n  created: function created() {\n    this.debouncedFindCondition = _.debounce(this.findCondition, 300);\n  },\n  mounted: function mounted() {\n    this.$set(this.options[4].contents[0], 'startDate', moment());\n    this.$set(this.options[4].contents[0], 'endDate', moment());\n    this.findCondition();\n  },\n  beforeDestroy: function beforeDestroy() {\n    this.cancelAllRequest();\n  },\n  watch: {\n    imgPaths: function imgPaths() {\n      this.updata_zoomUrl(this.imgPaths[0]);\n    },\n    area: function area() {\n      this.onConditionChange();\n    }\n  },\n  methods: _objectSpread({\n    moment: moment,\n    warningFn: function warningFn() {\n      this.warningSwitch = !this.warningSwitch;\n    },\n    highChange: function highChange(val) {\n      options[5].contents[0].high = val;\n      this.onConditionChange();\n    },\n    preChange: function preChange(val) {\n      options[5].contents[0].pressure = val;\n      this.onConditionChange();\n    }\n  }, mapMutations([\"updata_zoomSwitch\", \"updata_zoomUrl\"]), {\n    show_zoom: function show_zoom() {\n      this.updata_zoomSwitch(true);\n      this.updata_zoomUrl(this.imgPaths[0]);\n    },\n    // ...mapMutations([\n    //   \"updata_zoomSwitch\",\n    // ]),\n    close: function close() {\n      this.updata_zoomSwitch(false);\n    },\n    // 键盘事件监听\n    onKeyup: function onKeyup(event) {\n      var _this = this;\n\n      var code = event.code;\n\n      if (code === 'ArrowLeft') {\n        this.$refs.wholeAgingSelect[0].onTuningAging(-1);\n      } else if (code === 'ArrowRight') {\n        this.$refs.wholeAgingSelect[0].onTuningAging(1);\n      } else if (code === 'ArrowUp' || code === 'ArrowDown') {\n        var activeElementId = '';\n        var isProb = this.currFcstName === '概率预报';\n\n        if (isProb) {\n          activeElementId = this.options.find(function (el) {\n            return el.fcstName === _this.currFcstName;\n          }).activeElementId;\n        } else {\n          activeElementId = this.currTypeOption.activeElementId;\n        }\n\n        var currIndex = this.currEleIdList.findIndex(function (id) {\n          return id === activeElementId;\n        });\n        if (currIndex === -1) return;\n        var nextIndex = currIndex + (code === 'ArrowUp' ? -1 : 1);\n\n        if (nextIndex <= 0) {\n          nextIndex = this.currEleIdListLength - 1;\n        } else if (nextIndex >= this.currEleIdListLength) {\n          nextIndex = 0;\n        }\n\n        var nextActiveElementId = this.currEleIdList[nextIndex];\n\n        if (isProb) {\n          this.options.find(function (el) {\n            return el.fcstName === _this.currFcstName;\n          }).activeElementId = nextActiveElementId;\n        } else {\n          this.currTypeOption.activeElementId = nextActiveElementId;\n        }\n\n        this.debouncedFindCondition();\n      }\n    },\n    // 图片切换事件\n    onSwitchImg: function onSwitchImg(sign) {\n      if (sign === 'left') {\n        this.$refs.wholeAgingSelect[0].onTuningAging(-1);\n      } else if (sign === 'right') {\n        this.$refs.wholeAgingSelect[0].onTuningAging(1);\n      } else if (sign === 'top') {\n        this.$refs.levelSelect.onTuningLevel(1);\n      } else if (sign === 'bottom') {\n        this.$refs.levelSelect.onTuningLevel(-1);\n      }\n    },\n    // 条件改变时\n    onConditionChange: function onConditionChange() {\n      this.debouncedFindCondition();\n    },\n    //点击要素时\n    onClickElement: function onClickElement(curr, itemId) {\n      if (curr.activeElementId === itemId) return;\n      curr.activeElementId = itemId;\n      this.debouncedFindCondition();\n    },\n    // 点击条件时\n    onClickCondition: function onClickCondition(curr, itemName) {\n      if (curr.activeConditionName === itemName) return;\n      curr.activeConditionName = itemName;\n      this.debouncedFindCondition();\n    },\n    // 寻找选中的条件\n    findCondition: function findCondition() {\n      var _this2 = this;\n\n      // alert()\n      var currFcst = this.options.find(function (el) {\n        return el.fcstName === _this2.currFcstName;\n      });\n      this.currfcst = currFcst; // console.log(currFcst);\n\n      var id = currFcst.id;\n      this.currFcstOption = currFcst; // 多模式预报\n\n      if (id === \"OBSConvection\") {\n        var currContent = currFcst.contents.find(function (el) {\n          return el.typeName === currFcst.activeTypeName;\n        }); // currContent.contents.forEach(content => {\n\n        currContent.sections.forEach(function (section) {\n          section.items.forEach(function (el) {\n            if (el.id === currContent.activeElementId) {\n              _this2.currEleOption = el;\n              _this2.currTypeOption = currContent;\n              _this2.currEleIdList = currContent.sections.reduce(function (curr, el) {\n                return curr.concat(el.items.map(function (el) {\n                  return el.id;\n                }));\n              }, []); // console.log(this.currEleIdList);\n              // console.log(currContent.typeName);\n              // console.log(currContent.date);\n              // console.log(currContent.hour);\n              // console.log(el.name);\n              // console.log(el);\n              // body处理\n\n              var strTime = '';\n\n              if (currContent.date) {\n                strTime = currContent.date.format('YYYY-MM-DD') + ' ' + currContent.hour + ':00:00';\n              }\n\n              var forecastTime = '';\n\n              if (strTime) {\n                forecastTime = moment(strTime, 'YYYY-MM-DD HH:mm:ss').add(+currFcst.aging, 'hours').format('YYYY-MM-DD HH:mm:ss');\n              }\n\n              var name = el.name;\n\n              if (name.indexOf('人工站') != -1 || name.indexOf('无质控') != -1) {\n                name = name.substr(0, name.indexOf('('));\n              } else if (name.indexOf('(') != -1) {\n                name = name.substr(0, name.length - 1);\n                name = name.split('(').join('_');\n              }\n\n              var eleName = [currContent.id, name, _this2.area, currFcst.date].join(':');\n              var body = {\n                modeName: 'qiangtianqi',\n                eleName: eleName,\n                forecastTime: forecastTime,\n                level: el.activeLevel,\n                userDefinedParas: '',\n                strTime: strTime // 有起报时间 与 无起报时间(即第一次请求)\n\n              };\n\n              if (strTime) {\n                if (currContent.isStability === true) {\n                  //当稳定性为true\n                  _this2.requestStabilityImgPath(body, currContent);\n                } else {\n                  _this2.requestImgPath(body);\n                }\n              } else {\n                _this2.requestImgPath(body, currContent, currFcst);\n              }\n            }\n          });\n        });\n      } else if (id === \"OBSAws\") {\n        //集合预报\n        var _currContent = currFcst.contents.find(function (el) {\n          return el.typeName === currFcst.activeTypeName;\n        }); // currContent.contents.forEach(content => {\n\n\n        _currContent.sections.forEach(function (section) {\n          section.items.forEach(function (el) {\n            if (el.id === _currContent.activeElementId) {\n              _this2.currEleOption = el;\n              _this2.currTypeOption = _currContent;\n              _this2.currEleIdList = _currContent.sections.reduce(function (curr, el) {\n                return curr.concat(el.items.map(function (el) {\n                  return el.id;\n                }));\n              }, []); // console.log(this.currEleIdList);\n              // console.log(currContent.typeName);\n              // console.log(currContent.date);\n              // console.log(currContent.hour);\n              // console.log(el.name);\n              // console.log(el);\n              // body处理\n\n              var strTime = '';\n\n              if (_currContent.date) {\n                strTime = _currContent.date.format('YYYY-MM-DD') + ' ' + _currContent.hour + ':00:00';\n              }\n\n              var forecastTime = '';\n\n              if (strTime) {\n                forecastTime = moment(strTime, 'YYYY-MM-DD HH:mm:ss').add(+currFcst.aging, 'hours').format('YYYY-MM-DD HH:mm:ss');\n              }\n\n              var name = el.name;\n\n              if (name.indexOf('(') != -1) {\n                name = name.substr(0, name.indexOf('('));\n              }\n\n              var arr = [];\n\n              if (name == '降水量') {\n                arr.push(currFcst.date);\n\n                _this2.$set(_currContent, 'dateSwitch', false);\n              } else {\n                _this2.$set(_currContent, 'dateSwitch', true);\n              }\n\n              var eleName = [_currContent.id, name, _this2.area].concat(arr).join(':');\n              var body = {\n                modeName: 'qiangtianqi',\n                eleName: eleName,\n                forecastTime: forecastTime,\n                level: el.activeLevel,\n                userDefinedParas: '',\n                strTime: strTime // 有起报时间 与 无起报时间(即第一次请求)\n\n              };\n\n              if (strTime) {\n                if (_currContent.isStability === true) {\n                  //当稳定性为true\n                  _this2.requestStabilityImgPath(body, _currContent);\n                } else {\n                  _this2.requestImgPath(body);\n                }\n              } else {\n                _this2.requestImgPath(body, _currContent, currFcst);\n              }\n            }\n          });\n        });\n      } else if (id === \"OBSLight\") {\n        //概率预报\n        var _currContent2 = currFcst.contents.find(function (el) {\n          return el.typeName === currFcst.activeTypeName;\n        }); // currContent.contents.forEach(content => {\n\n\n        _currContent2.sections.forEach(function (section) {\n          section.items.forEach(function (el) {\n            if (el.id === _currContent2.activeElementId) {\n              _this2.currEleOption = el;\n              _this2.currTypeOption = _currContent2;\n              _this2.currEleIdList = _currContent2.sections.reduce(function (curr, el) {\n                return curr.concat(el.items.map(function (el) {\n                  return el.id;\n                }));\n              }, []); // console.log(this.currEleIdList);\n              // console.log(currContent.typeName);\n              // console.log(currContent.date);\n              // console.log(currContent.hour);\n              // console.log(el.name);\n              // console.log(el);\n              // body处理\n\n              var name = el.name;\n              var arr = [];\n              console.log(name.indexOf('滑动'));\n\n              if (name.indexOf('滑动') == -1) {\n                arr.push(currFcst.date);\n\n                _this2.$set(_currContent2, 'dateSwitch', false);\n\n                _this2.$set(_currContent2, 'minuteSwitch', false);\n              } else {\n                _this2.$set(_currContent2, 'minuteSwitch', true);\n\n                _this2.$set(_currContent2, 'dateSwitch', true);\n              }\n\n              var strTime = '';\n              var minute = '00';\n\n              if (_currContent2.minSwitch) {\n                minute = _currContent2.minute;\n              } // console.log(minute,currContent.minuteSwitch)\n\n\n              if (_currContent2.date) {\n                strTime = _currContent2.date.format('YYYY-MM-DD') + ' ' + _currContent2.hour + \":\".concat(minute, \":00\");\n              }\n\n              var forecastTime = '';\n\n              if (strTime) {\n                forecastTime = moment(strTime, 'YYYY-MM-DD HH:mm:ss').add(+currFcst.aging, 'hours').format('YYYY-MM-DD HH:mm:ss');\n              }\n\n              var eleName = [_currContent2.id, name, _this2.area].concat(arr).join(':');\n              var body = {\n                modeName: 'qiangtianqi',\n                eleName: eleName,\n                forecastTime: forecastTime,\n                level: el.activeLevel,\n                userDefinedParas: '',\n                strTime: strTime // 有起报时间 与 无起报时间(即第一次请求)\n\n              };\n\n              if (strTime) {\n                if (_currContent2.isStability === true) {\n                  //当稳定性为true\n                  _this2.requestStabilityImgPath(body, _currContent2);\n                } else {\n                  _this2.requestImgPath(body);\n                }\n              } else {\n                _this2.requestImgPath(body, _currContent2, currFcst);\n              }\n            }\n          });\n        });\n      } else if (id === 'OBSSatellite') {\n        var _currContent3 = currFcst.contents.find(function (el) {\n          return el.typeName === currFcst.activeTypeName;\n        }); // currContent.contents.forEach(content => {\n\n\n        _currContent3.sections.forEach(function (section) {\n          section.items.forEach(function (el) {\n            if (el.id === _currContent3.activeElementId) {\n              _this2.currEleOption = el;\n              _this2.currTypeOption = _currContent3;\n              _this2.currEleIdList = _currContent3.sections.reduce(function (curr, el) {\n                return curr.concat(el.items.map(function (el) {\n                  return el.id;\n                }));\n              }, []); // console.log(this.currEleIdList);\n              // console.log(currContent.typeName);\n              // console.log(currContent.date);\n              // console.log(currContent.hour);\n              // console.log(el.name);\n              // console.log(el);\n              // body处理\n\n              var strTime = '';\n\n              if (_currContent3.date) {\n                strTime = _currContent3.date.format('YYYY-MM-DD') + ' ' + _currContent3.hour + ':00:00';\n              }\n\n              var forecastTime = '';\n\n              if (strTime) {\n                forecastTime = moment(strTime, 'YYYY-MM-DD HH:mm:ss').add(+currFcst.aging, 'hours').format('YYYY-MM-DD HH:mm:ss');\n              }\n\n              var name = el.name;\n              var arr = []; // console.log(name.indexOf('滑动'))\n\n              if (name.indexOf('基于红外') != -1) {\n                arr.push(currFcst.date);\n\n                _this2.$set(_currContent3, 'dateSwitch', false); // this.$set(currContent, 'minSwitch', false)\n\n              } else {\n                // this.$set(currContent, 'minSwitch', true)\n                _this2.$set(_currContent3, 'dateSwitch', true);\n              }\n\n              var eleName = [_currContent3.id, name].concat(arr).join(':');\n              var body = {\n                modeName: 'qiangtianqi',\n                eleName: eleName,\n                forecastTime: forecastTime,\n                level: el.activeLevel,\n                userDefinedParas: '',\n                strTime: strTime,\n                symbol: 1 // 有起报时间 与 无起报时间(即第一次请求)\n\n              };\n\n              if (strTime) {\n                if (_currContent3.isStability === true) {\n                  //当稳定性为true\n                  _this2.requestStabilityImgPath(body, _currContent3);\n                } else {\n                  _this2.requestImgPath(body);\n                }\n              } else {\n                _this2.requestImgPath(body, _currContent3, currFcst);\n              }\n            }\n          });\n        });\n      } else if (id === 'OBSRadar') {\n        var _currContent4 = currFcst.contents.find(function (el) {\n          return el.typeName === currFcst.activeTypeName;\n        }); // currContent.contents.forEach(content => {\n\n\n        _currContent4.sections.forEach(function (section) {\n          section.items.forEach(function (el) {\n            if (el.id === _currContent4.activeElementId) {\n              _this2.currEleOption = el;\n              _this2.currTypeOption = _currContent4;\n              _this2.currEleIdList = _currContent4.sections.reduce(function (curr, el) {\n                return curr.concat(el.items.map(function (el) {\n                  return el.id;\n                }));\n              }, []); // console.log(this.currEleIdList);\n              // console.log(currContent.typeName);\n              // console.log(currContent.date);\n              // console.log(currContent.hour);\n              // console.log(el.name);\n              // console.log(el);\n              // body处理\n\n              var name = el.name;\n              var arr = [];\n\n              if (name.indexOf('拼图') != -1) {\n                name = _this2.area + name;\n\n                _this2.$set(_currContent4, 'minuteSwitch', true);\n\n                _this2.$set(_currContent4, 'dateSwitch', true);\n              } else {\n                arr.push(currFcst.date);\n\n                _this2.$set(_currContent4, 'minuteSwitch', false);\n\n                _this2.$set(_currContent4, 'dateSwitch', false);\n              }\n\n              var strTime = '';\n              var minute = '00';\n\n              if (_currContent4.minuteSwitch) {\n                minute = _currContent4.minute;\n              } // console.log(minute,currContent.minuteSwitch)\n\n\n              if (_currContent4.date) {\n                strTime = _currContent4.date.format('YYYY-MM-DD') + ' ' + _currContent4.hour + \":\".concat(minute, \":00\");\n              }\n\n              var forecastTime = '';\n\n              if (strTime) {\n                forecastTime = moment(strTime, 'YYYY-MM-DD HH:mm:ss').add(+currFcst.aging, 'hours').format('YYYY-MM-DD HH:mm:ss');\n              } // console.log(name.indexOf('滑动'))\n              // if (name.indexOf('红外') != -1) {\n              //   arr.push(currFcst.date)\n              //   this.$set(currContent, 'dateSwitch', false)\n              //   // this.$set(currContent, 'minSwitch', false)\n              // } else {\n              //   // this.$set(currContent, 'minSwitch', true)\n              //   this.$set(currContent, 'dateSwitch', true)\n              // }\n\n\n              var eleName = [_currContent4.id, name].concat(arr).join(':');\n              var body = {\n                modeName: 'qiangtianqi',\n                eleName: eleName,\n                forecastTime: forecastTime,\n                level: el.activeLevel,\n                userDefinedParas: '',\n                strTime: strTime,\n                symbol: 1 // 有起报时间 与 无起报时间(即第一次请求)\n\n              };\n\n              if (strTime) {\n                if (_currContent4.isStability === true) {\n                  //当稳定性为true\n                  _this2.requestStabilityImgPath(body, _currContent4);\n                } else {\n                  _this2.requestImgPath(body);\n                }\n              } else {\n                _this2.requestImgPath(body, _currContent4, currFcst);\n              }\n            }\n          });\n        });\n      } else if (id === 'windprofileMosaic') {\n        var _currContent5 = currFcst.contents.find(function (el) {\n          return el.typeName === currFcst.activeTypeName;\n        }); // currContent.contents.forEach(content => {\n\n\n        _currContent5.sections.forEach(function (section) {\n          section.items.forEach(function (el) {\n            if (el.id === _currContent5.activeElementId) {\n              _this2.currEleOption = el;\n              _this2.currTypeOption = _currContent5;\n              _this2.currEleIdList = _currContent5.sections.reduce(function (curr, el) {\n                return curr.concat(el.items.map(function (el) {\n                  return el.id;\n                }));\n              }, []); // body处理\n\n              var name = _currContent5.name;\n              var arr = [];\n\n              if (el.name === '风场') {\n                _currContent5.tabSwitch = false;\n                _currContent5.minuteSwitch = true;\n                arr.push(_currContent5.high);\n              } else {\n                _currContent5.tabSwitch = true;\n                arr.push(_currContent5.pressure);\n                _currContent5.minuteSwitch = false;\n                name = 'comp';\n                _currContent5.date = '';\n              }\n\n              var strTime = '';\n              var minute = '00';\n\n              if (_currContent5.minuteSwitch) {\n                minute = _currContent5.minute;\n              } // console.log(minute,currContent.minuteSwitch)\n\n\n              if (_currContent5.date) {\n                strTime = _currContent5.date.format('YYYY-MM-DD') + ' ' + _currContent5.hour + \":\".concat(minute, \":00\");\n              }\n\n              var forecastTime = '';\n\n              if (strTime) {\n                forecastTime = moment(strTime, 'YYYY-MM-DD HH:mm:ss').add(+currFcst.aging, 'hours').format('YYYY-MM-DD HH:mm:ss');\n              }\n\n              var eleName = [_currContent5.id, name].concat(arr).join(':');\n              var body = {\n                modeName: 'qiangtianqi',\n                eleName: eleName,\n                forecastTime: forecastTime,\n                level: el.activeLevel,\n                userDefinedParas: '',\n                strTime: strTime,\n                symbol: 1 // 有起报时间 与 无起报时间(即第一次请求)\n\n              };\n\n              if (strTime) {\n                if (_currContent5.isStability === true) {\n                  //当稳定性为true\n                  _this2.requestStabilityImgPath(body, _currContent5);\n                } else {\n                  _this2.requestImgPath(body);\n                }\n              } else {\n                _this2.requestImgPath(body, _currContent5, currFcst);\n              }\n            }\n          });\n        });\n      }\n    },\n    // 请求图片路径(只针对稳定性)\n    requestStabilityImgPath: function requestStabilityImgPath(body, citeObj) {\n      var _this3 = this;\n\n      // 取消之前的所有未完成的请求\n      this.cancelAllRequest(); // 存储取消时的token\n\n      var CancelToken = axios.CancelToken; // 请求处理\n\n      var h = citeObj.hourList;\n      var agingInterval = citeObj.hourList.length > 1 ? Math.abs(h[1] - h[0]) : 24;\n      var startTime = moment(body.strTime, 'YYYY-MM-DD HH:mm:ss');\n      var requestList = new Array(4).fill(0).map(function (el, i) {\n        var strTime = startTime.clone().subtract(agingInterval * i, 'hours').format('YYYY-MM-DD HH:mm:ss');\n\n        var currBody = _objectSpread({}, body, {\n          strTime: strTime\n        });\n\n        var params = new URLSearchParams();\n\n        for (var key in currBody) {\n          params.append(key, currBody[key]);\n        }\n\n        return axios.post(\"/proxy/10.20.67.111/PictureInfoForgetFilePath.action\", params, {\n          cancelToken: new CancelToken(function (c) {\n            _this3.cancelRequests.push(c);\n          })\n        });\n      }); // 请求数据\n\n      axios.all(requestList).then(function (datas) {\n        _this3.imgPaths = datas.map(function (data) {\n          if (!data.data.path) return '';\n          var path = data.data.path.split(',').pop();\n\n          if (path) {\n            return 'http://10.20.67.111/getPic.action2?ppath=' + path;\n          }\n\n          return '';\n        });\n      });\n    },\n    // 请求图片路径\n    requestImgPath: function requestImgPath(body, timeCiteObj, agingCiteObj) {\n      var _this4 = this;\n\n      // 取消之前的所有未完成的请求\n      this.cancelAllRequest(); // 存储取消时的token\n\n      var CancelToken = axios.CancelToken; // 参数转换\n\n      var params = new URLSearchParams();\n\n      for (var key in body) {\n        params.append(key, body[key]);\n      } // 请求数据\n\n\n      axios.post(\"/proxy/10.20.67.111/PictureInfoForgetFilePath.action\", params, {\n        cancelToken: new CancelToken(function (c) {\n          _this4.cancelRequests.push(c);\n        })\n      }).then(function (data) {\n        if (!data.data.path) {\n          _this4.imgPaths = [''];\n          return;\n        } // [模式名字 要素名字  发布时间  预报时间 层次  文件路径]\n\n\n        var _data$data$path$split = data.data.path.split(','),\n            _data$data$path$split2 = _slicedToArray(_data$data$path$split, 6),\n            patternName = _data$data$path$split2[0],\n            eleName = _data$data$path$split2[1],\n            startTime = _data$data$path$split2[2],\n            fcstTime = _data$data$path$split2[3],\n            level = _data$data$path$split2[4],\n            filePath = _data$data$path$split2[5]; // 第一次请求数据 && 有文件路径返回时\n\n\n        if (timeCiteObj && filePath) {\n          var startT = moment(startTime, 'YYYY-MM-DD HH:mm:ss');\n          var fcstT = moment(fcstTime, 'YYYY-MM-DD HH:mm:ss');\n          var startStamp = startT.unix();\n          var fcstStamp = fcstT.unix();\n\n          var aging = _this4.formatAging((fcstStamp - startStamp) / 60 / 60);\n\n          agingCiteObj.aging = aging;\n          timeCiteObj.date = startT.clone().startOf('day');\n          timeCiteObj.hour = startT.format('HH');\n          timeCiteObj.minute = startT.format('mm');\n          _this4.currEleOption.activeLevel = level;\n        }\n\n        _this4.imgPaths = ['http://10.20.67.111/getPic.action2?ppath=' + filePath];\n      });\n    },\n    // 格式化时效\n    formatAging: function formatAging(val) {\n      val += '';\n      var leng = val.length;\n      if (leng === 1) return '00' + val;\n      if (leng === 2) return '0' + val;\n      return val;\n    },\n    // 取消所有请求\n    cancelAllRequest: function cancelAllRequest() {\n      if (this.cancelRequests.length) {\n        this.cancelRequests.forEach(function (el) {\n          return el();\n        });\n        this.cancelRequests = [];\n      }\n    },\n    get_gif: function get_gif() {\n      // console.log(this.options[4].contents[0].startDate.format('YYYYMMDD'))\n      var obj = this.options[4].contents[0];\n      var url = \"http://10.20.67.111/PictureInfoFordown.action?start= \".concat(moment(obj.startDate).format(\"YYYYMMDD\".concat(obj.startHour).concat(obj.startMinute)), \" &end= \").concat(moment(obj.endDate).format(\"YYYYMMDD\".concat(obj.endHour).concat(obj.endMinute)), \" &area= \").concat(obj.areaid, \" &jiangetime= \").concat(obj.interval, \" &donghuasd= \").concat(obj.speed, \"&chinaRegion= \").concat(obj.areaid); // console.log(url)\n\n      window.open(url, '_blank');\n    }\n  })\n};",{"version":3,"sources":["D:\\program\\frontend\\src\\views\\monitor\\monitor.js"],"names":["moment","axios","_","DateSelect","LevelSelect","AreaSelect","WholeAgingSelect","TimeSelect","AgingSelect","ImgShow","SideBar","createNamespacedHelpers","mapState","mapGetters","mapMutations","options","name","components","data","cancelRequests","area","currFcstName","currEleOption","currFcstOption","currTypeOption","warningSwitch","currEleIdList","imgPaths","img_active","zoomSw","areaList","label","value","disabled","computed","startTime","isMoment","date","format","hour","currEleIdListLength","length","created","debouncedFindCondition","debounce","findCondition","mounted","$set","contents","beforeDestroy","cancelAllRequest","watch","updata_zoomUrl","onConditionChange","methods","warningFn","highChange","val","high","preChange","pressure","show_zoom","updata_zoomSwitch","close","onKeyup","event","code","$refs","wholeAgingSelect","onTuningAging","activeElementId","isProb","find","el","fcstName","currIndex","findIndex","id","nextIndex","nextActiveElementId","onSwitchImg","sign","levelSelect","onTuningLevel","onClickElement","curr","itemId","onClickCondition","itemName","activeConditionName","currFcst","currfcst","currContent","typeName","activeTypeName","sections","forEach","section","items","reduce","concat","map","strTime","forecastTime","add","aging","indexOf","substr","split","join","eleName","body","modeName","level","activeLevel","userDefinedParas","isStability","requestStabilityImgPath","requestImgPath","arr","push","console","log","minute","minSwitch","symbol","minuteSwitch","tabSwitch","citeObj","CancelToken","h","hourList","agingInterval","Math","abs","requestList","Array","fill","i","clone","subtract","currBody","params","URLSearchParams","key","append","post","cancelToken","c","all","then","datas","path","pop","timeCiteObj","agingCiteObj","patternName","fcstTime","filePath","startT","fcstT","startStamp","unix","fcstStamp","formatAging","startOf","leng","get_gif","obj","url","startDate","startHour","startMinute","endDate","endHour","endMinute","areaid","interval","speed","window","open"],"mappings":"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","sourcesContent":["import * as moment from \"moment\";\r\nimport * as axios from \"axios\";\r\nimport _ from 'lodash';\r\nimport {\r\n  DateSelect,\r\n  LevelSelect,\r\n  AreaSelect,\r\n  WholeAgingSelect,\r\n  TimeSelect,\r\n  AgingSelect,\r\n  ImgShow,\r\n  SideBar\r\n} from \"../../components/share\";\r\nimport { createNamespacedHelpers } from \"vuex\";\r\nconst { mapState, mapGetters, mapMutations } = createNamespacedHelpers(\r\n  \"synthesis\"\r\n);\r\nimport options from \"../../assets/config/monitor_config\";\r\n\r\n\r\nexport default {\r\n  name: \"Monitor\",\r\n  components: { DateSelect, LevelSelect, AreaSelect, WholeAgingSelect, TimeSelect, AgingSelect, ImgShow,SideBar },\r\n  data: function () {\r\n    return {\r\n\r\n      // 该引用存储短期所有配置\r\n      options,\r\n\r\n      cancelRequests: [],\r\n\r\n      area: \"全国\",\r\n\r\n      // 当前选中的预报类型\r\n      currFcstName: \"强对流\",\r\n\r\n      // 该引用当前选中的要素配置\r\n      currEleOption: null,\r\n\r\n      // 该引用当前预报配置\r\n      currFcstOption: null,\r\n\r\n      // 该引用含有当前起报时间以及当前选中要素的id\r\n      currTypeOption: null,\r\n      warningSwitch:false,\r\n      // 当前选中路径下的所有要素id的列表\r\n      currEleIdList: [],\r\n\r\n      // 图片地址\r\n      imgPaths: [],\r\n      // qwSwitch:false,\r\n      img_active:false,\r\n      zoomSw:false,\r\n      areaList: [\r\n        {\r\n          label: \"全国\",\r\n          value: \"全国\",\r\n          disabled: false\r\n        },\r\n        {\r\n          label: \"华北\",\r\n          value: \"华北\",\r\n          disabled: false\r\n        },\r\n        {\r\n          label: \"东北\",\r\n          value: \"东北\",\r\n          disabled: false\r\n        },\r\n        {\r\n          label: \"华东\",\r\n          value: \"华东\",\r\n          disabled: false\r\n        },\r\n        {\r\n          label: \"华南\",\r\n          value: \"华南\",\r\n          disabled: false\r\n        },\r\n        {\r\n          label: \"西南\",\r\n          value: \"西南\",\r\n          disabled: false\r\n        },\r\n        {\r\n          label: \"西北\",\r\n          value: \"西北\",\r\n          disabled: false\r\n        },\r\n        {\r\n          label: \"青藏\",\r\n          value: \"青藏\",\r\n          disabled: false\r\n        },\r\n        {\r\n          label: \"新疆\",\r\n          value: \"新疆\",\r\n          disabled: false\r\n        },\r\n        {\r\n          label: \"近海\",\r\n          value: \"近海\",\r\n          disabled: false\r\n        }\r\n      ]\r\n    };\r\n  },\r\n  computed: {\r\n    ...mapState([\"zoomSwitch\",\"zoomUrl\"]),\r\n    // 当前起报时间\r\n    startTime() {\r\n      if (this.currTypeOption && moment.isMoment(this.currTypeOption.date)) {\r\n        return this.currTypeOption.date.format('YYYY-MM-DD') + ' ' + this.currTypeOption.hour;\r\n      }\r\n      return '';\r\n    },\r\n    currEleIdListLength() {\r\n      return this.currEleIdList.length;\r\n    }\r\n  },\r\n  created() {\r\n    this.debouncedFindCondition = _.debounce(this.findCondition, 300);\r\n  },\r\n  mounted() {\r\n    this.$set(this.options[4].contents[0],'startDate',moment())\r\n    this.$set(this.options[4].contents[0],'endDate',moment())\r\n    this.findCondition();\r\n  },\r\n\r\n  beforeDestroy() {\r\n    this.cancelAllRequest();\r\n  },\r\n  watch:{\r\n    imgPaths(){\r\n      this.updata_zoomUrl(this.imgPaths[0])\r\n    },\r\n    area(){\r\n      this.onConditionChange()\r\n    }\r\n  },\r\n  methods: {\r\n    moment,\r\n    warningFn(){\r\n      this.warningSwitch=!this.warningSwitch\r\n    },\r\n    highChange(val){\r\n      options[5].contents[0].high=val\r\n      this.onConditionChange()\r\n    },\r\n    preChange(val){\r\n      options[5].contents[0].pressure=val\r\n      this.onConditionChange()\r\n    },\r\n    ...mapMutations([\"updata_zoomSwitch\",\"updata_zoomUrl\"]),\r\n    show_zoom(){\r\n      this.updata_zoomSwitch(true)\r\n      this.updata_zoomUrl(this.imgPaths[0])\r\n    },\r\n    // ...mapMutations([\r\n    //   \"updata_zoomSwitch\",\r\n    // ]),\r\n    close(){\r\n      this.updata_zoomSwitch(false)\r\n    },\r\n    // 键盘事件监听\r\n    onKeyup(event) {\r\n      const { code } = event;\r\n      if (code === 'ArrowLeft') {\r\n        this.$refs.wholeAgingSelect[0].onTuningAging(-1);\r\n      } else if (code === 'ArrowRight') {\r\n        this.$refs.wholeAgingSelect[0].onTuningAging(1);\r\n      } else if (code === 'ArrowUp' || code === 'ArrowDown') {\r\n\r\n        let activeElementId = '';\r\n        const isProb = this.currFcstName === '概率预报';\r\n        if (isProb) {\r\n          activeElementId = this.options.find(el => el.fcstName === this.currFcstName).activeElementId;\r\n        } else {\r\n          activeElementId = this.currTypeOption.activeElementId;\r\n        }\r\n        const currIndex = this.currEleIdList.findIndex(id => id === activeElementId);\r\n        if (currIndex === -1) return;\r\n        let nextIndex = currIndex + (code === 'ArrowUp' ? -1 : 1);\r\n        if (nextIndex <= 0) {\r\n          nextIndex = this.currEleIdListLength - 1;\r\n        } else if (nextIndex >= this.currEleIdListLength) {\r\n          nextIndex = 0;\r\n        }\r\n\r\n        const nextActiveElementId = this.currEleIdList[nextIndex];\r\n        if (isProb) {\r\n          this.options.find(el => el.fcstName === this.currFcstName).activeElementId = nextActiveElementId;\r\n        } else {\r\n          this.currTypeOption.activeElementId = nextActiveElementId;\r\n        }\r\n\r\n        this.debouncedFindCondition();\r\n      }\r\n    },\r\n\r\n    // 图片切换事件\r\n    onSwitchImg(sign) {\r\n      if (sign === 'left') {\r\n        this.$refs.wholeAgingSelect[0].onTuningAging(-1);\r\n      } else if (sign === 'right') {\r\n        this.$refs.wholeAgingSelect[0].onTuningAging(1);\r\n      } else if (sign === 'top') {\r\n        this.$refs.levelSelect.onTuningLevel(1);\r\n      } else if (sign === 'bottom') {\r\n        this.$refs.levelSelect.onTuningLevel(-1);\r\n      }\r\n    },\r\n\r\n    // 条件改变时\r\n    onConditionChange() {\r\n      this.debouncedFindCondition();\r\n    },\r\n\r\n    //点击要素时\r\n    onClickElement(curr, itemId) {\r\n      if (curr.activeElementId === itemId) return;\r\n      curr.activeElementId = itemId;\r\n      this.debouncedFindCondition();\r\n    },\r\n\r\n    // 点击条件时\r\n    onClickCondition(curr, itemName) {\r\n      if (curr.activeConditionName === itemName) return;\r\n      curr.activeConditionName = itemName;\r\n      this.debouncedFindCondition();\r\n    },\r\n\r\n    // 寻找选中的条件\r\n    findCondition() {\r\n      // alert()\r\n      const currFcst = this.options.find(\r\n        el => el.fcstName === this.currFcstName\r\n      );\r\n      this.currfcst = currFcst;\r\n      // console.log(currFcst);\r\n      const id = currFcst.id;\r\n\r\n      this.currFcstOption = currFcst;\r\n\r\n      // 多模式预报\r\n      if (id === \"OBSConvection\") {\r\n        const currContent = currFcst.contents.find(\r\n          el => el.typeName === currFcst.activeTypeName\r\n        );\r\n        // currContent.contents.forEach(content => {\r\n        currContent.sections.forEach(section => {\r\n          section.items.forEach(el => {\r\n            if (el.id === currContent.activeElementId) {\r\n              this.currEleOption = el;\r\n              this.currTypeOption = currContent;\r\n              this.currEleIdList = currContent.sections.reduce((curr, el) => {\r\n                return curr.concat(el.items.map(el => el.id));\r\n              }, []);\r\n              // console.log(this.currEleIdList);\r\n              // console.log(currContent.typeName);\r\n              // console.log(currContent.date);\r\n              // console.log(currContent.hour);\r\n              // console.log(el.name);\r\n              // console.log(el);\r\n\r\n              // body处理\r\n              let strTime = '';\r\n              if (currContent.date) {\r\n                strTime = currContent.date.format('YYYY-MM-DD') + ' ' + currContent.hour + ':00:00';\r\n              }\r\n              let forecastTime = '';\r\n              if (strTime) {\r\n                forecastTime = moment(strTime, 'YYYY-MM-DD HH:mm:ss').add(+currFcst.aging, 'hours').format('YYYY-MM-DD HH:mm:ss');\r\n              }\r\n              let name = el.name\r\n              if (name.indexOf('人工站') != -1 || name.indexOf('无质控') != -1) {\r\n                name = name.substr(0, name.indexOf('('))\r\n              } else if (name.indexOf('(') != -1) {\r\n                name = name.substr(0, name.length - 1)\r\n                name = name.split('(').join('_')\r\n              }\r\n              const eleName = [currContent.id, name, this.area, currFcst.date].join(':');\r\n              const body = {\r\n                modeName: 'qiangtianqi',\r\n                eleName,\r\n                forecastTime,\r\n                level: el.activeLevel,\r\n                userDefinedParas: '',\r\n                strTime\r\n              }\r\n              // 有起报时间 与 无起报时间(即第一次请求)\r\n              if (strTime) {\r\n                if (currContent.isStability === true) {  //当稳定性为true\r\n                  this.requestStabilityImgPath(body, currContent);\r\n                } else {\r\n                  this.requestImgPath(body);\r\n                }\r\n              } else {\r\n                this.requestImgPath(body, currContent, currFcst);\r\n              }\r\n\r\n            }\r\n          });\r\n        });\r\n\r\n      } else if (id === \"OBSAws\") {  //集合预报\r\n        const currContent = currFcst.contents.find(\r\n          el => el.typeName === currFcst.activeTypeName\r\n        );\r\n        // currContent.contents.forEach(content => {\r\n        currContent.sections.forEach(section => {\r\n          section.items.forEach(el => {\r\n            if (el.id === currContent.activeElementId) {\r\n              this.currEleOption = el;\r\n              this.currTypeOption = currContent;\r\n              this.currEleIdList = currContent.sections.reduce((curr, el) => {\r\n                return curr.concat(el.items.map(el => el.id));\r\n              }, []);\r\n              // console.log(this.currEleIdList);\r\n              // console.log(currContent.typeName);\r\n              // console.log(currContent.date);\r\n              // console.log(currContent.hour);\r\n              // console.log(el.name);\r\n              // console.log(el);\r\n\r\n              // body处理\r\n              let strTime = '';\r\n              if (currContent.date) {\r\n                strTime = currContent.date.format('YYYY-MM-DD') + ' ' + currContent.hour + ':00:00';\r\n              }\r\n              let forecastTime = '';\r\n              if (strTime) {\r\n                forecastTime = moment(strTime, 'YYYY-MM-DD HH:mm:ss').add(+currFcst.aging, 'hours').format('YYYY-MM-DD HH:mm:ss');\r\n              }\r\n              let name = el.name\r\n              if (name.indexOf('(') != -1) {\r\n                name = name.substr(0, name.indexOf('('))\r\n              }\r\n              let arr = []\r\n              if (name == '降水量') {\r\n                arr.push(currFcst.date)\r\n                this.$set(currContent, 'dateSwitch', false)\r\n              } else {\r\n                this.$set(currContent, 'dateSwitch', true)\r\n              }\r\n              const eleName = [currContent.id, name, this.area, ...arr].join(':');\r\n              const body = {\r\n                modeName: 'qiangtianqi',\r\n                eleName,\r\n                forecastTime,\r\n                level: el.activeLevel,\r\n                userDefinedParas: '',\r\n                strTime\r\n              }\r\n              // 有起报时间 与 无起报时间(即第一次请求)\r\n              if (strTime) {\r\n                if (currContent.isStability === true) {  //当稳定性为true\r\n                  this.requestStabilityImgPath(body, currContent);\r\n                } else {\r\n                  this.requestImgPath(body);\r\n                }\r\n              } else {\r\n                this.requestImgPath(body, currContent, currFcst);\r\n              }\r\n\r\n            }\r\n          });\r\n        });\r\n\r\n      } else if (id === \"OBSLight\") {  //概率预报\r\n\r\n        const currContent = currFcst.contents.find(\r\n          el => el.typeName === currFcst.activeTypeName\r\n        );\r\n        // currContent.contents.forEach(content => {\r\n        currContent.sections.forEach(section => {\r\n          section.items.forEach(el => {\r\n            if (el.id === currContent.activeElementId) {\r\n              this.currEleOption = el;\r\n              this.currTypeOption = currContent;\r\n              this.currEleIdList = currContent.sections.reduce((curr, el) => {\r\n                return curr.concat(el.items.map(el => el.id));\r\n              }, []);\r\n              // console.log(this.currEleIdList);\r\n              // console.log(currContent.typeName);\r\n              // console.log(currContent.date);\r\n              // console.log(currContent.hour);\r\n              // console.log(el.name);\r\n              // console.log(el);\r\n\r\n              // body处理\r\n              let name = el.name\r\n              let arr = []\r\n              console.log(name.indexOf('滑动'))\r\n              if (name.indexOf('滑动') == -1) {\r\n                arr.push(currFcst.date)\r\n                this.$set(currContent, 'dateSwitch', false)\r\n                this.$set(currContent, 'minuteSwitch', false)\r\n              } else {\r\n                this.$set(currContent, 'minuteSwitch', true)\r\n                this.$set(currContent, 'dateSwitch', true)\r\n              }\r\n              let strTime = '';\r\n              let minute='00'\r\n              if(currContent.minSwitch){\r\n                minute=currContent.minute\r\n              }\r\n              // console.log(minute,currContent.minuteSwitch)\r\n              if (currContent.date) {\r\n                strTime = currContent.date.format('YYYY-MM-DD') + ' ' + currContent.hour + `:${minute}:00`;\r\n              }\r\n              let forecastTime = '';\r\n              if (strTime) {\r\n                forecastTime = moment(strTime, 'YYYY-MM-DD HH:mm:ss').add(+currFcst.aging, 'hours').format('YYYY-MM-DD HH:mm:ss');\r\n              }\r\n              const eleName = [currContent.id, name, this.area, ...arr].join(':');\r\n              const body = {\r\n                modeName: 'qiangtianqi',\r\n                eleName,\r\n                forecastTime,\r\n                level: el.activeLevel,\r\n                userDefinedParas: '',\r\n                strTime\r\n              }\r\n              // 有起报时间 与 无起报时间(即第一次请求)\r\n              if (strTime) {\r\n                if (currContent.isStability === true) {  //当稳定性为true\r\n                  this.requestStabilityImgPath(body, currContent);\r\n                } else {\r\n                  this.requestImgPath(body);\r\n                }\r\n              } else {\r\n                this.requestImgPath(body, currContent, currFcst);\r\n              }\r\n\r\n            }\r\n          });\r\n        });\r\n\r\n      } else if (id === 'OBSSatellite') {\r\n        const currContent = currFcst.contents.find(\r\n          el => el.typeName === currFcst.activeTypeName\r\n        );\r\n        // currContent.contents.forEach(content => {\r\n        currContent.sections.forEach(section => {\r\n          section.items.forEach(el => {\r\n            if (el.id === currContent.activeElementId) {\r\n              this.currEleOption = el;\r\n              this.currTypeOption = currContent;\r\n              this.currEleIdList = currContent.sections.reduce((curr, el) => {\r\n                return curr.concat(el.items.map(el => el.id));\r\n              }, []);\r\n              // console.log(this.currEleIdList);\r\n              // console.log(currContent.typeName);\r\n              // console.log(currContent.date);\r\n              // console.log(currContent.hour);\r\n              // console.log(el.name);\r\n              // console.log(el);\r\n\r\n              // body处理\r\n              let strTime = '';\r\n              if (currContent.date) {\r\n                strTime = currContent.date.format('YYYY-MM-DD') + ' ' + currContent.hour + ':00:00';\r\n              }\r\n              let forecastTime = '';\r\n              if (strTime) {\r\n                forecastTime = moment(strTime, 'YYYY-MM-DD HH:mm:ss').add(+currFcst.aging, 'hours').format('YYYY-MM-DD HH:mm:ss');\r\n              }\r\n              let name = el.name\r\n              let arr = []\r\n              // console.log(name.indexOf('滑动'))\r\n              if (name.indexOf('基于红外') != -1) {\r\n                arr.push(currFcst.date)\r\n                this.$set(currContent, 'dateSwitch', false)\r\n                // this.$set(currContent, 'minSwitch', false)\r\n              } else {\r\n                // this.$set(currContent, 'minSwitch', true)\r\n                this.$set(currContent, 'dateSwitch', true)\r\n              }\r\n              const eleName = [currContent.id, name,...arr].join(':');\r\n              const body = {\r\n                modeName: 'qiangtianqi',\r\n                eleName,\r\n                forecastTime,\r\n                level: el.activeLevel,\r\n                userDefinedParas: '',\r\n                strTime,\r\n                symbol:1\r\n              }\r\n              // 有起报时间 与 无起报时间(即第一次请求)\r\n              if (strTime) {\r\n                if (currContent.isStability === true) {  //当稳定性为true\r\n                  this.requestStabilityImgPath(body, currContent);\r\n                } else {\r\n                  this.requestImgPath(body);\r\n                }\r\n              } else {\r\n                this.requestImgPath(body, currContent, currFcst);\r\n              }\r\n\r\n            }\r\n          });\r\n        });\r\n      }else if(id==='OBSRadar'){\r\n        const currContent = currFcst.contents.find(\r\n          el => el.typeName === currFcst.activeTypeName\r\n        );\r\n        // currContent.contents.forEach(content => {\r\n        currContent.sections.forEach(section => {\r\n          section.items.forEach(el => {\r\n            if (el.id === currContent.activeElementId) {\r\n              this.currEleOption = el;\r\n              this.currTypeOption = currContent;\r\n              this.currEleIdList = currContent.sections.reduce((curr, el) => {\r\n                return curr.concat(el.items.map(el => el.id));\r\n              }, []);\r\n              // console.log(this.currEleIdList);\r\n              // console.log(currContent.typeName);\r\n              // console.log(currContent.date);\r\n              // console.log(currContent.hour);\r\n              // console.log(el.name);\r\n              // console.log(el);\r\n\r\n              // body处理\r\n             \r\n              \r\n              let name = el.name\r\n              let arr = []\r\n              if(name.indexOf('拼图')!=-1){\r\n                name=this.area+name\r\n                this.$set(currContent,'minuteSwitch',true)\r\n                this.$set(currContent,'dateSwitch',true)\r\n              }else{\r\n                arr.push(currFcst.date)\r\n                this.$set(currContent,'minuteSwitch',false)\r\n                this.$set(currContent,'dateSwitch',false)\r\n              }\r\n              let strTime = '';\r\n              let minute='00'\r\n              if(currContent.minuteSwitch){\r\n                minute=currContent.minute\r\n              }\r\n              // console.log(minute,currContent.minuteSwitch)\r\n              if (currContent.date) {\r\n                strTime = currContent.date.format('YYYY-MM-DD') + ' ' + currContent.hour + `:${minute}:00`;\r\n              }\r\n              let forecastTime = '';\r\n              if (strTime) {\r\n                forecastTime = moment(strTime, 'YYYY-MM-DD HH:mm:ss').add(+currFcst.aging, 'hours').format('YYYY-MM-DD HH:mm:ss');\r\n              }\r\n                            // console.log(name.indexOf('滑动'))\r\n              // if (name.indexOf('红外') != -1) {\r\n              //   arr.push(currFcst.date)\r\n              //   this.$set(currContent, 'dateSwitch', false)\r\n              //   // this.$set(currContent, 'minSwitch', false)\r\n              // } else {\r\n              //   // this.$set(currContent, 'minSwitch', true)\r\n              //   this.$set(currContent, 'dateSwitch', true)\r\n              // }\r\n              const eleName = [currContent.id, name,...arr].join(':');\r\n              const body = {\r\n                modeName: 'qiangtianqi',\r\n                eleName,\r\n                forecastTime,\r\n                level: el.activeLevel,\r\n                userDefinedParas: '',\r\n                strTime,\r\n                symbol:1\r\n              }\r\n              // 有起报时间 与 无起报时间(即第一次请求)\r\n              if (strTime) {\r\n                if (currContent.isStability === true) {  //当稳定性为true\r\n                  this.requestStabilityImgPath(body, currContent);\r\n                } else {\r\n                  this.requestImgPath(body);\r\n                }\r\n              } else {\r\n                this.requestImgPath(body, currContent, currFcst);\r\n              }\r\n\r\n            }\r\n          });\r\n        });\r\n      }else if(id==='windprofileMosaic'){\r\n        const currContent = currFcst.contents.find(\r\n          el => el.typeName === currFcst.activeTypeName\r\n        );\r\n        // currContent.contents.forEach(content => {\r\n        currContent.sections.forEach(section => {\r\n          section.items.forEach(el => {\r\n            if (el.id === currContent.activeElementId) {\r\n              this.currEleOption = el;\r\n              this.currTypeOption = currContent;\r\n              this.currEleIdList = currContent.sections.reduce((curr, el) => {\r\n                return curr.concat(el.items.map(el => el.id));\r\n              }, []);\r\n              // body处理\r\n              let name = currContent.name\r\n              let arr = []\r\n              if(el.name==='风场'){\r\n                currContent.tabSwitch=false\r\n                currContent.minuteSwitch=true\r\n                arr.push(currContent.high)\r\n              }else{\r\n                currContent.tabSwitch=true\r\n                arr.push(currContent.pressure)\r\n                currContent.minuteSwitch=false\r\n                name='comp'\r\n                currContent.date=''\r\n              }\r\n              let strTime = '';\r\n              let minute='00'\r\n              if(currContent.minuteSwitch){\r\n                minute=currContent.minute\r\n              }\r\n              // console.log(minute,currContent.minuteSwitch)\r\n              if (currContent.date) {\r\n                strTime = currContent.date.format('YYYY-MM-DD') + ' ' + currContent.hour + `:${minute}:00`;\r\n              }\r\n              let forecastTime = '';\r\n              if (strTime) {\r\n                forecastTime = moment(strTime, 'YYYY-MM-DD HH:mm:ss').add(+currFcst.aging, 'hours').format('YYYY-MM-DD HH:mm:ss');\r\n              }\r\n\r\n              const eleName = [currContent.id, name,...arr].join(':');\r\n              const body = {\r\n                modeName: 'qiangtianqi',\r\n                eleName,\r\n                forecastTime,\r\n                level: el.activeLevel,\r\n                userDefinedParas: '',\r\n                strTime,\r\n                symbol:1\r\n              }\r\n              // 有起报时间 与 无起报时间(即第一次请求)\r\n              if (strTime) {\r\n                if (currContent.isStability === true) {  //当稳定性为true\r\n                  this.requestStabilityImgPath(body, currContent);\r\n                } else {\r\n                  this.requestImgPath(body);\r\n                }\r\n              } else {\r\n                this.requestImgPath(body, currContent, currFcst);\r\n              }\r\n\r\n            }\r\n          });\r\n        });\r\n      }\r\n\r\n    },\r\n\r\n    // 请求图片路径(只针对稳定性)\r\n    requestStabilityImgPath(body, citeObj) {\r\n\r\n      // 取消之前的所有未完成的请求\r\n      this.cancelAllRequest();\r\n\r\n      // 存储取消时的token\r\n      const CancelToken = axios.CancelToken;\r\n\r\n      // 请求处理\r\n      const h = citeObj.hourList;\r\n      const agingInterval = citeObj.hourList.length > 1 ? Math.abs(h[1] - h[0]) : 24;\r\n      const startTime = moment(body.strTime, 'YYYY-MM-DD HH:mm:ss');\r\n      const requestList = new Array(4).fill(0).map((el, i) => {\r\n        const strTime = startTime.clone().subtract(agingInterval * i, 'hours').format('YYYY-MM-DD HH:mm:ss');\r\n        const currBody = { ...body, strTime };\r\n        const params = new URLSearchParams();\r\n        for (const key in currBody) {\r\n          params.append(key, currBody[key]);\r\n        }\r\n        return axios.post(\"/proxy/10.20.67.111/PictureInfoForgetFilePath.action\", params, {\r\n          cancelToken: new CancelToken(c => {\r\n            this.cancelRequests.push(c);\r\n          })\r\n        });\r\n      });\r\n\r\n      // 请求数据\r\n      axios.all(requestList).then(datas => {\r\n        this.imgPaths = datas.map(data => {\r\n          if (!data.data.path) return '';\r\n          const path = data.data.path.split(',').pop();\r\n          if (path) {\r\n            return 'http://10.20.67.111/getPic.action2?ppath=' + path;\r\n          }\r\n          return '';\r\n        });\r\n      })\r\n\r\n    },\r\n\r\n\r\n    // 请求图片路径\r\n    requestImgPath(body, timeCiteObj, agingCiteObj) {\r\n\r\n      // 取消之前的所有未完成的请求\r\n      this.cancelAllRequest();\r\n\r\n      // 存储取消时的token\r\n      const CancelToken = axios.CancelToken;\r\n\r\n      // 参数转换\r\n      const params = new URLSearchParams();\r\n      for (const key in body) {\r\n        params.append(key, body[key]);\r\n      }\r\n\r\n      // 请求数据\r\n      axios.post(\"/proxy/10.20.67.111/PictureInfoForgetFilePath.action\", params, {\r\n        cancelToken: new CancelToken(c => {\r\n          this.cancelRequests.push(c);\r\n        })\r\n      }).then(data => {\r\n\r\n        if (!data.data.path) {\r\n          this.imgPaths = [''];\r\n          return;\r\n        }\r\n\r\n        // [模式名字 要素名字  发布时间  预报时间 层次  文件路径]\r\n        const [patternName, eleName, startTime, fcstTime, level, filePath] = data.data.path.split(',');\r\n\r\n        // 第一次请求数据 && 有文件路径返回时\r\n        if (timeCiteObj && filePath) {\r\n          const startT = moment(startTime, 'YYYY-MM-DD HH:mm:ss');\r\n          const fcstT = moment(fcstTime, 'YYYY-MM-DD HH:mm:ss');\r\n          const startStamp = startT.unix();\r\n          const fcstStamp = fcstT.unix();\r\n          const aging = this.formatAging((fcstStamp - startStamp) / 60 / 60);\r\n          agingCiteObj.aging = aging;\r\n          timeCiteObj.date = startT.clone().startOf('day');\r\n          timeCiteObj.hour = startT.format('HH');\r\n          timeCiteObj.minute=startT.format('mm')\r\n          this.currEleOption.activeLevel = level;\r\n        }\r\n        this.imgPaths = ['http://10.20.67.111/getPic.action2?ppath=' + filePath];\r\n      })\r\n    },\r\n\r\n    // 格式化时效\r\n    formatAging(val) {\r\n      val += '';\r\n      const leng = val.length;\r\n      if (leng === 1) return '00' + val;\r\n      if (leng === 2) return '0' + val;\r\n      return val;\r\n    },\r\n\r\n    // 取消所有请求\r\n    cancelAllRequest() {\r\n      if (this.cancelRequests.length) {\r\n        this.cancelRequests.forEach(el => el());\r\n        this.cancelRequests = [];\r\n      }\r\n    },\r\n    get_gif(){\r\n      // console.log(this.options[4].contents[0].startDate.format('YYYYMMDD'))\r\n      let obj=this.options[4].contents[0]\r\n      let url=`http://10.20.67.111/PictureInfoFordown.action?start= ${moment(obj.startDate).format(`YYYYMMDD${obj.startHour}${obj.startMinute}`)} &end= ${moment(obj.endDate).format(`YYYYMMDD${obj.endHour}${obj.endMinute}`)} &area= ${obj.areaid} &jiangetime= ${obj.interval} &donghuasd= ${obj.speed}&chinaRegion= ${obj.areaid}`\r\n      // console.log(url)\r\n      window.open(url,'_blank')\r\n    },\r\n  }\r\n\r\n\r\n};\r\n"]}]}