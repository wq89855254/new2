{"remainingRequest":"D:\\program\\frontend\\node_modules\\babel-loader\\lib\\index.js!D:\\program\\frontend\\src\\components\\share\\relevance-aging-select\\RelevanceAgingSelect.js?vue&type=script&lang=js&","dependencies":[{"path":"D:\\program\\frontend\\src\\components\\share\\relevance-aging-select\\RelevanceAgingSelect.js","mtime":1553855602903},{"path":"D:\\program\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\program\\frontend\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _toConsumableArray from \"D:\\\\program\\\\frontend\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/toConsumableArray\";\nimport \"core-js/modules/es6.array.fill\";\nimport _Object$assign from \"D:\\\\program\\\\frontend\\\\node_modules\\\\@babel\\\\runtime-corejs2/core-js/object/assign\";\nimport \"core-js/modules/es6.array.find\";\nimport _objectSpread from \"D:\\\\program\\\\frontend\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/objectSpread\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.array.find-index\";\nimport { ConditionLayout, ToolBtn } from \"../../base\";\nimport TimeSelect from \"../time-select/TimeSelect.vue\";\nimport _ from \"lodash\";\nimport moment from \"moment\";\nexport default {\n  name: \"relevance-aging-select\",\n  components: {\n    ConditionLayout: ConditionLayout,\n    ToolBtn: ToolBtn,\n    TimeSelect: TimeSelect\n  },\n  props: {\n    // 实况时间\n    actTime: {\n      required: true,\n      validator: function validator(value) {\n        return moment.isMoment(value);\n      }\n    },\n    // 预报相关配置\n    fcst: {\n      type: Object,\n      required: true\n    },\n    isDisabled: {\n      type: Boolean,\n      default: false\n    } // concatList: {\n    //   type: Array,\n    //   required: true\n    // },\n    // noConcatList: {\n    //   type: Array,\n    //   required: true\n    // }\n\n  },\n  data: function data() {\n    return {\n      momeryitem: null,\n      pageSize: 26,\n      pageIndex: 0,\n      // 实况时间\n      actDate: this.actTime.clone().startOf(\"day\"),\n      actHour: this.actTime.format(\"HH\"),\n      actHourList: [\"00\", \"01\", \"02\", \"03\", \"04\", \"05\", \"06\", \"07\", \"08\", \"09\", \"10\", \"11\", \"12\", \"13\", \"14\", \"15\", \"16\", \"17\", \"18\", \"19\", \"20\", \"21\", \"22\", \"23\"],\n      // 起报时间\n      fcstDate: \"\",\n      fcstHour: \"\",\n      concatList: [],\n      noConcatList: [],\n      isConcat: true\n    };\n  },\n  computed: {\n    currConcatList: function currConcatList() {\n      return this.concatList.slice(this.pageSize * this.pageIndex, this.pageSize * this.pageIndex + this.pageSize);\n    },\n    currNoConcatList: function currNoConcatList() {\n      return this.noConcatList.slice(this.pageSize * this.pageIndex, this.pageSize * this.pageIndex + this.pageSize);\n    },\n    currList: function currList() {\n      return this.isConcat ? this.concatList : this.noConcatList;\n    },\n    // 当前选中的时间下标\n    currIndex: function currIndex() {\n      return this.currList.findIndex(function (el) {\n        return el.active;\n      });\n    },\n    lastIndex: function lastIndex() {\n      return this.currList.length - 1;\n    },\n    isFirstIndex: function isFirstIndex() {\n      return this.currIndex === 0;\n    },\n    isLastIndex: function isLastIndex() {\n      return this.currIndex === this.lastIndex;\n    },\n    lastPageIndex: function lastPageIndex() {\n      return Math.ceil(this.concatList.length / this.pageSize) - 1;\n    },\n    isFirstPageIndex: function isFirstPageIndex() {\n      return this.pageIndex === 0;\n    },\n    isLastPageIndex: function isLastPageIndex() {\n      return this.pageIndex === this.lastPageIndex;\n    }\n  },\n  watch: {\n    currIndex: function currIndex(_currIndex) {\n      this.pageIndex = Math.floor(_currIndex / this.pageSize);\n    },\n    currList: function currList() {\n      this.pageIndex = 0;\n    },\n    fcst: function fcst() {\n      if (this.fcst.fcstTime.isValid()) {\n        this.fcstDate = this.fcst.fcstTime.clone().startOf(\"day\");\n        this.fcstHour = this.fcst.fcstTime.format(\"HH\");\n      } else {\n        this.fcstDate = \"\";\n        this.fcstHour = this.fcst.startHourList[0];\n      }\n\n      this.updateTimeList();\n    }\n  },\n  created: function created() {\n    this.debouncedSetPageSize = _.debounce(this.setPageSize, 300);\n  },\n  mounted: function mounted() {\n    this.setPageSize();\n\n    if (this.fcst.fcstTime.isValid()) {\n      this.fcstDate = this.fcst.fcstTime.clone().startOf(\"day\");\n      this.fcstHour = this.fcst.fcstTime.format(\"HH\");\n    } else {\n      this.fcstDate = \"\";\n      this.fcstHour = this.fcst.startHourList[0];\n    }\n\n    this.updateTimeList();\n    window.addEventListener('resize', this.resizeHandler);\n  },\n  beforeDestroy: function beforeDestroy() {\n    window.removeEventListener('resize', this.resizeHandler);\n  },\n  methods: {\n    resizeHandler: function resizeHandler(e) {// console.log(e);\n      // this.debouncedSetPageSize();\n    },\n    onClickSwitch: function onClickSwitch(item) {\n      if (this.momeryitem === item) return;\n      this.momeryitem = item;\n      this.currList.forEach(function (el) {\n        el.active = el === item;\n      });\n      this.$emit(\"change\", _objectSpread({\n        isConcat: this.isConcat\n      }, item));\n    },\n    onConcat: function onConcat(isConcat) {\n      this.isConcat = isConcat;\n      var activedItem = this.currList.find(function (el) {\n        return el.active;\n      });\n      this.$emit(\"change\", _objectSpread({\n        isConcat: this.isConcat\n      }, activedItem));\n    },\n    tuningTime: function tuningTime(num) {\n      var index = this.currList.findIndex(function (el) {\n        return el.active;\n      });\n      var nextIndex = index + num;\n      if (nextIndex < 0 || nextIndex > this.lastIndex) return;\n      var activeItem;\n      this.currList.forEach(function (el, i) {\n        if (i === nextIndex) {\n          el.active = true;\n          activeItem = el;\n        } else {\n          el.active = false;\n        }\n      });\n      this.$emit(\"change\", _objectSpread({\n        isConcat: this.isConcat\n      }, activeItem));\n    },\n    onSwitchPage: function onSwitchPage(num) {\n      var pageIndex = this.pageIndex + num;\n      if (pageIndex < 0 || pageIndex > this.lastPageIndex) return;\n      this.pageIndex = pageIndex;\n    },\n    onChange: function onChange(type) {\n      this.updateTimeList();\n\n      if (type === \"act\") {\n        this.$emit(\"update:actTime\", this.actDate === \"\" ? moment(null) : this.actDate.clone().startOf('day').add(+this.actHour, \"hours\"));\n      } else if (type === \"fcst\") {\n        var newFcstTime = this.fcstDate === \"\" ? moment(null) : this.fcstDate.clone().startOf('day').add(+this.fcstHour, \"hours\");\n        console.log(newFcstTime.format('YYYY-MM-DD HH:mm:ss'));\n        this.$emit(\"update:fcst\", _Object$assign({}, this.fcst, {\n          fcstTime: newFcstTime\n        }));\n      } // console.log(type);\n\n\n      var activedItem = this.currList.find(function (el) {\n        return el.active;\n      });\n      this.$emit(\"time-select\", activedItem);\n    },\n    // 更新时间列表\n    updateTimeList: function updateTimeList() {\n      var isHasActTime = this.actDate && this.actDate.isValid();\n      var isHasFcstTime = this.fcstDate && this.fcstDate.isValid();\n      var actTime = null,\n          fcstTime = null;\n\n      if (isHasActTime) {\n        actTime = this.actDate.clone().startOf('day').add(+this.actHour, \"hours\");\n      }\n\n      if (isHasFcstTime) {\n        fcstTime = this.fcstDate.clone().startOf('day').add(+this.fcstHour, \"hours\");\n      } // console.log(actTime.format('YYYY-MM-DD HH:mm:ss'));\n\n\n      var fcstConcatList = new Array(this.fcst.agingLength).fill(0).map(function (el, i) {\n        if (isHasActTime) {\n          var currTime = actTime.clone().add(i + 1, \"hours\");\n          return {\n            name: currTime.format(\"HH\"),\n            time: currTime.format(\"YYYY-MM-DD HH:00:00\"),\n            isFcst: true,\n            active: false\n          };\n        }\n\n        return {\n          name: \"\",\n          time: \"\",\n          isFcst: true,\n          active: false\n        };\n      });\n      var fcstNoConcatList = new Array(this.fcst.agingLength).fill(0).map(function (el, i) {\n        if (isHasFcstTime) {\n          var currTime = fcstTime.clone().add(i + 1, \"hours\");\n          return {\n            name: \"+\" + (i + 1),\n            time: currTime.format(\"YYYY-MM-DD HH:00:00\"),\n            isFcst: true,\n            active: false\n          };\n        }\n\n        return {\n          name: \"+\" + (i + 1),\n          time: \"\",\n          isFcst: true,\n          active: false\n        };\n      });\n      var concatList = [].concat(_toConsumableArray(this.getActTimeList(actTime)), _toConsumableArray(fcstConcatList));\n      var noConcatList = [].concat(_toConsumableArray(this.getActTimeList(actTime)), _toConsumableArray(fcstNoConcatList));\n      this.concatList = concatList;\n      this.noConcatList = noConcatList; // console.log(concatList);\n      // console.log(noConcatList);\n    },\n    // 得到实况时间列表\n    getActTimeList: function getActTimeList(date) {\n      return new Array(3).fill(0).map(function (el, i) {\n        if (date) {\n          var currTime = date.clone().subtract(i, \"hours\");\n          return {\n            name: currTime.format(\"HH\"),\n            time: currTime.format(\"YYYY-MM-DD HH:00:00\"),\n            isFcst: false,\n            active: i === 0\n          };\n        }\n\n        return {\n          name: '',\n          time: '',\n          isFcst: false,\n          active: i === 0\n        };\n      }).reverse();\n    },\n    // 设置pageSize\n    setPageSize: function setPageSize() {\n      var listBox = this.$refs.listBox;\n      var rightBtn = this.$refs.rightBtn;\n      var pageSize = Math.floor(listBox.clientWidth / 33);\n      this.pageSize = pageSize;\n      rightBtn.style.marginRight = listBox.clientWidth % 33 + 'px'; //将余数添加到右侧按钮的右侧margin\n    }\n  }\n};",{"version":3,"sources":["D:\\program\\frontend\\src\\components\\share\\relevance-aging-select\\RelevanceAgingSelect.js"],"names":["ConditionLayout","ToolBtn","TimeSelect","_","moment","name","components","props","actTime","required","validator","value","isMoment","fcst","type","Object","isDisabled","Boolean","default","data","momeryitem","pageSize","pageIndex","actDate","clone","startOf","actHour","format","actHourList","fcstDate","fcstHour","concatList","noConcatList","isConcat","computed","currConcatList","slice","currNoConcatList","currList","currIndex","findIndex","el","active","lastIndex","length","isFirstIndex","isLastIndex","lastPageIndex","Math","ceil","isFirstPageIndex","isLastPageIndex","watch","floor","fcstTime","isValid","startHourList","updateTimeList","created","debouncedSetPageSize","debounce","setPageSize","mounted","window","addEventListener","resizeHandler","beforeDestroy","removeEventListener","methods","e","onClickSwitch","item","forEach","$emit","onConcat","activedItem","find","tuningTime","num","index","nextIndex","activeItem","i","onSwitchPage","onChange","add","newFcstTime","console","log","isHasActTime","isHasFcstTime","fcstConcatList","Array","agingLength","fill","map","currTime","time","isFcst","fcstNoConcatList","getActTimeList","date","subtract","reverse","listBox","$refs","rightBtn","clientWidth","style","marginRight"],"mappings":"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","sourcesContent":["import { ConditionLayout, ToolBtn } from \"../../base\";\r\nimport TimeSelect from \"../time-select/TimeSelect.vue\";\r\nimport _ from \"lodash\";\r\nimport moment from \"moment\";\r\nexport default {\r\n  name: \"relevance-aging-select\",\r\n  components: { ConditionLayout, ToolBtn, TimeSelect },\r\n  props: {\r\n    // 实况时间\r\n    actTime: {\r\n      required: true,\r\n      validator: function(value) {\r\n        return moment.isMoment(value);\r\n      }\r\n    },\r\n\r\n    // 预报相关配置\r\n    fcst: {\r\n      type: Object,\r\n      required: true\r\n    },\r\n\r\n    isDisabled: {\r\n      type: Boolean,\r\n      default: false\r\n    },\r\n    // concatList: {\r\n    //   type: Array,\r\n    //   required: true\r\n    // },\r\n    // noConcatList: {\r\n    //   type: Array,\r\n    //   required: true\r\n    // }\r\n  },\r\n  data() {\r\n    return {\r\n      momeryitem: null,\r\n      pageSize: 26,\r\n      pageIndex: 0,\r\n      // 实况时间\r\n      actDate: this.actTime.clone().startOf(\"day\"),\r\n      actHour: this.actTime.format(\"HH\"),\r\n      actHourList: [\r\n        \"00\",\r\n        \"01\",\r\n        \"02\",\r\n        \"03\",\r\n        \"04\",\r\n        \"05\",\r\n        \"06\",\r\n        \"07\",\r\n        \"08\",\r\n        \"09\",\r\n        \"10\",\r\n        \"11\",\r\n        \"12\",\r\n        \"13\",\r\n        \"14\",\r\n        \"15\",\r\n        \"16\",\r\n        \"17\",\r\n        \"18\",\r\n        \"19\",\r\n        \"20\",\r\n        \"21\",\r\n        \"22\",\r\n        \"23\"\r\n      ],\r\n\r\n      // 起报时间\r\n      fcstDate: \"\",\r\n      fcstHour: \"\",\r\n      concatList: [],\r\n      noConcatList: [],\r\n      isConcat: true\r\n    };\r\n  },\r\n  computed: {\r\n    currConcatList() {\r\n      return this.concatList.slice(\r\n        this.pageSize * this.pageIndex,\r\n        this.pageSize * this.pageIndex + this.pageSize\r\n      );\r\n    },\r\n    currNoConcatList() {\r\n      return this.noConcatList.slice(\r\n        this.pageSize * this.pageIndex,\r\n        this.pageSize * this.pageIndex + this.pageSize\r\n      );\r\n    },\r\n\r\n    currList() {\r\n      return this.isConcat ? this.concatList : this.noConcatList;\r\n    },\r\n\r\n    // 当前选中的时间下标\r\n    currIndex() {\r\n      return this.currList.findIndex(el => el.active);\r\n    },\r\n    lastIndex() {\r\n      return this.currList.length - 1;\r\n    },\r\n    isFirstIndex() {\r\n      return this.currIndex === 0;\r\n    },\r\n    isLastIndex() {\r\n      return this.currIndex === this.lastIndex;\r\n    },\r\n\r\n    lastPageIndex() {\r\n      return Math.ceil(this.concatList.length / this.pageSize) - 1;\r\n    },\r\n    isFirstPageIndex() {\r\n      return this.pageIndex === 0;\r\n    },\r\n    isLastPageIndex() {\r\n      return this.pageIndex === this.lastPageIndex;\r\n    }\r\n  },\r\n  watch: {\r\n    currIndex(currIndex) {\r\n      this.pageIndex = Math.floor(currIndex / this.pageSize);\r\n    },\r\n    currList() {\r\n      this.pageIndex = 0;\r\n    },\r\n    fcst() {\r\n      if (this.fcst.fcstTime.isValid()) {\r\n        this.fcstDate = this.fcst.fcstTime.clone().startOf(\"day\");\r\n        this.fcstHour = this.fcst.fcstTime.format(\"HH\");\r\n      } else {\r\n        this.fcstDate = \"\";\r\n        this.fcstHour = this.fcst.startHourList[0];\r\n      }\r\n      this.updateTimeList();\r\n    }\r\n  },\r\n  created() {\r\n    this.debouncedSetPageSize = _.debounce(this.setPageSize, 300);\r\n  },\r\n  mounted() {\r\n    this.setPageSize();\r\n    if (this.fcst.fcstTime.isValid()) {\r\n      this.fcstDate = this.fcst.fcstTime.clone().startOf(\"day\");\r\n      this.fcstHour = this.fcst.fcstTime.format(\"HH\");\r\n    } else {\r\n      this.fcstDate = \"\";\r\n      this.fcstHour = this.fcst.startHourList[0];\r\n    }\r\n    this.updateTimeList();\r\n    window.addEventListener('resize', this.resizeHandler)\r\n  },\r\n  beforeDestroy() {\r\n    window.removeEventListener('resize', this.resizeHandler)\r\n  },\r\n  methods: {\r\n    resizeHandler(e) {\r\n      // console.log(e);\r\n      // this.debouncedSetPageSize();\r\n    },\r\n    onClickSwitch(item) {\r\n      if (this.momeryitem === item) return;\r\n      this.momeryitem = item;\r\n      this.currList.forEach(el => {\r\n        el.active = el === item;\r\n      });\r\n      this.$emit(\"change\", {\r\n        isConcat: this.isConcat,\r\n        ...item\r\n      });\r\n    },\r\n    onConcat(isConcat) {\r\n      this.isConcat = isConcat;\r\n      const activedItem = this.currList.find(el => el.active);\r\n      this.$emit(\"change\", {\r\n        isConcat: this.isConcat,\r\n        ...activedItem\r\n      });\r\n    },\r\n    tuningTime(num) {\r\n      const index = this.currList.findIndex(el => el.active);\r\n      const nextIndex = index + num;\r\n      if (nextIndex < 0 || nextIndex > this.lastIndex) return;\r\n      let activeItem;\r\n      this.currList.forEach((el, i) => {\r\n        if (i === nextIndex) {\r\n          el.active = true;\r\n          activeItem = el;\r\n        } else {\r\n          el.active = false;\r\n        }\r\n      });\r\n      this.$emit(\"change\", {\r\n        isConcat: this.isConcat,\r\n        ...activeItem\r\n      });\r\n    },\r\n    onSwitchPage(num) {\r\n      const pageIndex = this.pageIndex + num;\r\n      if (pageIndex < 0 || pageIndex > this.lastPageIndex) return;\r\n      this.pageIndex = pageIndex;\r\n    },\r\n\r\n    onChange(type) {\r\n      this.updateTimeList();\r\n      if (type === \"act\") {\r\n        this.$emit(\r\n          \"update:actTime\",\r\n          this.actDate === \"\"\r\n            ? moment(null)\r\n            : this.actDate.clone().startOf('day').add(+this.actHour, \"hours\")\r\n        );\r\n      } else if (type === \"fcst\") {\r\n        const newFcstTime =\r\n          this.fcstDate === \"\"\r\n            ? moment(null)\r\n            : this.fcstDate.clone().startOf('day').add(+this.fcstHour, \"hours\");\r\n        console.log(newFcstTime.format('YYYY-MM-DD HH:mm:ss'));\r\n        this.$emit(\r\n          \"update:fcst\",\r\n          Object.assign({}, this.fcst, { fcstTime: newFcstTime })\r\n        );\r\n      }\r\n      // console.log(type);\r\n      const activedItem = this.currList.find(el => el.active);\r\n      this.$emit(\"time-select\", activedItem);\r\n    },\r\n\r\n    // 更新时间列表\r\n    updateTimeList() {\r\n\r\n      const isHasActTime = this.actDate && this.actDate.isValid();\r\n      const isHasFcstTime = this.fcstDate && this.fcstDate.isValid();\r\n      let actTime = null, fcstTime = null;\r\n      \r\n      if (isHasActTime) {\r\n        actTime = this.actDate.clone().startOf('day').add(+this.actHour, \"hours\");\r\n      }\r\n      if (isHasFcstTime) {\r\n        fcstTime = this.fcstDate.clone().startOf('day').add(+this.fcstHour, \"hours\");\r\n      }\r\n\r\n      // console.log(actTime.format('YYYY-MM-DD HH:mm:ss'));\r\n\r\n      const fcstConcatList = new Array(this.fcst.agingLength)\r\n        .fill(0)\r\n        .map((el, i) => {\r\n          if (isHasActTime) {\r\n            const currTime = actTime.clone().add(i + 1, \"hours\");\r\n            return {\r\n              name: currTime.format(\"HH\"),\r\n              time: currTime.format(\"YYYY-MM-DD HH:00:00\"),\r\n              isFcst: true,\r\n              active: false\r\n            };\r\n          }\r\n          return {\r\n            name: \"\",\r\n            time: \"\",\r\n            isFcst: true,\r\n            active: false\r\n          };\r\n        });\r\n\r\n      const fcstNoConcatList = new Array(this.fcst.agingLength)\r\n        .fill(0)\r\n        .map((el, i) => {\r\n          if (isHasFcstTime) {\r\n            const currTime = fcstTime.clone().add(i + 1, \"hours\");\r\n            return {\r\n              name: \"+\" + (i + 1),\r\n              time: currTime.format(\"YYYY-MM-DD HH:00:00\"),\r\n              isFcst: true,\r\n              active: false\r\n            };\r\n          }\r\n          return {\r\n            name: \"+\" + (i + 1),\r\n            time: \"\",\r\n            isFcst: true,\r\n            active: false\r\n          };\r\n        });\r\n      const concatList = [...this.getActTimeList(actTime), ...fcstConcatList];\r\n      const noConcatList = [\r\n        ...this.getActTimeList(actTime),\r\n        ...fcstNoConcatList\r\n      ];\r\n      this.concatList = concatList;\r\n      this.noConcatList = noConcatList;\r\n      // console.log(concatList);\r\n      // console.log(noConcatList);\r\n    },\r\n\r\n    // 得到实况时间列表\r\n    getActTimeList(date) {\r\n      return new Array(3)\r\n        .fill(0)\r\n        .map((el, i) => {\r\n          if (date) {\r\n            const currTime = date.clone().subtract(i, \"hours\");\r\n            return {\r\n              name: currTime.format(\"HH\"),\r\n              time: currTime.format(\"YYYY-MM-DD HH:00:00\"),\r\n              isFcst: false,\r\n              active: i === 0\r\n            };\r\n          }\r\n          return {\r\n            name: '',\r\n            time: '',\r\n            isFcst: false,\r\n            active: i === 0\r\n          };\r\n        })\r\n        .reverse();\r\n    },\r\n\r\n    // 设置pageSize\r\n    setPageSize() {\r\n      const listBox = this.$refs.listBox;\r\n      const rightBtn = this.$refs.rightBtn;\r\n      const pageSize = Math.floor(listBox.clientWidth / 33);\r\n      this.pageSize = pageSize;\r\n      rightBtn.style.marginRight = listBox.clientWidth % 33 + 'px';  //将余数添加到右侧按钮的右侧margin\r\n    }\r\n  }\r\n};\r\n"]}]}