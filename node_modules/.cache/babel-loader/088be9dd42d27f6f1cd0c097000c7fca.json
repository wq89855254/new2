{"remainingRequest":"D:\\program\\frontend\\node_modules\\babel-loader\\lib\\index.js!D:\\program\\frontend\\src\\views\\synthesis\\layer-manage\\LayerManage.js?vue&type=script&lang=js&","dependencies":[{"path":"D:\\program\\frontend\\src\\views\\synthesis\\layer-manage\\LayerManage.js","mtime":1553855602374},{"path":"D:\\program\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\program\\frontend\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.regexp.split\";\nimport \"core-js/modules/es6.array.find-index\";\nimport \"core-js/modules/es6.function.name\";\nimport \"core-js/modules/es6.array.find\";\nimport _Object$assign from \"D:\\\\program\\\\frontend\\\\node_modules\\\\@babel\\\\runtime-corejs2/core-js/object/assign\";\nimport \"core-js/modules/web.dom.iterable\";\nimport _objectSpread from \"D:\\\\program\\\\frontend\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/objectSpread\";\nimport * as moment from \"moment\";\nimport _ from \"lodash\";\nimport eleOption from \"../element-option\";\nimport { createNamespacedHelpers } from \"vuex\";\n\nvar _createNamespacedHelp = createNamespacedHelpers(\"synthesis\"),\n    mapState = _createNamespacedHelp.mapState,\n    mapGetters = _createNamespacedHelp.mapGetters,\n    mapMutations = _createNamespacedHelp.mapMutations,\n    mapActions = _createNamespacedHelp.mapActions;\n\nexport default {\n  name: \"layer-manage\",\n  components: {},\n  data: function data() {\n    return {\n      isSpread: true,\n      currTabId: \"product\",\n      tabs: [{\n        id: \"product\",\n        name: \"产品图层\"\n      }, {\n        id: \"warning\",\n        name: \"报警图层\"\n      }],\n      productLayerList1: [],\n      productLayerList2: [],\n      productLayerList3: [],\n      productLayerList4: [],\n      warnLayerList1: [],\n      warnLayerList2: [],\n      warnLayerList3: [],\n      warnLayerList4: []\n    };\n  },\n  computed: _objectSpread({}, mapState([\"ssIndex\"]), mapGetters([\"currSplitScreen\", \"showHideLayerHash\", \"stationPup\", \"station\", \"severeWeather\", \"fcstWarning\", \"valueFcst\"]), {\n    currProductLayerList: function currProductLayerList() {\n      return this[\"productLayerList\" + this.ssIndex];\n    },\n    currWarnLayerList: function currWarnLayerList() {\n      return this[\"warnLayerList\" + this.ssIndex];\n    }\n  }),\n  watch: {\n    currProductLayerList: function currProductLayerList(_currProductLayerList) {// console.log(currProductLayerList)\n    }\n  },\n  created: function created() {\n    this.debouncedDeleteAllLayer = _.debounce(this.onClickDeleteAllLayer, 300);\n  },\n  mounted: function mounted() {\n    var _this = this;\n\n    // 订阅store中的mutations(只需要其中的一部分)\n    this.cancelSubscribe = this.$store.subscribe(function (mutation, state) {\n      // debugger;\n      switch (mutation.type) {\n        case \"synthesis/fw_update_short_term_time\":\n        case \"synthesis/fw_update_short_term\":\n          //预报预警_短期预报\n          _this.fcstWarnAndValueFcstInfo(\"fw_short_term\");\n\n          break;\n\n        case \"synthesis/fw_update_short_time_time\":\n        case \"synthesis/fw_update_short_time\":\n          //预报预警_短时预报\n          _this.fcstWarnAndValueFcstInfo(\"fw_short_time\");\n\n          break;\n\n        case \"synthesis/fw_update_warn_state_time\":\n        case \"synthesis/fw_update_warn_state\":\n          // 预报预警_国家预警\n          _this.fcstWarnAndValueFcstInfo(\"fw_warn_state\");\n\n          break;\n\n        case \"synthesis/fw_update_warn_province_time\":\n        case \"synthesis/fw_update_warn_province\":\n          // 预报预警_省级预警\n          _this.fcstWarnAndValueFcstInfo(\"fw_warn_province\");\n\n          break;\n\n        case \"synthesis/vf_update_time\":\n        case \"synthesis/vf_update\":\n          _this.fcstWarnAndValueFcstInfo(\"vf\"); // 数值预报\n\n\n          break;\n\n        case \"synthesis/st_update_hour\":\n          // 自动站:小时选择\n          var checkedHourEleList = _this.station.hourEleList.filter(function (el) {\n            return el.checked;\n          });\n\n          checkedHourEleList.forEach(function (el) {\n            var eleInfo = _Object$assign(_.cloneDeep(el), {\n              currHour: mutation.payload\n            });\n\n            _this.updateElementInfo(\"normal\", eleInfo);\n          });\n          break;\n\n        case \"synthesis/sw_update_hour\":\n          // 强天气:小时选择\n          var checkedHourEleList1 = _this.severeWeather.hourEleList.filter(function (el) {\n            return el.checked;\n          });\n\n          checkedHourEleList1.forEach(function (el) {\n            var eleInfo = _Object$assign(_.cloneDeep(el), {\n              currHour: mutation.payload\n            });\n\n            _this.updateElementInfo(\"normal\", eleInfo);\n          });\n          break;\n\n        case \"synthesis/sw_update_element_condition\":\n          // 强天气:观测\n          if (mutation.payload.conditionKey === \"currObserve\") {\n            var eleInfo1 = _.cloneDeep(mutation.payload);\n\n            _this.updateElementInfo(\"normal\", eleInfo1);\n          }\n\n          break;\n\n        case \"synthesis/update_element_time\":\n          // 所有:更新数据时间\n          var eleInfo2 = _Object$assign(_.cloneDeep(mutation.payload), {\n            currHour: _this.severeWeather.currHour\n          });\n\n          _this.updateElementInfo(\"normal\", eleInfo2);\n\n          break;\n\n        case \"synthesis/sn_level_change\": // SWAN拼图_层次更新\n\n        case \"synthesis/sn_aging_change\": // SWAN拼图_时效更新\n\n        case \"synthesis/st_threshold_change\": // 自动站: 阀值更新\n\n        case \"synthesis/cp_aging_change\":\n          //云图: 更新时效\n          var eleInfo3 = _.cloneDeep(mutation.payload);\n\n          _this.updateElementInfo(\"normal\", eleInfo3);\n\n          break;\n\n        case \"synthesis/stp_set_null_element_id\": // 单站pup: 清空当前选中的要素id\n\n        case \"synthesis/stp_update_station_id\": // 单站pup: 更新站点\n\n        case \"synthesis/stp_update_times\":\n          // 单站pup: 更新时间\n          _this.updateElementInfo(\"stationPup\");\n\n          break;\n      }\n    });\n  },\n  beforeDestroy: function beforeDestroy() {\n    this.cancelSubscribe();\n  },\n  methods: _objectSpread({}, mapMutations([\"stp_update_times\", \"stp_set_null_element_id\", \"stp_radio_element\", \"fw_update_short_term_time\", \"fw_update_short_time_time\", \"fw_update_warn_state_time\", \"fw_update_warn_province_time\", \"fw_update_short_term\", \"fw_update_short_time\", \"fw_update_warn_state\", \"fw_update_warn_province\", \"vf_update\", \"vf_update_time\", \"show_hide_layer\"]), mapActions([\"tuning_element_time\", \"delete_element\", \"delete_all_element\"]), {\n    fcstWarnAndValueFcstInfo: function fcstWarnAndValueFcstInfo(type) {\n      var _this2 = this;\n\n      var manageList = [];\n\n      switch (type) {\n        case \"fw_short_term\":\n          {\n            var _this$fcstWarning$sho = this.fcstWarning.shortTerm,\n                date = _this$fcstWarning$sho.date,\n                hour = _this$fcstWarning$sho.hour,\n                aging = _this$fcstWarning$sho.aging,\n                timeList = _this$fcstWarning$sho.timeList;\n            var _eleOption$fw_short_t = eleOption.fw_short_term,\n                timeFormat = _eleOption$fw_short_t.timeFormat,\n                typeName = _eleOption$fw_short_t.typeName;\n            var checked = aging !== \"\";\n\n            if (date) {\n              var id = \"fw_short_term\";\n\n              if (checked) {\n                var currTime = date.format(\"YYYYMMDD\") + hour + \"00\";\n                var name = typeName + \"(\" + aging + \"h)\";\n                manageList.push({\n                  checked: checked,\n                  currTime: currTime,\n                  showTime: moment(currTime, \"YYYYMMDDHHmm\").format(timeFormat),\n                  id: id,\n                  name: name,\n                  timeList: timeList\n                });\n              } else {\n                manageList.push({\n                  checked: checked,\n                  id: id\n                });\n              }\n            }\n          }\n          break;\n\n        case \"fw_short_time\":\n          {\n            var _this$fcstWarning$sho2 = this.fcstWarning.shortTime,\n                _date = _this$fcstWarning$sho2.date,\n                _timeList = _this$fcstWarning$sho2.timeList,\n                eleList = _this$fcstWarning$sho2.eleList;\n            var _eleOption$fw_short_t2 = eleOption.fw_short_time,\n                _timeFormat = _eleOption$fw_short_t2.timeFormat,\n                _typeName = _eleOption$fw_short_t2.typeName;\n            var checkedEle = eleList.find(function (el) {\n              return el.checked;\n            });\n\n            if (_date) {\n              var _id = \"fw_short_time\";\n\n              if (checkedEle) {\n                //有值即代表选中\n                var _currTime = _date;\n\n                var _name = _typeName + \"(\" + checkedEle.name + \")\";\n\n                manageList.push({\n                  checked: true,\n                  currTime: _currTime,\n                  showTime: moment(_currTime, \"YYYYMMDDHHmm\").format(_timeFormat),\n                  id: _id,\n                  name: _name,\n                  timeList: _timeList\n                });\n              } else {\n                manageList.push({\n                  checked: false,\n                  id: _id\n                });\n              }\n            }\n          }\n          break;\n\n        case \"fw_warn_state\":\n          {\n            var _this$fcstWarning$sta = this.fcstWarning.stateWarn,\n                _date2 = _this$fcstWarning$sta.date,\n                _hour = _this$fcstWarning$sta.hour,\n                _aging = _this$fcstWarning$sta.aging,\n                _timeList2 = _this$fcstWarning$sta.timeList;\n            var _eleOption$fw_warn_st = eleOption.fw_warn_state,\n                _timeFormat2 = _eleOption$fw_warn_st.timeFormat,\n                _typeName2 = _eleOption$fw_warn_st.typeName;\n\n            var _checked = _aging !== \"\";\n\n            if (_date2) {\n              var _id2 = \"fw_warn_state\";\n\n              if (_checked) {\n                var _currTime2 = _date2.format(\"YYYYMMDD\") + _hour + \"00\";\n\n                var _name2 = _typeName2 + \"(\" + _aging + \"h)\";\n\n                manageList.push({\n                  checked: _checked,\n                  currTime: _currTime2,\n                  showTime: moment(_currTime2, \"YYYYMMDDHHmm\").format(_timeFormat2),\n                  id: _id2,\n                  name: _name2,\n                  timeList: _timeList2\n                });\n              } else {\n                manageList.push({\n                  checked: _checked,\n                  id: _id2\n                });\n              }\n            }\n          }\n          break;\n\n        case \"fw_warn_province\":\n          {\n            var _this$fcstWarning$pro = this.fcstWarning.provinceWarn,\n                _date3 = _this$fcstWarning$pro.date,\n                _hour2 = _this$fcstWarning$pro.hour,\n                minute = _this$fcstWarning$pro.minute,\n                _aging2 = _this$fcstWarning$pro.aging,\n                _timeList3 = _this$fcstWarning$pro.timeList,\n                _eleList = _this$fcstWarning$pro.eleList;\n            var _eleOption$fw_warn_pr = eleOption.fw_warn_province,\n                _timeFormat3 = _eleOption$fw_warn_pr.timeFormat,\n                _typeName3 = _eleOption$fw_warn_pr.typeName;\n\n            var _checkedEle = _eleList.find(function (el) {\n              return el.checked;\n            });\n\n            if (_date3) {\n              var _id3 = \"fw_warn_province\";\n\n              if (_checkedEle) {\n                var _currTime3 = _date3.format(\"YYYYMMDD\") + _hour2 + minute;\n\n                var _name3 = _typeName3 + \"(\" + _checkedEle.name + _aging2 + \"h)\";\n\n                manageList.push({\n                  checked: true,\n                  currTime: _currTime3,\n                  showTime: moment(_currTime3, \"YYYYMMDDHHmm\").format(_timeFormat3),\n                  id: _id3,\n                  name: _name3,\n                  timeList: _timeList3\n                });\n              } else {\n                manageList.push({\n                  checked: false,\n                  id: _id3\n                });\n              }\n            }\n          }\n          break;\n\n        case \"vf\":\n          this.valueFcst.forEach(function (typeItem) {\n            var id = typeItem.id,\n                date = typeItem.date,\n                hour = typeItem.hour,\n                aging = typeItem.aging,\n                timeList = typeItem.timeList,\n                typeEleList = typeItem.typeEleList,\n                typeEleId = typeItem.typeEleId;\n            var currEle = typeEleList.find(function (el) {\n              return el.id === typeEleId;\n            }).eleList.find(function (el) {\n              return el.checked;\n            });\n\n            if (date) {\n              var manageId = \"vf_\" + id;\n\n              if (currEle) {\n                var _eleOption$manageId = eleOption[manageId],\n                    _timeFormat4 = _eleOption$manageId.timeFormat,\n                    _typeName4 = _eleOption$manageId.typeName;\n\n                var _currTime4 = date.format(\"YYYYMMDD\") + hour + \"00\";\n\n                var _name4 = _typeName4 + \"(\" + currEle.name + aging + \")\";\n\n                manageList.push({\n                  checked: true,\n                  currTime: _currTime4,\n                  showTime: moment(_currTime4, \"YYYYMMDDHHmm\").format(_timeFormat4),\n                  id: manageId,\n                  name: _name4,\n                  timeList: timeList\n                });\n              } else {\n                manageList.push({\n                  checked: false,\n                  id: manageId\n                });\n              }\n            }\n          });\n          break;\n      } // console.log(manageList);\n\n\n      manageList.forEach(function (el) {\n        var layerTypeName = \"\";\n\n        if (el.id === \"fw_warn_state\" || el.id === \"fw_warn_province\") {\n          layerTypeName = \"currWarnLayerList\";\n        } else {\n          layerTypeName = \"currProductLayerList\";\n        }\n\n        var currLayerList = _this2[layerTypeName];\n        var elIndex = currLayerList.findIndex(function (item) {\n          return item.id === el.id;\n        });\n        var isNoElement = elIndex === -1;\n\n        if (el.checked) {\n          if (isNoElement) {\n            currLayerList.unshift(el);\n          } else {\n            currLayerList.splice(elIndex, 1, el);\n          }\n        } else {\n          if (!isNoElement) {\n            currLayerList.splice(elIndex, 1);\n          }\n        }\n      });\n    },\n    updateElementInfo: function updateElementInfo(typeName, eleInfo) {\n      var _this3 = this;\n\n      if (eleInfo) {// console.log(eleInfo.id);\n      }\n\n      if (typeName === \"normal\") {\n        var eleIndex = this.currProductLayerList.findIndex(function (el) {\n          return el.id === eleInfo.id;\n        });\n        var isNoElement = eleIndex === -1;\n        var checked = eleInfo.checked,\n            latestTime = eleInfo.latestTime,\n            time = eleInfo.time,\n            name = eleInfo.name,\n            timeFormat = eleInfo.timeFormat,\n            timeList = eleInfo.timeList,\n            id = eleInfo.id;\n        var currTime = latestTime || time;\n\n        if (checked) {\n          var item = {\n            currTime: currTime,\n            showTime: moment(currTime, \"YYYYMMDDHHmm\").format(timeFormat),\n            id: id,\n            name: name,\n            timeList: timeList\n          };\n\n          if (isNoElement) {\n            this.currProductLayerList.unshift(item);\n          } else {\n            this.currProductLayerList.splice(eleIndex, 1, item);\n          }\n        } else {\n          if (!isNoElement) {\n            this.currProductLayerList.splice(eleIndex, 1);\n          }\n        }\n      } else if (typeName === \"stationPup\") {\n        //单站pup\n        var _eleIndex = this.currProductLayerList.findIndex(function (el) {\n          return el.id === _this3.stationPup.moduleId;\n        });\n\n        var _isNoElement = _eleIndex === -1;\n\n        if (this.stationPup.currEleId && this.stationPup.currStationId) {\n          var _item = {\n            currTime: this.stationPup.currEleTime,\n            showTime: moment(this.stationPup.currEleTime, \"YYYYMMDDHHmm\").format(this.stationPup.timeFormat),\n            id: this.stationPup.moduleId,\n            name: \"单站PUP\",\n            timeList: this.stationPup.currEleTimeList\n          };\n\n          if (_isNoElement) {\n            this.currProductLayerList.unshift(_item);\n          } else {\n            this.currProductLayerList.splice(_eleIndex, 1, _item);\n          }\n        } else {\n          if (!_isNoElement) {\n            this.currProductLayerList.splice(_eleIndex, 1);\n          }\n        }\n      }\n    },\n    // 左右调整时间\n    onTuningTime: function onTuningTime(sign, item) {\n      var id = item.id,\n          currTime = item.currTime,\n          timeList = item.timeList;\n      var currIndex = timeList.findIndex(function (t) {\n        return t === currTime;\n      });\n      var lastIndex = timeList.length - 1;\n      var nextIndex = currIndex + sign;\n\n      if (nextIndex < 0) {\n        nextIndex = 0;\n      } else if (nextIndex > lastIndex) {\n        nextIndex = lastIndex;\n      }\n\n      var cTime = timeList[nextIndex];\n      if (currTime === cTime) return; // 单站pup\n\n      if (id === \"stp\") {\n        this.stp_update_times({\n          currEleTime: cTime,\n          currEleTimeList: timeList\n        });\n      } else if (id === \"fw_short_term\") {\n        // 短期预报\n        var time = moment(cTime, \"YYYYMMDDHHmm\");\n        var date = time.clone().startOf(\"day\");\n        var hour = time.format(\"HH\");\n        this.fw_update_short_term_time({\n          date: date,\n          hour: hour\n        });\n      } else if (id === \"fw_short_time\") {\n        // 短时预报\n        this.fw_update_short_time_time({\n          date: cTime\n        });\n      } else if (id === \"fw_warn_state\") {\n        // 国家级预警\n        var _time = moment(cTime, \"YYYYMMDDHHmm\");\n\n        var _date4 = _time.clone().startOf(\"day\");\n\n        var _hour3 = _time.format(\"HH\");\n\n        this.fw_update_warn_state_time({\n          date: _date4,\n          hour: _hour3\n        });\n      } else if (id === \"fw_warn_province\") {\n        // 省级预警\n        var _time2 = moment(cTime, \"YYYYMMDDHHmm\");\n\n        var _date5 = _time2.clone().startOf(\"day\");\n\n        var _hour4 = _time2.format(\"HH\");\n\n        var minute = _time2.format(\"mm\");\n\n        this.fw_update_warn_province_time({\n          date: _date5,\n          hour: _hour4,\n          minute: minute\n        });\n      } else if (id === \"vf_ncep\" || id === \"vf_ec\") {\n        // 数值预报\n        var _time3 = moment(cTime, \"YYYYMMDDHHmm\");\n\n        var _date6 = _time3.clone().startOf(\"day\");\n\n        var _hour5 = _time3.format(\"HH\");\n\n        this.vf_update_time({\n          id: id.split(\"_\")[1],\n          date: _date6,\n          hour: _hour5\n        });\n      } else {\n        // 综合实况\n        this.tuning_element_time({\n          id: id,\n          time: cTime\n        });\n      }\n    },\n    // 点击删除要素(图层)\n    onClickDeleteElement: function onClickDeleteElement(item) {\n      var id = item.id; // 单站pup\n\n      if (id === \"stp\") {\n        this.stp_set_null_element_id();\n        this.stp_radio_element(\"\");\n      } else if (id === \"fw_short_term\") {\n        // 短期预报\n        this.fw_update_short_term({\n          key: \"aging\",\n          value: \"\"\n        });\n      } else if (id === \"fw_short_time\") {\n        // 短时预报\n        this.fw_update_short_time({\n          key: \"eleList\",\n          value: \"\"\n        });\n      } else if (id === \"fw_warn_state\") {\n        // 国家级预警\n        this.fw_update_warn_state({\n          key: \"aging\",\n          value: \"\"\n        });\n      } else if (id === \"fw_warn_province\") {\n        // 省级预警\n        this.fw_update_warn_province({\n          key: \"eleList\",\n          value: \"\"\n        });\n      } else if (id === \"vf_ncep\" || id === \"vf_ec\") {\n        // 数值预报\n        this.vf_update({\n          sign: \"element\",\n          value: \"\"\n        }); //只有选中对应的模式才能删除对应的控制\n      } else {\n        // 综合实况\n        this.delete_element(item.id);\n      }\n    },\n    // 隐藏显示图层\n    onHideShowLayer: function onHideShowLayer(item) {\n      // console.log('显示隐藏图层');\n      // console.log(item);\n      // console.log(this.showHideLayerHash);\n      this.show_hide_layer(item.id);\n    },\n    // 删除所有图层\n    onClickDeleteAllLayer: function onClickDeleteAllLayer() {\n      this.delete_all_element();\n    },\n    // 是否有图例\n    isHasLegend: function isHasLegend(id) {\n      return eleOption[id].isHasLegend;\n    }\n  })\n};",{"version":3,"sources":["D:\\program\\frontend\\src\\views\\synthesis\\layer-manage\\LayerManage.js"],"names":["moment","_","eleOption","createNamespacedHelpers","mapState","mapGetters","mapMutations","mapActions","name","components","data","isSpread","currTabId","tabs","id","productLayerList1","productLayerList2","productLayerList3","productLayerList4","warnLayerList1","warnLayerList2","warnLayerList3","warnLayerList4","computed","currProductLayerList","ssIndex","currWarnLayerList","watch","created","debouncedDeleteAllLayer","debounce","onClickDeleteAllLayer","mounted","cancelSubscribe","$store","subscribe","mutation","state","type","fcstWarnAndValueFcstInfo","checkedHourEleList","station","hourEleList","filter","el","checked","forEach","eleInfo","cloneDeep","currHour","payload","updateElementInfo","checkedHourEleList1","severeWeather","conditionKey","eleInfo1","eleInfo2","eleInfo3","beforeDestroy","methods","manageList","fcstWarning","shortTerm","date","hour","aging","timeList","fw_short_term","timeFormat","typeName","currTime","format","push","showTime","shortTime","eleList","fw_short_time","checkedEle","find","stateWarn","fw_warn_state","provinceWarn","minute","fw_warn_province","valueFcst","typeItem","typeEleList","typeEleId","currEle","manageId","layerTypeName","currLayerList","elIndex","findIndex","item","isNoElement","unshift","splice","eleIndex","latestTime","time","stationPup","moduleId","currEleId","currStationId","currEleTime","currEleTimeList","onTuningTime","sign","currIndex","t","lastIndex","length","nextIndex","cTime","stp_update_times","clone","startOf","fw_update_short_term_time","fw_update_short_time_time","fw_update_warn_state_time","fw_update_warn_province_time","vf_update_time","split","tuning_element_time","onClickDeleteElement","stp_set_null_element_id","stp_radio_element","fw_update_short_term","key","value","fw_update_short_time","fw_update_warn_state","fw_update_warn_province","vf_update","delete_element","onHideShowLayer","show_hide_layer","delete_all_element","isHasLegend"],"mappings":"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","sourcesContent":["import * as moment from \"moment\";\r\nimport _ from \"lodash\";\r\nimport eleOption from \"../element-option\";\r\n\r\nimport { createNamespacedHelpers } from \"vuex\";\r\nconst {\r\n  mapState,\r\n  mapGetters,\r\n  mapMutations,\r\n  mapActions\r\n} = createNamespacedHelpers(\"synthesis\");\r\n\r\nexport default {\r\n  name: \"layer-manage\",\r\n  components: {},\r\n  data() {\r\n    return {\r\n      isSpread: true,\r\n      currTabId: \"product\",\r\n      tabs: [\r\n        {\r\n          id: \"product\",\r\n          name: \"产品图层\"\r\n        },\r\n        {\r\n          id: \"warning\",\r\n          name: \"报警图层\"\r\n        }\r\n      ],\r\n      productLayerList1: [],\r\n      productLayerList2: [],\r\n      productLayerList3: [],\r\n      productLayerList4: [],\r\n      warnLayerList1: [],\r\n      warnLayerList2: [],\r\n      warnLayerList3: [],\r\n      warnLayerList4: []\r\n    };\r\n  },\r\n  computed: {\r\n    ...mapState([\"ssIndex\"]),\r\n    ...mapGetters([\r\n      \"currSplitScreen\",\r\n      \"showHideLayerHash\",\r\n      \"stationPup\",\r\n      \"station\",\r\n      \"severeWeather\",\r\n      \"fcstWarning\",\r\n      \"valueFcst\"\r\n    ]),\r\n    currProductLayerList() {\r\n      return this[\"productLayerList\" + this.ssIndex];\r\n    },\r\n    currWarnLayerList() {\r\n      return this[\"warnLayerList\" + this.ssIndex];\r\n    }\r\n  },\r\n  watch: {\r\n    currProductLayerList(currProductLayerList) {\r\n      // console.log(currProductLayerList)\r\n    }\r\n  },\r\n  created() {\r\n    this.debouncedDeleteAllLayer = _.debounce(this.onClickDeleteAllLayer, 300);\r\n  },\r\n\r\n  mounted() {\r\n    // 订阅store中的mutations(只需要其中的一部分)\r\n    this.cancelSubscribe = this.$store.subscribe((mutation, state) => {\r\n      // debugger;\r\n      switch (mutation.type) {\r\n        case \"synthesis/fw_update_short_term_time\":\r\n        case \"synthesis/fw_update_short_term\":\r\n          //预报预警_短期预报\r\n          this.fcstWarnAndValueFcstInfo(\"fw_short_term\");\r\n          break;\r\n        case \"synthesis/fw_update_short_time_time\":\r\n        case \"synthesis/fw_update_short_time\":\r\n          //预报预警_短时预报\r\n          this.fcstWarnAndValueFcstInfo(\"fw_short_time\");\r\n          break;\r\n        case \"synthesis/fw_update_warn_state_time\":\r\n        case \"synthesis/fw_update_warn_state\":\r\n          // 预报预警_国家预警\r\n          this.fcstWarnAndValueFcstInfo(\"fw_warn_state\");\r\n          break;\r\n        case \"synthesis/fw_update_warn_province_time\":\r\n        case \"synthesis/fw_update_warn_province\":\r\n          // 预报预警_省级预警\r\n          this.fcstWarnAndValueFcstInfo(\"fw_warn_province\");\r\n          break;\r\n        case \"synthesis/vf_update_time\":\r\n        case \"synthesis/vf_update\":\r\n          this.fcstWarnAndValueFcstInfo(\"vf\");\r\n          // 数值预报\r\n          break;\r\n\r\n        case \"synthesis/st_update_hour\":\r\n          // 自动站:小时选择\r\n          const checkedHourEleList = this.station.hourEleList.filter(\r\n            el => el.checked\r\n          );\r\n          checkedHourEleList.forEach(el => {\r\n            const eleInfo = Object.assign(_.cloneDeep(el), {\r\n              currHour: mutation.payload\r\n            });\r\n            this.updateElementInfo(\"normal\", eleInfo);\r\n          });\r\n          break;\r\n        case \"synthesis/sw_update_hour\":\r\n          // 强天气:小时选择\r\n          const checkedHourEleList1 = this.severeWeather.hourEleList.filter(\r\n            el => el.checked\r\n          );\r\n          checkedHourEleList1.forEach(el => {\r\n            const eleInfo = Object.assign(_.cloneDeep(el), {\r\n              currHour: mutation.payload\r\n            });\r\n            this.updateElementInfo(\"normal\", eleInfo);\r\n          });\r\n          break;\r\n        case \"synthesis/sw_update_element_condition\":\r\n          // 强天气:观测\r\n          if (mutation.payload.conditionKey === \"currObserve\") {\r\n            const eleInfo1 = _.cloneDeep(mutation.payload);\r\n            this.updateElementInfo(\"normal\", eleInfo1);\r\n          }\r\n          break;\r\n        case \"synthesis/update_element_time\":\r\n          // 所有:更新数据时间\r\n          const eleInfo2 = Object.assign(_.cloneDeep(mutation.payload), {\r\n            currHour: this.severeWeather.currHour\r\n          });\r\n          this.updateElementInfo(\"normal\", eleInfo2);\r\n          break;\r\n        case \"synthesis/sn_level_change\":\r\n        // SWAN拼图_层次更新\r\n        case \"synthesis/sn_aging_change\":\r\n        // SWAN拼图_时效更新\r\n        case \"synthesis/st_threshold_change\":\r\n        // 自动站: 阀值更新\r\n        case \"synthesis/cp_aging_change\":\r\n          //云图: 更新时效\r\n          const eleInfo3 = _.cloneDeep(mutation.payload);\r\n          this.updateElementInfo(\"normal\", eleInfo3);\r\n          break;\r\n        case \"synthesis/stp_set_null_element_id\":\r\n        // 单站pup: 清空当前选中的要素id\r\n        case \"synthesis/stp_update_station_id\":\r\n        // 单站pup: 更新站点\r\n        case \"synthesis/stp_update_times\":\r\n          // 单站pup: 更新时间\r\n          this.updateElementInfo(\"stationPup\");\r\n          break;\r\n      }\r\n    });\r\n  },\r\n\r\n  beforeDestroy() {\r\n    this.cancelSubscribe();\r\n  },\r\n\r\n  methods: {\r\n    ...mapMutations([\r\n      \"stp_update_times\",\r\n      \"stp_set_null_element_id\",\r\n      \"stp_radio_element\",\r\n      \"fw_update_short_term_time\",\r\n      \"fw_update_short_time_time\",\r\n      \"fw_update_warn_state_time\",\r\n      \"fw_update_warn_province_time\",\r\n      \"fw_update_short_term\",\r\n      \"fw_update_short_time\",\r\n      \"fw_update_warn_state\",\r\n      \"fw_update_warn_province\",\r\n      \"vf_update\",\r\n      \"vf_update_time\",\r\n      \"show_hide_layer\"\r\n    ]),\r\n    ...mapActions([\r\n      \"tuning_element_time\",\r\n      \"delete_element\",\r\n      \"delete_all_element\"\r\n    ]),\r\n\r\n    fcstWarnAndValueFcstInfo(type) {\r\n      const manageList = [];\r\n\r\n      switch (type) {\r\n        case \"fw_short_term\":\r\n          {\r\n            const { date, hour, aging, timeList } = this.fcstWarning.shortTerm;\r\n            const { timeFormat, typeName } = eleOption.fw_short_term;\r\n            const checked = aging !== \"\";\r\n            if (date) {\r\n              const id = \"fw_short_term\";\r\n              if (checked) {\r\n                const currTime = date.format(\"YYYYMMDD\") + hour + \"00\";\r\n                const name = typeName + \"(\" + aging + \"h)\";\r\n                manageList.push({\r\n                  checked,\r\n                  currTime,\r\n                  showTime: moment(currTime, \"YYYYMMDDHHmm\").format(timeFormat),\r\n                  id,\r\n                  name,\r\n                  timeList\r\n                });\r\n              } else {\r\n                manageList.push({\r\n                  checked,\r\n                  id\r\n                });\r\n              }\r\n            }\r\n          }\r\n          break;\r\n        case \"fw_short_time\":\r\n          {\r\n            const { date, timeList, eleList } = this.fcstWarning.shortTime;\r\n            const { timeFormat, typeName } = eleOption.fw_short_time;\r\n            const checkedEle = eleList.find(el => el.checked);\r\n            if (date) {\r\n              const id = \"fw_short_time\";\r\n              if (checkedEle) {\r\n                //有值即代表选中\r\n                const currTime = date;\r\n                const name = typeName + \"(\" + checkedEle.name + \")\";\r\n                manageList.push({\r\n                  checked: true,\r\n                  currTime,\r\n                  showTime: moment(currTime, \"YYYYMMDDHHmm\").format(timeFormat),\r\n                  id,\r\n                  name,\r\n                  timeList\r\n                });\r\n              } else {\r\n                manageList.push({\r\n                  checked: false,\r\n                  id\r\n                });\r\n              }\r\n            }\r\n          }\r\n          break;\r\n        case \"fw_warn_state\":\r\n          {\r\n            const { date, hour, aging, timeList } = this.fcstWarning.stateWarn;\r\n            const { timeFormat, typeName } = eleOption.fw_warn_state;\r\n            const checked = aging !== \"\";\r\n            if (date) {\r\n              const id = \"fw_warn_state\";\r\n              if (checked) {\r\n                const currTime = date.format(\"YYYYMMDD\") + hour + \"00\";\r\n                const name = typeName + \"(\" + aging + \"h)\";\r\n                manageList.push({\r\n                  checked,\r\n                  currTime,\r\n                  showTime: moment(currTime, \"YYYYMMDDHHmm\").format(timeFormat),\r\n                  id,\r\n                  name,\r\n                  timeList\r\n                });\r\n              } else {\r\n                manageList.push({\r\n                  checked,\r\n                  id\r\n                });\r\n              }\r\n            }\r\n          }\r\n          break;\r\n        case \"fw_warn_province\":\r\n          {\r\n            const {\r\n              date,\r\n              hour,\r\n              minute,\r\n              aging,\r\n              timeList,\r\n              eleList\r\n            } = this.fcstWarning.provinceWarn;\r\n            const { timeFormat, typeName } = eleOption.fw_warn_province;\r\n            const checkedEle = eleList.find(el => el.checked);\r\n            if (date) {\r\n              const id = \"fw_warn_province\";\r\n              if (checkedEle) {\r\n                const currTime = date.format(\"YYYYMMDD\") + hour + minute;\r\n                const name = typeName + \"(\" + checkedEle.name + aging + \"h)\";\r\n                manageList.push({\r\n                  checked: true,\r\n                  currTime,\r\n                  showTime: moment(currTime, \"YYYYMMDDHHmm\").format(timeFormat),\r\n                  id,\r\n                  name,\r\n                  timeList\r\n                });\r\n              } else {\r\n                manageList.push({\r\n                  checked: false,\r\n                  id\r\n                });\r\n              }\r\n            }\r\n          }\r\n          break;\r\n        case \"vf\":\r\n          this.valueFcst.forEach(typeItem => {\r\n            const {\r\n              id,\r\n              date,\r\n              hour,\r\n              aging,\r\n              timeList,\r\n              typeEleList,\r\n              typeEleId\r\n            } = typeItem;\r\n            const currEle = typeEleList\r\n              .find(el => el.id === typeEleId)\r\n              .eleList.find(el => el.checked);\r\n            if (date) {\r\n              const manageId = \"vf_\" + id;\r\n              if (currEle) {\r\n                const { timeFormat, typeName } = eleOption[manageId];\r\n                const currTime = date.format(\"YYYYMMDD\") + hour + \"00\";\r\n                const name = typeName + \"(\" + currEle.name + aging + \")\";\r\n                manageList.push({\r\n                  checked: true,\r\n                  currTime,\r\n                  showTime: moment(currTime, \"YYYYMMDDHHmm\").format(timeFormat),\r\n                  id: manageId,\r\n                  name,\r\n                  timeList\r\n                });\r\n              } else {\r\n                manageList.push({\r\n                  checked: false,\r\n                  id: manageId\r\n                });\r\n              }\r\n            }\r\n          });\r\n          break;\r\n      }\r\n\r\n      // console.log(manageList);\r\n\r\n      manageList.forEach(el => {\r\n        let layerTypeName = \"\";\r\n        if (el.id === \"fw_warn_state\" || el.id === \"fw_warn_province\") {\r\n          layerTypeName = \"currWarnLayerList\";\r\n        } else {\r\n          layerTypeName = \"currProductLayerList\";\r\n        }\r\n        const currLayerList = this[layerTypeName];\r\n\r\n        const elIndex = currLayerList.findIndex(item => item.id === el.id);\r\n        const isNoElement = elIndex === -1;\r\n        if (el.checked) {\r\n          if (isNoElement) {\r\n            currLayerList.unshift(el);\r\n          } else {\r\n            currLayerList.splice(elIndex, 1, el);\r\n          }\r\n        } else {\r\n          if (!isNoElement) {\r\n            currLayerList.splice(elIndex, 1);\r\n          }\r\n        }\r\n      });\r\n    },\r\n\r\n    updateElementInfo(typeName, eleInfo) {\r\n      if (eleInfo) {\r\n        // console.log(eleInfo.id);\r\n      }\r\n      if (typeName === \"normal\") {\r\n        const eleIndex = this.currProductLayerList.findIndex(\r\n          el => el.id === eleInfo.id\r\n        );\r\n        const isNoElement = eleIndex === -1;\r\n        const {\r\n          checked,\r\n          latestTime,\r\n          time,\r\n          name,\r\n          timeFormat,\r\n          timeList,\r\n          id\r\n        } = eleInfo;\r\n        const currTime = latestTime || time;\r\n        if (checked) {\r\n          const item = {\r\n            currTime,\r\n            showTime: moment(currTime, \"YYYYMMDDHHmm\").format(timeFormat),\r\n            id,\r\n            name,\r\n            timeList\r\n          };\r\n          if (isNoElement) {\r\n            this.currProductLayerList.unshift(item);\r\n          } else {\r\n            this.currProductLayerList.splice(eleIndex, 1, item);\r\n          }\r\n        } else {\r\n          if (!isNoElement) {\r\n            this.currProductLayerList.splice(eleIndex, 1);\r\n          }\r\n        }\r\n      } else if (typeName === \"stationPup\") {\r\n        //单站pup\r\n        const eleIndex = this.currProductLayerList.findIndex(\r\n          el => el.id === this.stationPup.moduleId\r\n        );\r\n        const isNoElement = eleIndex === -1;\r\n        if (this.stationPup.currEleId && this.stationPup.currStationId) {\r\n          const item = {\r\n            currTime: this.stationPup.currEleTime,\r\n            showTime: moment(\r\n              this.stationPup.currEleTime,\r\n              \"YYYYMMDDHHmm\"\r\n            ).format(this.stationPup.timeFormat),\r\n            id: this.stationPup.moduleId,\r\n            name: \"单站PUP\",\r\n            timeList: this.stationPup.currEleTimeList\r\n          };\r\n          if (isNoElement) {\r\n            this.currProductLayerList.unshift(item);\r\n          } else {\r\n            this.currProductLayerList.splice(eleIndex, 1, item);\r\n          }\r\n        } else {\r\n          if (!isNoElement) {\r\n            this.currProductLayerList.splice(eleIndex, 1);\r\n          }\r\n        }\r\n      }\r\n    },\r\n\r\n    // 左右调整时间\r\n    onTuningTime(sign, item) {\r\n      const { id, currTime, timeList } = item;\r\n      const currIndex = timeList.findIndex(t => t === currTime);\r\n      const lastIndex = timeList.length - 1;\r\n      let nextIndex = currIndex + sign;\r\n      if (nextIndex < 0) {\r\n        nextIndex = 0;\r\n      } else if (nextIndex > lastIndex) {\r\n        nextIndex = lastIndex;\r\n      }\r\n      const cTime = timeList[nextIndex];\r\n\r\n      if (currTime === cTime) return;\r\n      \r\n      // 单站pup\r\n      if (id === \"stp\") {\r\n        this.stp_update_times({\r\n          currEleTime: cTime,\r\n          currEleTimeList: timeList\r\n        });\r\n      } else if (id === \"fw_short_term\") {\r\n        // 短期预报\r\n        const time = moment(cTime, \"YYYYMMDDHHmm\");\r\n        const date = time.clone().startOf(\"day\");\r\n        const hour = time.format(\"HH\");\r\n        this.fw_update_short_term_time({ date, hour });\r\n      } else if (id === \"fw_short_time\") {\r\n        // 短时预报\r\n        this.fw_update_short_time_time({ date: cTime });\r\n      } else if (id === \"fw_warn_state\") {\r\n        // 国家级预警\r\n        const time = moment(cTime, \"YYYYMMDDHHmm\");\r\n        const date = time.clone().startOf(\"day\");\r\n        const hour = time.format(\"HH\");\r\n        this.fw_update_warn_state_time({ date, hour });\r\n      } else if (id === \"fw_warn_province\") {\r\n        // 省级预警\r\n        const time = moment(cTime, \"YYYYMMDDHHmm\");\r\n        const date = time.clone().startOf(\"day\");\r\n        const hour = time.format(\"HH\");\r\n        const minute = time.format(\"mm\");\r\n        this.fw_update_warn_province_time({ date, hour, minute });\r\n      } else if (id === \"vf_ncep\" || id === \"vf_ec\") {\r\n        // 数值预报\r\n        const time = moment(cTime, \"YYYYMMDDHHmm\");\r\n        const date = time.clone().startOf(\"day\");\r\n        const hour = time.format(\"HH\");\r\n        this.vf_update_time({ id: id.split(\"_\")[1], date, hour });\r\n      } else {\r\n        // 综合实况\r\n        this.tuning_element_time({ id, time: cTime });\r\n      }\r\n    },\r\n\r\n    // 点击删除要素(图层)\r\n    onClickDeleteElement(item) {\r\n      const { id } = item;\r\n      // 单站pup\r\n      if (id === \"stp\") {\r\n        this.stp_set_null_element_id();\r\n        this.stp_radio_element(\"\");\r\n      } else if (id === \"fw_short_term\") {\r\n        // 短期预报\r\n        this.fw_update_short_term({ key: \"aging\", value: \"\" });\r\n      } else if (id === \"fw_short_time\") {\r\n        // 短时预报\r\n        this.fw_update_short_time({ key: \"eleList\", value: \"\" });\r\n      } else if (id === \"fw_warn_state\") {\r\n        // 国家级预警\r\n        this.fw_update_warn_state({ key: \"aging\", value: \"\" });\r\n      } else if (id === \"fw_warn_province\") {\r\n        // 省级预警\r\n        this.fw_update_warn_province({ key: \"eleList\", value: \"\" });\r\n      } else if (id === \"vf_ncep\" || id === \"vf_ec\") {\r\n        // 数值预报\r\n        this.vf_update({ sign: \"element\", value: \"\" }); //只有选中对应的模式才能删除对应的控制\r\n      } else {\r\n        // 综合实况\r\n        this.delete_element(item.id);\r\n      }\r\n    },\r\n\r\n    // 隐藏显示图层\r\n    onHideShowLayer(item) {\r\n      // console.log('显示隐藏图层');\r\n      // console.log(item);\r\n      // console.log(this.showHideLayerHash);\r\n      this.show_hide_layer(item.id);\r\n    },\r\n\r\n    // 删除所有图层\r\n    onClickDeleteAllLayer() {\r\n      this.delete_all_element();\r\n    },\r\n\r\n    // 是否有图例\r\n    isHasLegend(id) {\r\n      return eleOption[id].isHasLegend;\r\n    }\r\n  }\r\n};\r\n"]}]}