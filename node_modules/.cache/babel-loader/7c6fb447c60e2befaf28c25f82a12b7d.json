{"remainingRequest":"D:\\program\\frontend\\node_modules\\babel-loader\\lib\\index.js!D:\\program\\frontend\\src\\components\\share\\map-nav\\MapNav.js?vue&type=script&lang=js&","dependencies":[{"path":"D:\\program\\frontend\\src\\components\\share\\map-nav\\MapNav.js","mtime":1553855602891},{"path":"D:\\program\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\program\\frontend\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.array.find\";\nimport \"core-js/modules/es6.function.name\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.number.constructor\";\nimport L from \"leaflet\"; // import 'proj4';\n// import 'proj4leaflet';\n\nimport * as axios from \"axios\";\nexport default {\n  name: \"map-nav\",\n  components: {},\n  model: {\n    prop: \"sign\",\n    event: \"change\"\n  },\n  props: {\n    sign: {\n      type: Number,\n      required: true\n    },\n    isSync: {\n      type: Boolean,\n      default: false\n    },\n    // list = [\n    //   latitude: 31.41\n    //   longitude: 121.46\n    //   name: \"\"\n    //   number: 58362\n    //   province: \"\"\n    // ]\n    list: {\n      type: Array,\n      required: true\n    }\n  },\n  data: function data() {\n    return {};\n  },\n  computed: {},\n  watch: {\n    list: function list(_list) {\n      // console.log(list);\n      // console.log(this.map);\n      if (!this.map) return;\n\n      if (_list.length) {\n        this.renderData();\n        this.addCheckedMarker();\n      }\n    },\n    sign: function sign() {\n      this.addCheckedMarker();\n    }\n  },\n  mounted: function mounted() {\n    this.imitMap();\n    this.renderData();\n    this.addCheckedMarker();\n  },\n  beforeDestroy: function beforeDestroy() {},\n  methods: {\n    imitMap: function imitMap() {\n      // var lcc_attrs = {\n      //   proj4string:\n      //     \"+a=6378137.0 +b=6356752.3142 +y_0=3462665.93846 +lon_0=120.0 +proj=lcc +x_0=5752704.73052 +units=m +lat_2=30.0 +lat_1=10.0 +lat_0=25.0\",\n      //   resolutions: [\n      //     0.0,\n      //     0.0,\n      //     24197.67378,\n      //     12098.83689,\n      //     6049.418445,\n      //     3024.709222,\n      //     1493.683567,\n      //     742.259932\n      //   ],\n      //   bounds: (0.0, 0.0, 12098836.88981346, 10618170.208304904),\n      //   zoom: {\n      //     min: 2,\n      //     max: 7\n      //   }\n      // };\n      // var transformation = new L.Transformation(\n      //   1,\n      //   21136.401573461,\n      //   -1,\n      //   10718170.208304904\n      // );\n      // var lcc_crs = new L.Proj.CRS(\"EPSG:2154\", lcc_attrs.proj4string, {\n      //   transformation: transformation,\n      //   resolutions: lcc_attrs.resolutions //rss\n      // });\n      this.map = L.map(this.$refs.map, {\n        center: [36.87962060502676, 103.71093750000001],\n        zoom: 3,\n        minZoom: 3,\n        // maxZoom: lcc_attrs.zoom.max, //6,\n        // minZoom: lcc_attrs.zoom.min, //0,\n        // crs: lcc_crs,\n        attributionControl: false,\n        zoomControl: false\n      });\n      this.addBaseLayer(); // this.map.on(\"click\", e => {\n      //   console.log(e);\n      // });\n    },\n    renderData: function renderData() {\n      var _this = this;\n\n      // console.log(this);\n      if (this.layerGroup) {\n        this.layerGroup.remove();\n        this.layerGroup = null;\n      }\n\n      this.layerGroup = L.layerGroup();\n      this.list.forEach(function (el) {\n        var marker = L.circle([el.latitude, el.longitude], {\n          radius: 10,\n          color: \"#080\",\n          pane: \"markerPane\"\n        });\n\n        if (el.name) {\n          marker.bindTooltip(el.name);\n        }\n\n        marker.on(\"click\", function (e) {\n          if (_this.sign === el.number) return;\n\n          _this.$emit(\"change\", el.number);\n        });\n\n        _this.layerGroup.addLayer(marker);\n      });\n      this.layerGroup.addTo(this.map);\n    },\n    // 用marker标记当前选中的marker\n    addCheckedMarker: function addCheckedMarker() {\n      var _this2 = this;\n\n      var checkedItem = this.list.find(function (el) {\n        return el.number === _this2.sign;\n      });\n      if (!checkedItem) return;\n\n      if (this.checkedMarker) {\n        this.checkedMarker.remove();\n        this.checkedMarker = null;\n      }\n\n      this.checkedMarker = L.circle([checkedItem.latitude, checkedItem.longitude], {\n        radius: 10,\n        color: \"red\",\n        pane: \"markerPane\"\n      }).addTo(this.map);\n\n      if (checkedItem.name) {\n        this.checkedMarker.bindTooltip(checkedItem.name);\n      }\n    },\n    // 添加基本图层：边界线\n    addBaseLayer: function addBaseLayer() {\n      var _this3 = this;\n\n      axios.get(\"./json/china.geo.json\").then(function (data) {\n        L.geoJson(data.data, {\n          color: \"#a3abb3\",\n          fill: true,\n          fillColor: \"#fff\",\n          fillOpacity: 1,\n          weight: 0.3,\n          opacity: 1\n        }).addTo(_this3.map);\n      });\n      axios.get(\"./json/countries.geo.json\").then(function (data) {\n        L.geoJson(data.data, {\n          color: \"#FFF\",\n          fill: false,\n          weight: 0.3\n        }).addTo(_this3.map);\n      });\n      axios.get(\"./json/jiuduanxian.json\").then(function (data) {\n        L.geoJSON(data.data, {\n          style: function style(feature) {\n            return {\n              color: \"#fff\",\n              stroke: true,\n              weight: 1\n            };\n          }\n        }).addTo(_this3.map);\n      });\n    }\n  }\n};",{"version":3,"sources":["D:\\program\\frontend\\src\\components\\share\\map-nav\\MapNav.js"],"names":["L","axios","name","components","model","prop","event","props","sign","type","Number","required","isSync","Boolean","default","list","Array","data","computed","watch","map","length","renderData","addCheckedMarker","mounted","imitMap","beforeDestroy","methods","$refs","center","zoom","minZoom","attributionControl","zoomControl","addBaseLayer","layerGroup","remove","forEach","el","marker","circle","latitude","longitude","radius","color","pane","bindTooltip","on","e","number","$emit","addLayer","addTo","checkedItem","find","checkedMarker","get","then","geoJson","fill","fillColor","fillOpacity","weight","opacity","geoJSON","style","feature","stroke"],"mappings":"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","sourcesContent":["import L from \"leaflet\";\r\n// import 'proj4';\r\n// import 'proj4leaflet';\r\nimport * as axios from \"axios\";\r\n\r\nexport default {\r\n  name: \"map-nav\",\r\n  components: {},\r\n  model: {\r\n    prop: \"sign\",\r\n    event: \"change\"\r\n  },\r\n  props: {\r\n    sign: {\r\n      type: Number,\r\n      required: true\r\n    },\r\n\r\n    isSync: {\r\n      type: Boolean,\r\n      default: false\r\n    },\r\n\r\n    // list = [\r\n    //   latitude: 31.41\r\n    //   longitude: 121.46\r\n    //   name: \"\"\r\n    //   number: 58362\r\n    //   province: \"\"\r\n    // ]\r\n    list: {\r\n      type: Array,\r\n      required: true\r\n    }\r\n  },\r\n  data() {\r\n    return {};\r\n  },\r\n  computed: {},\r\n\r\n  watch: {\r\n    list(list) {\r\n      // console.log(list);\r\n      // console.log(this.map);\r\n      if (!this.map) return;\r\n      if (list.length) {\r\n        this.renderData();\r\n        this.addCheckedMarker();\r\n      }\r\n    },\r\n    sign() {\r\n      this.addCheckedMarker();\r\n    }\r\n  },\r\n\r\n  mounted() {\r\n    this.imitMap();\r\n    this.renderData();\r\n    this.addCheckedMarker();\r\n  },\r\n\r\n  beforeDestroy() {},\r\n\r\n  methods: {\r\n    imitMap() {\r\n      // var lcc_attrs = {\r\n      //   proj4string:\r\n      //     \"+a=6378137.0 +b=6356752.3142 +y_0=3462665.93846 +lon_0=120.0 +proj=lcc +x_0=5752704.73052 +units=m +lat_2=30.0 +lat_1=10.0 +lat_0=25.0\",\r\n      //   resolutions: [\r\n      //     0.0,\r\n      //     0.0,\r\n      //     24197.67378,\r\n      //     12098.83689,\r\n      //     6049.418445,\r\n      //     3024.709222,\r\n      //     1493.683567,\r\n      //     742.259932\r\n      //   ],\r\n      //   bounds: (0.0, 0.0, 12098836.88981346, 10618170.208304904),\r\n      //   zoom: {\r\n      //     min: 2,\r\n      //     max: 7\r\n      //   }\r\n      // };\r\n      // var transformation = new L.Transformation(\r\n      //   1,\r\n      //   21136.401573461,\r\n      //   -1,\r\n      //   10718170.208304904\r\n      // );\r\n      // var lcc_crs = new L.Proj.CRS(\"EPSG:2154\", lcc_attrs.proj4string, {\r\n      //   transformation: transformation,\r\n      //   resolutions: lcc_attrs.resolutions //rss\r\n      // });\r\n\r\n      this.map = L.map(this.$refs.map, {\r\n        center: [36.87962060502676, 103.71093750000001],\r\n        zoom: 3,\r\n        minZoom: 3,\r\n        // maxZoom: lcc_attrs.zoom.max, //6,\r\n        // minZoom: lcc_attrs.zoom.min, //0,\r\n        // crs: lcc_crs,\r\n        attributionControl: false,\r\n        zoomControl: false\r\n      });\r\n\r\n      this.addBaseLayer();\r\n\r\n      // this.map.on(\"click\", e => {\r\n      //   console.log(e);\r\n      // });\r\n    },\r\n    renderData() {\r\n      // console.log(this);\r\n      if (this.layerGroup) {\r\n        this.layerGroup.remove();\r\n        this.layerGroup = null;\r\n      }\r\n      this.layerGroup = L.layerGroup();\r\n      this.list.forEach(el => {\r\n        const marker = L.circle([el.latitude, el.longitude], {\r\n          radius: 10,\r\n          color: \"#080\",\r\n          pane: \"markerPane\"\r\n        });\r\n        if (el.name) {\r\n          marker.bindTooltip(el.name);\r\n        }\r\n        marker.on(\"click\", e => {\r\n          if (this.sign === el.number) return;\r\n          this.$emit(\"change\", el.number);\r\n        });\r\n        this.layerGroup.addLayer(marker);\r\n      });\r\n      this.layerGroup.addTo(this.map);\r\n    },\r\n\r\n    // 用marker标记当前选中的marker\r\n    addCheckedMarker() {\r\n      const checkedItem = this.list.find(el => el.number === this.sign);\r\n      if (!checkedItem) return;\r\n      if (this.checkedMarker) {\r\n        this.checkedMarker.remove();\r\n        this.checkedMarker = null;\r\n      }\r\n      this.checkedMarker = L.circle(\r\n        [checkedItem.latitude, checkedItem.longitude],\r\n        { radius: 10, color: \"red\", pane: \"markerPane\" }\r\n      ).addTo(this.map);\r\n      if (checkedItem.name) {\r\n        this.checkedMarker.bindTooltip(checkedItem.name);\r\n      }\r\n    },\r\n\r\n    // 添加基本图层：边界线\r\n    addBaseLayer() {\r\n      axios.get(\"./json/china.geo.json\").then(data => {\r\n        L.geoJson(data.data, {\r\n          color: \"#a3abb3\",\r\n          fill: true,\r\n          fillColor: \"#fff\",\r\n          fillOpacity: 1,\r\n          weight: 0.3,\r\n          opacity: 1\r\n        }).addTo(this.map);\r\n      });\r\n      axios.get(\"./json/countries.geo.json\").then(data => {\r\n        L.geoJson(data.data, {\r\n          color: \"#FFF\",\r\n          fill: false,\r\n          weight: 0.3\r\n        }).addTo(this.map);\r\n      });\r\n      axios.get(\"./json/jiuduanxian.json\").then(data => {\r\n        L.geoJSON(data.data, {\r\n          style: function(feature) {\r\n            return { color: \"#fff\", stroke: true, weight: 1 };\r\n          }\r\n        }).addTo(this.map);\r\n      });\r\n    }\r\n  }\r\n};\r\n"]}]}