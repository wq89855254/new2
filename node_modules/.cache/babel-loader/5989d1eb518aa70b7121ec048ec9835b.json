{"remainingRequest":"D:\\program\\frontend\\node_modules\\babel-loader\\lib\\index.js!D:\\program\\frontend\\src\\store\\modules\\synthesis\\state-method.js","dependencies":[{"path":"D:\\program\\frontend\\src\\store\\modules\\synthesis\\state-method.js","mtime":1553855602862},{"path":"D:\\program\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\program\\frontend\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _toConsumableArray from \"D:\\\\program\\\\frontend\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/toConsumableArray\";\nimport _JSON$stringify from \"D:\\\\program\\\\frontend\\\\node_modules\\\\@babel\\\\runtime-corejs2/core-js/json/stringify\";\nimport \"core-js/modules/es6.function.name\";\nimport \"core-js/modules/web.dom.iterable\";\nexport default {\n  printInfo: function printInfo(state) {\n    var allEleList = this.getAllElements(state);\n    var hash = {};\n    allEleList.forEach(function (el) {\n      var id = el.id,\n          name = el.name,\n          dataType = el.dataType;\n      hash[id] = {\n        id: id,\n        name: name,\n        dataType: dataType\n      };\n    });\n    console.log(_JSON$stringify(hash, null, \"\\t\"));\n  },\n  // 得到强天气所有要素\n  getSwElements: function getSwElements(state) {\n    var currSplitScreen = state[\"splitScreen\" + state.ssIndex]; // 将强天气下的所有要素合并到一块\n\n    var severeWeather = currSplitScreen.severeWeather;\n    return [].concat(_toConsumableArray(severeWeather.hourEleList), _toConsumableArray(severeWeather.fy4EleList), _toConsumableArray(severeWeather.traceEleList));\n  },\n  // 得到云图所有要素\n  getCpElements: function getCpElements(state) {\n    var currSplitScreen = state[\"splitScreen\" + state.ssIndex]; // 将云图下的所有要素合并到一块\n\n    var cloudPicture = currSplitScreen.cloudPicture;\n    return cloudPicture.tabList.reduce(function (curr, item) {\n      if (item.classifyList) {\n        curr = curr.concat(item.classifyList.reduce(function (inCurr, el) {\n          return inCurr.concat(el.eleList);\n        }, []));\n      } else {\n        curr = curr.concat(item.eleList);\n      }\n\n      return curr;\n    }, []);\n  },\n  // 得到pup拼图所有要素\n  getPpElements: function getPpElements(state) {\n    var currSplitScreen = state[\"splitScreen\" + state.ssIndex];\n    var pup = currSplitScreen.pup;\n    return pup.pupEleList;\n  },\n  // 得到SWAN拼图所有要素\n  getSnElements: function getSnElements(state) {\n    var currSplitScreen = state[\"splitScreen\" + state.ssIndex];\n    var swan = currSplitScreen.swan;\n    return swan.eleList;\n  },\n  // 得到自动站所有要素\n  getStElements: function getStElements(state) {\n    var currSplitScreen = state[\"splitScreen\" + state.ssIndex];\n    var station = currSplitScreen.station;\n    return [].concat(_toConsumableArray(station.hourEleList), _toConsumableArray(station.otherEleList), _toConsumableArray(station.warnEleList));\n  },\n  // 得到雷达特征量所有要素\n  getRfElements: function getRfElements(state) {\n    var currSplitScreen = state[\"splitScreen\" + state.ssIndex];\n    return currSplitScreen.radarFeature;\n  },\n  // 得到所有要素\n  getAllElements: function getAllElements(state) {\n    var swEleList = this.getSwElements(state);\n    var cpEleList = this.getCpElements(state);\n    var ppEleList = this.getPpElements(state);\n    var stEleList = this.getStElements(state);\n    var snEleList = this.getSnElements(state);\n    var rfEleList = this.getRfElements(state);\n    return [].concat(_toConsumableArray(swEleList), _toConsumableArray(cpEleList), _toConsumableArray(ppEleList), _toConsumableArray(stEleList), _toConsumableArray(snEleList), _toConsumableArray(rfEleList));\n  }\n};",{"version":3,"sources":["D:\\program\\frontend\\src\\store\\modules\\synthesis\\state-method.js"],"names":["printInfo","state","allEleList","getAllElements","hash","forEach","el","id","name","dataType","console","log","getSwElements","currSplitScreen","ssIndex","severeWeather","hourEleList","fy4EleList","traceEleList","getCpElements","cloudPicture","tabList","reduce","curr","item","classifyList","concat","inCurr","eleList","getPpElements","pup","pupEleList","getSnElements","swan","getStElements","station","otherEleList","warnEleList","getRfElements","radarFeature","swEleList","cpEleList","ppEleList","stEleList","snEleList","rfEleList"],"mappings":"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","sourcesContent":["export default {\r\n  printInfo(state) {\r\n    const allEleList = this.getAllElements(state);\r\n    const hash = {};\r\n    allEleList.forEach(el => {\r\n      const { id, name, dataType } = el;\r\n      hash[id] = { id, name, dataType };\r\n    });\r\n    console.log(JSON.stringify(hash, null, \"\\t\"));\r\n  },\r\n  // 得到强天气所有要素\r\n  getSwElements(state) {\r\n    const currSplitScreen = state[\"splitScreen\" + state.ssIndex];\r\n    // 将强天气下的所有要素合并到一块\r\n    const severeWeather = currSplitScreen.severeWeather;\r\n    return [\r\n      ...severeWeather.hourEleList,\r\n      ...severeWeather.fy4EleList,\r\n      ...severeWeather.traceEleList\r\n    ];\r\n  },\r\n  // 得到云图所有要素\r\n  getCpElements(state) {\r\n    const currSplitScreen = state[\"splitScreen\" + state.ssIndex];\r\n    // 将云图下的所有要素合并到一块\r\n    const cloudPicture = currSplitScreen.cloudPicture;\r\n    return cloudPicture.tabList.reduce((curr, item) => {\r\n      if (item.classifyList) {\r\n        curr = curr.concat(\r\n          item.classifyList.reduce(\r\n            (inCurr, el) => inCurr.concat(el.eleList),\r\n            []\r\n          )\r\n        );\r\n      } else {\r\n        curr = curr.concat(item.eleList);\r\n      }\r\n      return curr;\r\n    }, []);\r\n  },\r\n\r\n  // 得到pup拼图所有要素\r\n  getPpElements(state) {\r\n    const currSplitScreen = state[\"splitScreen\" + state.ssIndex];\r\n    const pup = currSplitScreen.pup;\r\n    return pup.pupEleList;\r\n  },\r\n\r\n  // 得到SWAN拼图所有要素\r\n  getSnElements(state) {\r\n    const currSplitScreen = state[\"splitScreen\" + state.ssIndex];\r\n    const swan = currSplitScreen.swan;\r\n    return swan.eleList;\r\n  },\r\n\r\n  // 得到自动站所有要素\r\n  getStElements(state) {\r\n    const currSplitScreen = state[\"splitScreen\" + state.ssIndex];\r\n    const station = currSplitScreen.station;\r\n    return [\r\n      ...station.hourEleList,\r\n      ...station.otherEleList,\r\n      ...station.warnEleList\r\n    ];\r\n  },\r\n\r\n  // 得到雷达特征量所有要素\r\n  getRfElements(state) {\r\n    const currSplitScreen = state[\"splitScreen\" + state.ssIndex];\r\n    return currSplitScreen.radarFeature;\r\n  },\r\n\r\n  // 得到所有要素\r\n  getAllElements(state) {\r\n    const swEleList = this.getSwElements(state);\r\n    const cpEleList = this.getCpElements(state);\r\n    const ppEleList = this.getPpElements(state);\r\n    const stEleList = this.getStElements(state);\r\n    const snEleList = this.getSnElements(state);\r\n    const rfEleList = this.getRfElements(state);\r\n    return [\r\n      ...swEleList,\r\n      ...cpEleList,\r\n      ...ppEleList,\r\n      ...stEleList,\r\n      ...snEleList,\r\n      ...rfEleList\r\n    ];\r\n  }\r\n};\r\n"]}]}